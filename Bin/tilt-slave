#!/bin/sh

# The command tilt-slaves uses this to launch slaves.

# usage: tilt_slave name n count host
#
# Create count slaves on host by running "bindir/name -s" in the current
# directory where bindir is the directory containing this script.  n is
# used to set window geometry.  The slaves are run in a remote emacs
# displaying on a local xterm.
#
# As a hack, the host "localhost" is treated specially.
#
# This version works at CMU where it is necessary to authenticate to
# (but not mount) our shared file system on the remote host.  You
# probably have to make changes for use at your site.

PATH=/usr/local/bin:/usr/bin:/bin:/usr/ccs/bin:/usr/X11/bin:$PATH
export PATH

case $# in
4)	;;
*)
	echo 1>&2 usage: $0 name n count host
	exit 1
	;;
esac

bindir=`dirname "$0"`
bindir=`cd "$bindir"; pwd`
argname="$1"
argn="$2"
argcount="$3"
arghost="$4"

# If you see scp diagnostics, try "scp -q".
scp="scp"

# Where to run tilt.

tiltdir=`pwd`

# The userid for kinit.  At CMU, this will already be set, so we don't
# care that `whoami` isn't the right thing for all systems.

: ${USER:=`whoami`}

# The X11 title.

title="TIL $tiltdir @ $arghost"

# The X11 geometry specification for window n.

yoffset=`echo "$argn % 5 * 160" | bc`
xoffset=`echo "$argn / 5 * 300" | bc`
nrows=`echo "11 * $argcount" | bc`
geometry="120x$nrows+$xoffset+$yoffset"

# The bourne shell script and emacs lisp code to run remotely.

cmdfile=/tmp/tilt_slave.$$
elisp=/tmp/elisp.$$

cmd='	PATH="'"$PATH"'"
	export PATH

	# We assume that unlinking $cmdfile (in /tmp) wont break
	# anything.
	rm -f '$cmdfile'

	# Required for access to AFS at CMU

	if [ "'"$arghost"'" = localhost ]
	then
		:
	else
		if kinit '$USER'
		then
			:
		else
			exit 1
		fi
	fi

	# Required at CMU, harmless elsewhere.
	
	cat << "END_EMACS" > '$elisp'
(require '\''comint)

(defun nth-tilt-slave (n)
  (let* ((bufname (concat "tilt slave " (int-to-string n)))
	 (buffer (make-comint bufname "'"$bindir/$argname"'" nil "-vs")))
    (switch-to-buffer buffer)
    buffer))

(defun make-tilt-slaves (n split)
  (if (= n 0)
      (balance-windows)
    (progn
      (balance-windows)
      (if split (split-window-vertically))
      (balance-windows)
      (nth-tilt-slave n)
      (make-tilt-slaves (- n 1) t))))
  
(defun tilt-slaves (n)
  (interactive "p")
  (delete-other-windows)
  (make-tilt-slaves n nil))
  
(defun initial-tilt-slaves ()
  (interactive)
; (set-default-font "6x10")  Window resize due to font change here does not work with Exceed for wide (>100) windows
  (if (fboundp '\''menu-bar-mode) (menu-bar-mode -1))
  (delete-file "'$elisp'")
  (tilt-slaves '$argcount'))
END_EMACS
	cd "'"$tiltdir"'"
	exec emacs -nw --no-init-file -l '$elisp' -f initial-tilt-slaves
'

# We put the command into a file because ssh doesn't send the
# command exactly to the remote sh.  Rather than using $tiltdir
# to hold the file (which may be on AFS -- causing
# synchronization problems we don't want to deal with), we
# send it to /tmp on the remote machine.  Ug.

if [ "$arghost" = localhost ]
then
	echo "$cmd" > $cmdfile
else	
	echo "$cmd" > $cmdfile.local
	$scp $cmdfile.local "$arghost:$cmdfile"
	rm -f $cmdfile.local
fi

if [ "$arghost" = localhost ]
then
	exec xterm -bg black -fg yellow -fn 6x10 -geometry "$geometry" \
		-title "$title" -n "$title" -e /bin/sh $cmdfile
else
	# Launch script remotely
	exec xterm -bg black -fg yellow -fn 6x10 -geometry "$geometry" \
		-title "$title" -n "$title" -e ssh -t -o 'ForwardX11 no' \
		"$arghost" exec /bin/sh $cmdfile
fi
