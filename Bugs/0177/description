Number: 0177
Title:       Nonexhaustive match warning is overly pessimistic.
Keywords:    pattern compilation
Submitter:   tom7
Date:        02/09/04
Version:     release candidate  9 Feb 2004
System:      any
Severity:    cosmetic
Problem:     

             TILT sometimes report a nonexhaustive match for exhaustive
             patterns.

Code:        

            fun merge a nil = a
              | merge nil b = b
              | merge (aa as (a::ta)) (bb as (b::tb)) =
                case Int.compare (a, b) of
                    EQUAL => (a :: b :: merge ta tb)
                  | LESS => (a :: merge ta bb)
                  | GREATER => (b :: merge aa tb)


Transcript:
Comments:    

        I added the code to emit this warning during TILT week
        last year. It lives in the thunks that compute the
        defaults (which raise Match or Bind) during pattern
        compilation. However, our pattern compilation strategy
	evaluates these thunks even on exhaustive patterns such
        as the above. This may also mean that we create unreachable
	"raise Match" code.

        I am pretty sure that the Definition requires nonexhaustive
        and redundant match warnings, but I don't have it handy.
Fix: 
Test: *
Owner: *
Status: open
