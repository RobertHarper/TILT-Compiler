Number: 0162
Title:       Queue.delete is broken.
Keywords:    SML/NJ library
Submitter:   swasey
Date:        03/25/03
Version:     CVS
System:      any
Severity:    minor
Problem:
	The helper doFront in ../../Basis/Library/fifo.sml:/delete
	does not filter front elements after the first.  Thus
	Fifo.delete and Queue.delete with predicate fn _ => true can
	return non-empty queues.
Code:        
Transcript:  
Comments:    
	I think the intended Fifo.delete is (untested code):

    fun delete (Q{front, rear}, pred) = let
	  fun doFront [] = {front = doRear(rev rear), rear = []}
	    | doFront (x::r) =
		let val {front,rear} = doFront r
		    val front = if pred x then front else x :: front
		in  {front,rear}
		end
	  and doRear [] = []
	    | doRear (x::r) = if (pred x) then r else x :: (doRear r)
	  in
	    Q(doFront front)
	  end
Fix:
	We should test the code above, use it, and send it along
	to whoever maintains the SML/NJ library.
Test: 
Owner: swasey
Status: open
