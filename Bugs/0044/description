Number: 0044
Title:       TILT on alpha fails TestBasis/Dynamic tests.
Keywords:    alpha backend, alpha runtime, exceptions
Submitter:   David Swasey <swasey@cs.cmu.edu>
Date:        4/11/2001
Version:     CVS
System:	     alpha
Severity:    major
Problem:
	TILT on the alpha doesn't pass the simple tests in TestBasis/Dynamic.

	The Alpha runtime says "Invalid Float operation; probably NAN
	operand; cannot patch result, resuming anyway" This happens
	with other floating point code (eg, when bootstrapping).
Code:
	See mapfile.
Transcript:
	swasey@forth ; ./Main.alpha.exe 
	Defaulting to model DEC3000_500
	TiltPrim tests
	testing ineg overflow...ok
	testing imult overflow...ok
	testing iquot overflow...ok
	testing iquot div...ok
	testing irem div...ok
	testing iplus overflow...ok
	testing iminus overflow...ok
	testing Int.div rounding ...ok
	testing Int.mod rounding ...ok
	testing Int.quot rounding ...ok
	testing Int.rem rounding ...ok
	testing Real.realFloor rounding ...ok
	testing Real.realFloor rounding ...ok
	testing Real.realCeil rounding ...ok
	testing Real.realCeil rounding ...ok
	testing Real.realTrunc rounding ...ok
	testing Real.realTrunc rounding ...ok
	testing Real.realTrunc rounding ...ok
	testing Real.realTrunc rounding ...ok
	testing Real.floor rounding ...ok
	testing Real.floor rounding ...ok
	testing Real.floor rounding ...ok
	testing Real.floor rounding ...ok
	testing Real.ceil rounding ...ok
	testing Real.ceil rounding ...ok
	testing Real.ceil rounding ...ok
	testing Real.ceil rounding ...ok
	testing Real.trunc rounding ...failed [got ~2, expected ~1]
	testing Real.trunc rounding ...ok
	testing Real.trunc rounding ...failed [got ~2, expected ~1]
	testing Real.trunc rounding ...ok
	testing Int32.~ overflow...ok
	testing Int32.* overflow...ok
	testing Int32.div overflow...ok
	testing Int32.div div...ok
	testing Int32.mod div...ok
	testing Int32.quot overflow...ok
	testing Int32.quot div...ok
	testing Int32.rem div...ok
	testing Int32.+ overflow...ok
	testing Int32.- overflow...ok
	testing Int32.abs overflow...ok
	testing Word8.div div...ok
	testing Word8.mod div...ok
	testing Word8.fromString overflow...ok
	testing Word31.div div...ok
	testing Word31.mod div...ok
	testing Word31.fromString overflow...ok
	testing Word32.toLargeInt overflow...ok
	testing Word32.toInt overflow...ok
	testing Word32.div div...ok
	testing Word32.mod div...ok
	testing Word32.fromString overflow...ok
	testing Real.sign domain...Invalid Float operation; probably NAN operand; cannot patch result, resuming anyway
	Invalid Float operation; probably NAN operand; cannot patch result, resuming anyway
	Invalid Float operation; probably NAN operand; cannot patch result, resuming anyway
	ok
	testing Real.compare unordered...Invalid Float operation; probably NAN operand; cannot patch result, resuming anyway
	Invalid Float operation; probably NAN operand; cannot patch result, resuming anyway
	Invalid Float operation; probably NAN operand; cannot patch result, resuming anyway
	ok
	testing Real.checkFloat overflow...ok
	testing Real.checkFloat div...Invalid Float operation; probably NAN operand; cannot patch result, resuming anyway
	Invalid Float operation; probably NAN operand; cannot patch result, resuming anyway
	ok
	testing Real.floor overflow...ok
	testing Real.floor overflow...ok
	testing Real.floor overflow...ok
	testing Real.floor domain...Invalid Float operation; probably NAN operand; cannot patch result, resuming anyway
	Invalid Float operation; probably NAN operand; cannot patch result, resuming anyway
	ok
	testing Real.ceil overflow...ok
	testing Real.ceil overflow...ok
	testing Real.ceil overflow...ok
	testing Real.ceil domain...Invalid Float operation; probably NAN operand; cannot patch result, resuming anyway
	Invalid Float operation; probably NAN operand; cannot patch result, resuming anyway
	ok
	testing Real.trunc overflow...ok
	testing Real.trunc overflow...ok
	testing Real.trunc overflow...ok
	testing Real.trunc domain...Invalid Float operation; probably NAN operand; cannot patch result, resuming anyway
	Invalid Float operation; probably NAN operand; cannot patch result, resuming anyway
	ok
	testing Real.round overflow...ok
	testing Real.round overflow...ok
	testing Real.round overflow...ok
	testing Real.round domain...Invalid Float operation; probably NAN operand; cannot patch result, resuming anyway
	Invalid Float operation; probably NAN operand; cannot patch result, resuming anyway
	ok
	testing Char.chr chr...ok
	testing Char.chr chr...ok
	testing Char.succ chr...ok
	testing Char.pred chr...ok
	
	
	
	PROC #0: Allocated  =      222 kb
	         Copied     =        0 kb
	         Work       =        4 kw
	                                Sum (s)        Count     Min(ms)   Avg(ms)  Max(ms)
	         --------------|-----------------------------------------------------------
	         Total         |      0.137
	           Scheduler   |      0.001 ( 0.7%)        8        0.00      0.12     0.98
	           Mutator     |      0.134 (97.9%)        4        0.98     33.43    78.08
	           GC          |      0.002 ( 1.4%)        6        0.00      0.33     0.98
	         Pause         |      0.003 ( 2.1%)        5        0.00      0.59     1.95
	
	GC:    GCMethod      =          Gen      StackMethod = Normal
	       Ordering   =  Default        ForceSpaceCheck = No   CopyCopy = Unneeded     WorkSharing = Yes     WorkTrack = Yes   Relaxed = No
	       CollectionRate = 2.00
	       Allocated     =       222 kb      Copied     =         0 kb    Replicated  =         0 kb
	       NumGC         =      0            NumMajorGC =   0
	       AvgFramsSize  =    0         AvgStkDepth  =    0           MaxStkDepth  =    0    newStkDepth =    0
	       NumCopied     =        0     NumRoot      =         0      NumConflict  =        0
	       NumShared     =        0     NumWrite     =     11037      NumLocative  =        0
	
	
	
	
	MISC:  Total time    =     0.26 s   maxPhysMem   =      1840      minPageFault =      394    invCtxtSwap  =     5
	       Total Threads =        1     sharedMem    =        39      majPageFault =        0    volCtxtSwap  =    50
	       Processors    =        1
	       Max Threads   =        1     unsharedData =       143                                 swapping     =     0
	                                    unsharedStk  =         2
Comments:
	Dbx catches some floating point exceptions/signals before the
	"Invalid" message is printed.

	The old bug list had this to say:

	(6) floating point is wrong right now
		Currently, we place a trap barrier after each floating point instruction.
		We use the "su" version of the floating point instruction.
		For overflow and division by zero, our signal handler is not even
			called and the OS puts the right answer there.
			For NaNs, the right answer is put there but our
			signal handler is also called.  For this case, we just return.
		The OS handler may not be able to detect the correct answer
			if the floating point instruction's src and dest registers are the same.
Fix:
Test:
Owner: swasey
Status: open
