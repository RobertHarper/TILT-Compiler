cd /usr0/swasey/ml96/Local/Bugs/0065/
tilt -fshowClosureConv mapfile-bug
Warning: setting TILT_LIBDIR to /usr0/swasey/t
Starting compilation           : Mon Nov 19 07:09:48 2001   0.0 sec
Warning: only compiling to assembly because non-native
Mapfile mapfile-bug with 1 units processed.
Imports read.
Dependency graph computed: 1 nodes and 0 edges.
Not reducing dependency graph.
Creating directories.
1 necessary units:   Pprtl
Start compiling files          : Mon Nov 19 07:09:48 2001   0.08 sec
Starting slave c1660464-a.ehlls1.pa.home.com.1241.
  [Plan for Pprtl:   generate  cleanup]
  [Sending FLUSH_ALL to c1660464-a.ehlls1.pa.home.com.1241]
  [Calling c1660464-a.ehlls1.pa.home.com.1241 to compile Pprtl]
Slave received FLUSH_ALL.
Setting PtrWriteBarrier to true
Setting FullWriteBarrier to true
Setting MirrorGlobal to true
Setting MirrorPtrArray to false
Setting BranchingTraps to true
Setting UptoElaborate to false
Setting UptoPhasesplit to false
Setting UptoClosureConvert to false
Setting UptoRtl to false
Setting UptoAsm to true
Setting debug_asm to true
Setting keep_asm to true
Setting compress_asm to true
Setting ManagerChat to true
Setting ManagerVerbose to true
Setting TimeEachFile to false
Setting makeBackups to false
Setting ShowWrittenContext to false
Setting WriteUnselfContext to false
Setting ShowTools to false
  [Compiling Pprtl to assembly]
  [0 imports of total size 0 were cached.
   0 imports of total size 0 were uncached and took 0.0 seconds.]
  [Added contexts.]
  [Parsing pprtl-bug.sml]
  [Elaborating pprtl-bug.sml non-constrained]
gc_context: 29 items in original context.  0 items in reduced context.
  [writing TM/any/pprtl-bug.sml.il - unnecessary]
===== Starting Phasesplit: Pprtl                         =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: Pprtl                             =====
===== Starting Optimize1: Pprtl                          =====
===== Starting Vararg: Pprtl                             =====
===== Starting Inline1: Pprtl                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: Pprtl                             =====
===== Starting Specialize: Pprtl                         =====
  0 optimizable candidates.
  0 impure.
  5 escaping.
  0 used polymorphically.
===== Starting Hoist: Pprtl                              =====
Imports Processed
===== Starting Optimize2: Pprtl                          =====
===== Starting Inline2: Pprtl                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: Pprtl                          =====
===== Starting Inline3: Pprtl                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: Pprtl                             =====
===== Starting HackHoist: Pprtl                          =====
Imports Processed
===== Starting HackOptimize: Pprtl                       =====
===== Starting HackReify: Pprtl                          =====
===== Starting ClosureConv: Pprtl                        =====
PASS: ClosureConv
ClosureConv

          [functor_var_c_code_1852 = 
*               CODE(functor_var_c_cEnv_1854 ::  REC_K{},
*                    funct_arg_c_1460 ::  REC_K{Rtl > _c_1462 : 
*                                               REC_K{label > label_1464 :  TYPE,
*                                                     label_sumarg > label_sumarg_1465 :  SINGLE(CREC{}),
*                                                     label_sum > label_sum_1466 :  SINGLE(SUM(1,1)(label_sumarg_1465)),
*                                                     sregi > sregi_1471 :  TYPE,
*                                                     sregi_sumarg > sregi_sumarg_1472 :  SINGLE(CREC{}),
*                                                     sregi_sum > sregi_sum_1473 :  SINGLE(SUM(1,1)(sregi_sumarg_1472)),
*                                                     regi > regi_1478 :  TYPE,
*                                                     regi_sumarg > regi_sumarg_1479 :  SINGLE(CREC{}),
*                                                     regi_sum > regi_sum_1480 :  SINGLE(SUM(1,1)(regi_sumarg_1479)),
*                                                     rep_path > rep_path_1485 :  TYPE,
*                                                     rep_path_sumarg > rep_path_sumarg_1486 :  SINGLE(CREC{}),
*                                                     rep_path_sum > rep_path_sum_1487 :  SINGLE(SUM(1,1)(rep_path_sumarg_1486)),
*                                                     rep > rep_1492 :  TYPE,
*                                                     rep_sumarg > rep_sumarg_1493 :  SINGLE(CREC{}),
*                                                     rep_sum > rep_sum_1494 :  SINGLE(SUM(1,1)(rep_sumarg_1493)),
*                                                     regf > regf_1499 :  TYPE,
*                                                     regf_sumarg > regf_sumarg_1500 :  SINGLE(CREC{}),
*                                                     regf_sum > regf_sum_1501 :  SINGLE(SUM(1,1)(regf_sumarg_1500)),
*                                                     reg > reg_1506 :  TYPE,
*                                                     reg_sumarg > reg_sumarg_1507 :  SINGLE(CREC{}),
*                                                     reg_sum > reg_sum_1508 :  SINGLE(SUM(1,1)(reg_sumarg_1507)),
*                                                     ea > ea_1513 :  TYPE,
*                                                     ea_sumarg > ea_sumarg_1514 :  SINGLE(CREC{}),
*                                                     ea_sum > ea_sum_1515 :  SINGLE(SUM(1,1)(ea_sumarg_1514)),
*                                                     cmp > cmp_1520 :  TYPE,
*                                                     cmp_sumarg > cmp_sumarg_1521 :  SINGLE(CREC{}),
*                                                     cmp_sum > cmp_sum_1522 :  SINGLE(SUM(1,1)(cmp_sumarg_1521))}})
*              = LET  
*                IN   CREC{}
*                END,
*          functor_var_c_1458 = CLOSURE(functor_var_c_code_1852,CREC{}),
*          STATIC type_1602 = MU_NR((_1469=SUM(2,2)(CREC{}))),
*          STATIC type_1603 = type_1602.1,
*          STATIC type_1618 = MU_NR((_1476=SUM(2,2)(CREC{}))),
*          STATIC type_1619 = type_1618.1,
*          STATIC type_1634 = MU_NR((_1483=SUM(2,2)(CREC{}))),
*          STATIC type_1635 = type_1634.1,
*          STATIC type_1650 = MU_NR((_1490=SUM(2,2)(CREC{}))),
*          STATIC type_1651 = type_1650.1,
*          STATIC type_1666 = MU_NR((_1497=SUM(2,2)(CREC{}))),
*          STATIC type_1667 = type_1666.1,
*          STATIC type_1682 = MU_NR((_1504=SUM(2,2)(CREC{}))),
*          STATIC type_1683 = type_1682.1,
*          STATIC type_1698 = MU_NR((_1511=SUM(2,2)(CREC{}))),
*          STATIC type_1699 = type_1698.1,
*          STATIC type_1714 = MU_NR((_1518=SUM(2,2)(CREC{}))),
*          STATIC type_1715 = type_1714.1,
*          STATIC type_1730 = MU_NR((_1525=SUM(2,2)(CREC{}))),
*          STATIC type_1731 = type_1730.1,
*          type_1784 = VECTOR(INT8),
*          _1739 : Trace = "eq",
*          STATIC 
*            functor_var_r_type_1856 = ALLARROW(Closure; TOTAL; 
*         +1   (funct_arg_c_1587 :: REC_K{Rtl > _c_1586 : 
*         +1                              REC_K{label > label_1559 :  TYPE,
*         +1                                    label_sumarg > label_sumarg_1560 :  SINGLE(CREC{}),
*         +1                                    label_sum > label_sum_1561 :  SINGLE(SUM(1,1)(label_sumarg_1560)),
*         +1                                    sregi > sregi_1562 :  TYPE,
*         +1                                    sregi_sumarg > sregi_sumarg_1563 :  SINGLE(CREC{}),
*         +1                                    sregi_sum > sregi_sum_1564 :  SINGLE(SUM(1,1)(sregi_sumarg_1563)),
*         +1                                    regi > regi_1565 :  TYPE,
*         +1                                    regi_sumarg > regi_sumarg_1566 :  SINGLE(CREC{}),
*         +1                                    regi_sum > regi_sum_1567 :  SINGLE(SUM(1,1)(regi_sumarg_1566)),
*         +1                                    rep_path > rep_path_1568 :  TYPE,
*         +1                                    rep_path_sumarg > rep_path_sumarg_1569 :  SINGLE(CREC{}),
*         +1                                    rep_path_sum > rep_path_sum_1570 :  SINGLE(SUM(1,1)(rep_path_sumarg_1569)),
*         +1                                    rep > rep_1571 :  TYPE,
*         +1                                    rep_sumarg > rep_sumarg_1572 :  SINGLE(CREC{}),
*         +1                                    rep_sum > rep_sum_1573 :  SINGLE(SUM(1,1)(rep_sumarg_1572)),
*         +1                                    regf > regf_1574 :  TYPE,
*         +1                                    regf_sumarg > regf_sumarg_1575 :  SINGLE(CREC{}),
*         +1                                    regf_sum > regf_sum_1576 :  SINGLE(SUM(1,1)(regf_sumarg_1575)),
*         +1                                    reg > reg_1577 :  TYPE,
*         +1                                    reg_sumarg > reg_sumarg_1578 :  SINGLE(CREC{}),
*         +1                                    reg_sum > reg_sum_1579 :  SINGLE(SUM(1,1)(reg_sumarg_1578)),
*         +1                                    ea > ea_1580 :  TYPE,
*         +1                                    ea_sumarg > ea_sumarg_1581 :  SINGLE(CREC{}),
*         +1                                    ea_sum > ea_sum_1582 :  SINGLE(SUM(1,1)(ea_sumarg_1581)),
*         +1                                    cmp > cmp_1583 :  TYPE,
*         +1                                    cmp_sumarg > cmp_sumarg_1584 :  SINGLE(CREC{}),
*         +1                                    cmp_sum > cmp_sum_1585 :  SINGLE(SUM(1,1)(cmp_sumarg_1584))}}); 
*                                         (funct_arg_r_1461 :: LET  type_1588 = funct_arg_c_1587.Rtl
*                                                                   type_1589 = type_1588.label_sum
*                                                                   type_1591 = type_1588.label
*                                                                   type_1605 = type_1588.sregi_sum
*                                                                   type_1607 = type_1588.sregi
*                                                                   type_1621 = type_1588.regi_sum
*                                                                   type_1623 = type_1588.regi
*                                                                   type_1637 = type_1588.rep_path_sum
*                                                                   type_1639 = type_1588.rep_path
*                                                                   type_1653 = type_1588.rep_sum
*                                                                   type_1655 = type_1588.rep
*                                                                   type_1669 = type_1588.regf_sum
*                                                                   type_1671 = type_1588.regf
*                                                                   type_1685 = type_1588.reg_sum
*                                                                   type_1687 = type_1588.reg
*                                                                   type_1701 = type_1588.ea_sum
*                                                                   type_1703 = type_1588.ea
*                                                                   type_1717 = type_1588.cmp_sum
*                                                                   type_1719 = type_1588.cmp
*                                                              IN   DEP_RECORD[ Rtl > _r_1463]
*                                                                     (DEP_RECORD[
*                                                                      +Nlabel_in > label_in_1467,
*                                                                      +Nlabel_out > label_out_1468,
*                                                                      +Elabel > +Elabel_INT_1470,
*                                                                      +Nsregi_in > sregi_in_1474,
*                                                                      +Nsregi_out > sregi_out_1475,
*                                                                      +Esregi > +Esregi_INT_1477,
*                                                                      +Nregi_in > regi_in_1481,
*                                                                      +Nregi_out > regi_out_1482,
*                                                                      +Eregi > +Eregi_INT_1484,
*                                                                      +Nrep_path_in > rep_path_in_1488,
*                                                                      +Nrep_path_out > rep_path_out_1489,
*                                                                      +Erep_path > +Erep_path_INT_1491,
*                                                                      +Nrep_in > rep_in_1495,
*                                                                      +Nrep_out > rep_out_1496,
*                                                                      +Erep > +Erep_INT_1498,
*                                                                      +Nregf_in > regf_in_1502,
*                                                                      +Nregf_out > regf_out_1503,
*                                                                      +Eregf > +Eregf_INT_1505,
*                                                                      +Nreg_in > reg_in_1509,
*                                                                      +Nreg_out > reg_out_1510,
*                                                                      +Ereg > +Ereg_INT_1512,
*                                                                      +Nea_in > ea_in_1516,
*                                                                      +Nea_out > ea_out_1517,
*                                                                      +Eea > +Eea_INT_1519,
*                                                                      +Ncmp_in > cmp_in_1523,
*                                                                      +Ncmp_out > cmp_out_1524,
*                                                                      +Ecmp > +Ecmp_INT_1526]
*                                                                        (COERCION[  ](type_1589,type_1591),
*                                                                         COERCION[  ](type_1591,type_1589),
*                                                                         ALLARROW(Closure; PARTIAL; (); 
*                                                                            (type_1588.label, type_1588.label); 0; 
*                                                                            type_1603),
*                                                                         COERCION[  ](type_1605,type_1607),
*                                                                         COERCION[  ](type_1607,type_1605),
*                                                                         ALLARROW(Closure; PARTIAL; (); 
*                                                                            (type_1588.sregi, type_1588.sregi); 0; 
*                                                                            type_1619),
*                                                                         COERCION[  ](type_1621,type_1623),
*                                                                         COERCION[  ](type_1623,type_1621),
*                                                                         ALLARROW(Closure; PARTIAL; (); 
*                                                                            (type_1588.regi, type_1588.regi); 0; 
*                                                                            type_1635),
*                                                                         COERCION[  ](type_1637,type_1639),
*                                                                         COERCION[  ](type_1639,type_1637),
*                                                                         ALLARROW(Closure; PARTIAL; (); 
*                                                                            (type_1588.rep_path, type_1588.rep_path); 0; 
*                                                                            type_1651),
*                                                                         COERCION[  ](type_1653,type_1655),
*                                                                         COERCION[  ](type_1655,type_1653),
*                                                                         ALLARROW(Closure; PARTIAL; (); 
*                                                                            (type_1588.rep, type_1588.rep); 0; 
*                                                                            type_1667),
*                                                                         COERCION[  ](type_1669,type_1671),
*                                                                         COERCION[  ](type_1671,type_1669),
*                                                                         ALLARROW(Closure; PARTIAL; (); 
*                                                                            (type_1588.regf, type_1588.regf); 0; 
*                                                                            type_1683),
*                                                                         COERCION[  ](type_1685,type_1687),
*                                                                         COERCION[  ](type_1687,type_1685),
*                                                                         ALLARROW(Closure; PARTIAL; (); 
*                                                                            (type_1588.reg, type_1588.reg); 0; 
*                                                                            type_1699),
*                                                                         COERCION[  ](type_1701,type_1703),
*                                                                         COERCION[  ](type_1703,type_1701),
*                                                                         ALLARROW(Closure; PARTIAL; (); 
*                                                                            (type_1588.ea, type_1588.ea); 0; 
*                                                                            type_1715),
*                                                                         COERCION[  ](type_1717,type_1719),
*                                                                         COERCION[  ](type_1719,type_1717),
*                                                                         ALLARROW(Closure; PARTIAL; (); 
*                                                                            (type_1588.cmp, type_1588.cmp); 0; 
*                                                                            type_1731)))
*                                                              END); 0; 
*                                         LET  type_1777 = funct_arg_c_1587.Rtl
*                                              type_1778 = type_1777.cmp
*                                         IN   DEP_RECORD[ cmpf2s > _1531, cmpi2s > cmpi2s_r_1533]
*                                                (VARARG[Closure->](type_1778, type_1784),
*                                                 ALLARROW(Closure; TOTAL; (var_poly_c_1534 :: REC_K{'a > 'a_TYV_1536 :  TYPE}); 
*                                                    (var_poly_r_1535 :: DEP_RECORD[ ]); 0; 
*                                                    LET  type_1781 = var_poly_c_1534.'a
*                                                         type_1766 = VARARG[Closure->](type_1781, type_1784)
*                                                    IN   VARARG[Closure->](type_1778, type_1766)
*                                                    END))
*                                         END),
*          /LEAF-CODE\DEPfunctor_var_r_code_1857
*            (functor_var_r_cEnv_1859 :: SINGLE(CREC{}),
*             funct_arg_c_1587 :: 
*               REC_K{Rtl > _c_1586 :  REC_K{label > label_1559 :  TYPE,
*                                            label_sumarg > label_sumarg_1560 :  SINGLE(CREC{}),
*                                            label_sum > label_sum_1561 :  SINGLE(SUM(1,1)(label_sumarg_1560)),
*                                            sregi > sregi_1562 :  TYPE,
*                                            sregi_sumarg > sregi_sumarg_1563 :  SINGLE(CREC{}),
*                                            sregi_sum > sregi_sum_1564 :  SINGLE(SUM(1,1)(sregi_sumarg_1563)),
*                                            regi > regi_1565 :  TYPE,
*                                            regi_sumarg > regi_sumarg_1566 :  SINGLE(CREC{}),
*                                            regi_sum > regi_sum_1567 :  SINGLE(SUM(1,1)(regi_sumarg_1566)),
*                                            rep_path > rep_path_1568 :  TYPE,
*                                            rep_path_sumarg > rep_path_sumarg_1569 :  SINGLE(CREC{}),
*                                            rep_path_sum > rep_path_sum_1570 :  SINGLE(SUM(1,1)(rep_path_sumarg_1569)),
*                                            rep > rep_1571 :  TYPE,
*                                            rep_sumarg > rep_sumarg_1572 :  SINGLE(CREC{}),
*                                            rep_sum > rep_sum_1573 :  SINGLE(SUM(1,1)(rep_sumarg_1572)),
*                                            regf > regf_1574 :  TYPE,
*                                            regf_sumarg > regf_sumarg_1575 :  SINGLE(CREC{}),
*                                            regf_sum > regf_sum_1576 :  SINGLE(SUM(1,1)(regf_sumarg_1575)),
*                                            reg > reg_1577 :  TYPE,
*                                            reg_sumarg > reg_sumarg_1578 :  SINGLE(CREC{}),
*                                            reg_sum > reg_sum_1579 :  SINGLE(SUM(1,1)(reg_sumarg_1578)),
*                                            ea > ea_1580 :  TYPE,
*                                            ea_sumarg > ea_sumarg_1581 :  SINGLE(CREC{}),
*                                            ea_sum > ea_sum_1582 :  SINGLE(SUM(1,1)(ea_sumarg_1581)),
*                                            cmp > cmp_1583 :  TYPE,
*                                            cmp_sumarg > cmp_sumarg_1584 :  SINGLE(CREC{}),
*                                            cmp_sum > cmp_sum_1585 :  SINGLE(SUM(1,1)(cmp_sumarg_1584))}} ;; 
*             functor_var_r_eEnv_1860 : Trace : UNIT,
*             funct_arg_r_1461 : 
*               Trace : 
*               LET  type_1588 = funct_arg_c_1587.Rtl
*                    type_1589 = type_1588.label_sum
*                    type_1591 = type_1588.label
*                    type_1605 = type_1588.sregi_sum
*                    type_1607 = type_1588.sregi
*                    type_1621 = type_1588.regi_sum
*                    type_1623 = type_1588.regi
*                    type_1637 = type_1588.rep_path_sum
*                    type_1639 = type_1588.rep_path
*                    type_1653 = type_1588.rep_sum
*                    type_1655 = type_1588.rep
*                    type_1669 = type_1588.regf_sum
*                    type_1671 = type_1588.regf
*                    type_1685 = type_1588.reg_sum
*                    type_1687 = type_1588.reg
*                    type_1701 = type_1588.ea_sum
*                    type_1703 = type_1588.ea
*                    type_1717 = type_1588.cmp_sum
*                    type_1719 = type_1588.cmp
*               IN   DEP_RECORD[ Rtl > _r_1463]
*                      (DEP_RECORD[
*                       +Nlabel_in > label_in_1467,
*                       +Nlabel_out > label_out_1468,
*                       +Elabel > +Elabel_INT_1470,
*                       +Nsregi_in > sregi_in_1474,
*                       +Nsregi_out > sregi_out_1475,
*                       +Esregi > +Esregi_INT_1477,
*                       +Nregi_in > regi_in_1481,
*                       +Nregi_out > regi_out_1482,
*                       +Eregi > +Eregi_INT_1484,
*                       +Nrep_path_in > rep_path_in_1488,
*                       +Nrep_path_out > rep_path_out_1489,
*                       +Erep_path > +Erep_path_INT_1491,
*                       +Nrep_in > rep_in_1495,
*                       +Nrep_out > rep_out_1496,
*                       +Erep > +Erep_INT_1498,
*                       +Nregf_in > regf_in_1502,
*                       +Nregf_out > regf_out_1503,
*                       +Eregf > +Eregf_INT_1505,
*                       +Nreg_in > reg_in_1509,
*                       +Nreg_out > reg_out_1510,
*                       +Ereg > +Ereg_INT_1512,
*                       +Nea_in > ea_in_1516,
*                       +Nea_out > ea_out_1517,
*                       +Eea > +Eea_INT_1519,
*                       +Ncmp_in > cmp_in_1523,
*                       +Ncmp_out > cmp_out_1524,
*                       +Ecmp > +Ecmp_INT_1526]
*                         (COERCION[  ](type_1589,type_1591),
*                          COERCION[  ](type_1591,type_1589),
*                          ALLARROW(Closure; PARTIAL; (); (type_1588.label, type_1588.label); 0; type_1603),
*                          COERCION[  ](type_1605,type_1607),
*                          COERCION[  ](type_1607,type_1605),
*                          ALLARROW(Closure; PARTIAL; (); (type_1588.sregi, type_1588.sregi); 0; type_1619),
*                          COERCION[  ](type_1621,type_1623),
*                          COERCION[  ](type_1623,type_1621),
*                          ALLARROW(Closure; PARTIAL; (); (type_1588.regi, type_1588.regi); 0; type_1635),
*                          COERCION[  ](type_1637,type_1639),
*                          COERCION[  ](type_1639,type_1637),
*                          ALLARROW(Closure; PARTIAL; (); (type_1588.rep_path, type_1588.rep_path); 0; type_1651),
*                          COERCION[  ](type_1653,type_1655),
*                          COERCION[  ](type_1655,type_1653),
*                          ALLARROW(Closure; PARTIAL; (); (type_1588.rep, type_1588.rep); 0; type_1667),
*                          COERCION[  ](type_1669,type_1671),
*                          COERCION[  ](type_1671,type_1669),
*                          ALLARROW(Closure; PARTIAL; (); (type_1588.regf, type_1588.regf); 0; type_1683),
*                          COERCION[  ](type_1685,type_1687),
*                          COERCION[  ](type_1687,type_1685),
*                          ALLARROW(Closure; PARTIAL; (); (type_1588.reg, type_1588.reg); 0; type_1699),
*                          COERCION[  ](type_1701,type_1703),
*                          COERCION[  ](type_1703,type_1701),
*                          ALLARROW(Closure; PARTIAL; (); (type_1588.ea, type_1588.ea); 0; type_1715),
*                          COERCION[  ](type_1717,type_1719),
*                          COERCION[  ](type_1719,type_1717),
*                          ALLARROW(Closure; PARTIAL; (); (type_1588.cmp, type_1588.cmp); 0; type_1731)))
*               END ;; 
*             )
*          =>LET  type_1777 = funct_arg_c_1587.Rtl
*                 type_1778 = type_1777.cmp
*            IN   DEP_RECORD[ cmpf2s > _1531, cmpi2s > cmpi2s_r_1533]
*                   (VARARG[Closure->](type_1778, type_1784),
*                    ALLARROW(Closure; TOTAL; (var_poly_c_1534 :: REC_K{'a > 'a_TYV_1536 :  TYPE}); 
*                       (var_poly_r_1535 :: DEP_RECORD[ ]); 0; 
*                       LET  type_1781 = var_poly_c_1534.'a
*                            type_1766 = VARARG[Closure->](type_1781, type_1784)
*                       IN   VARARG[Closure->](type_1778, type_1766)
*                       END))
*            END =
*          Let  type_1732 = funct_arg_c_1587.Rtl
*               STATIC type_1804 = type_1732.cmp
*               funct_arg_r_Rtl_1735 : Trace = select[Rtl][](funct_arg_r_1461)
*               funct_arg_Rtl_r_+Ncmp_out_1737 : Int = select[+Ncmp_out][](funct_arg_r_Rtl_1735)
*               STATIC cmpf2s_type_1861 = ALLARROW(Closure; PARTIAL; (); (type_1732.cmp); 0; type_1784)
*               /CODE\cmpf2s_code_1862
*                 (cmpf2s_cEnv_1864 :: SINGLE(CREC{funct_arg_c_1587 = funct_arg_c_1587}) ;; 
*                  cmpf2s_eEnv_1865 : Int : TYPEOF(funct_arg_Rtl_r_+Ncmp_out_1737),
*                  mvar_1542 : Compute(cmpf2s_cEnv_1864.funct_arg_c_1587. Rtl. cmp) : type_1732.cmp ;; 
*                  )
*               ->type_1784 =
*               Let  funct_arg_c_1869 = cmpf2s_cEnv_1864.funct_arg_c_1587
*                    funct_arg_Rtl_r_+Ncmp_out_1868 : Int = cmpf2s_eEnv_1865
*                    _1738 : Trace = COERCE( funct_arg_Rtl_r_+Ncmp_out_1868[],mvar_1542 )
*                    _1740 : Trace = 
*                      SUM_SWITCH(_1738: type_1732.cmp_sum, sumswitch_arg_1544, 0: Trace:: _1739NODEFAULT) : type_1784
*               In   _1740
*               End
*               cmpf2s_1782 : cmpf2s_type_1861 = 
*                    (cmpf2s_code_1862,
*                    CREC{funct_arg_c_1587 = funct_arg_c_1587},
*                    funct_arg_Rtl_r_+Ncmp_out_1737)
*               cmpf2s_1541 : Trace = make_vararg[Closure][type_1732.cmp, type_1784](cmpf2s_1782)
*               STATIC 
*                 cmpi2s_r_type_1870 = ALLARROW(Closure; TOTAL; (var_poly_c_1545 :: REC_K{'a > 'a_TYV_1547 :  TYPE}); 
*                                         (DEP_RECORD[ ]); 0; 
*                                         LET  type_1789 = var_poly_c_1545.'a
*                                              type_1752 = VARARG[Closure->](type_1789, type_1784)
*                                         IN   VARARG[Closure->](type_1804, type_1752)
*                                         END)
*               /LEAF-CODE\cmpi2s_r_code_1871
*                 (cmpi2s_r_cEnv_1873 :: SINGLE(CREC{type_1732 = type_1732, funct_arg_c_1587 = funct_arg_c_1587}),
*                  var_poly_c_1545 :: REC_K{'a > 'a_TYV_1547 :  TYPE} ;; 
*                  cmpi2s_r_eEnv_1874 : Trace : cmpf2s_type_1861,
*                  var_poly_r_1546 : Trace : DEP_RECORD[ ] ;; 
*                  )
*               =>LET  type_1789 = var_poly_c_1545.'a
*                      type_1752 = VARARG[Closure->](type_1789, type_1784)
*                 IN   VARARG[Closure->](type_1804, type_1752)
*                 END =
*               Let  type_1902 = cmpi2s_r_cEnv_1873.type_1732
*                    funct_arg_c_1901 = cmpi2s_r_cEnv_1873.funct_arg_c_1587
*                    cmpf2s_1900 : Trace = cmpi2s_r_eEnv_1874
*                    type_1793 = var_poly_c_1545.'a
*                    type_1795 = VARARG[Closure->](type_1793, type_1784)
*                    STATIC cmpi2s_inner_type_1875 = ALLARROW(Closure; TOTAL; (); (type_1902.cmp); 0; type_1795)
*                    /CODE\cmpi2s_inner_code_1876
*                      (cmpi2s_inner_cEnv_1878 :: 
*                         SINGLE(CREC{type_1793 = type_1793,
*                                     funct_arg_c_1587 = funct_arg_c_1901,
*                                     var_poly_c_1545 = var_poly_c_1545}) ;; 
*                       cmpi2s_inner_eEnv_1879 : Trace : cmpf2s_type_1861,
*                       c_1549 : Compute(cmpi2s_inner_cEnv_1878.funct_arg_c_1587. Rtl. cmp) : type_1902.cmp ;; 
*                       )
*                    =>type_1795 =
*                    Let  type_1898 = cmpi2s_inner_cEnv_1878.type_1793
*                         funct_arg_c_1897 = cmpi2s_inner_cEnv_1878.funct_arg_c_1587
*                         var_poly_c_1896 = cmpi2s_inner_cEnv_1878.var_poly_c_1545
*                         cmpf2s_1895 : Trace = cmpi2s_inner_eEnv_1879
*                         STATIC anonfun_type_1881 = ALLARROW(Closure; PARTIAL; (); (type_1898); 0; type_1784)
*                         /NORECUR-CODE\anonfun_code_1882
*                           (anonfun_cEnv_1884 :: 
*                              SINGLE(CREC{funct_arg_c_1587 = funct_arg_c_1897, var_poly_c_1545 = var_poly_c_1896}) ;; 
*                            anonfun_eEnv_1885 : Trace : RECORD[c_1549, cmpf2s_1782](TYPEOF(c_1549), cmpf2s_type_1861),
*                            signflag_1551 : Compute(anonfun_cEnv_1884.var_poly_c_1545. 'a) : type_1898 ;; 
*                            )
*                         ->type_1784 =
*                         Let  funct_arg_c_1893 = anonfun_cEnv_1884.funct_arg_c_1587
*                              var_poly_c_1892 = anonfun_cEnv_1884.var_poly_c_1545
*                              c_1890 : Compute(funct_arg_c_1893.Rtl. cmp) = select[c_1549][](anonfun_eEnv_1885)
*                              cmpf2s_1891 : Trace = select[cmpf2s_1782][](anonfun_eEnv_1885)
*                              _1807 : Trace = App_Closure(cmpf2s_1891;  ; c_1890;  )
*                         In   _1807
*                         End
*                         anonfun_1797 : anonfun_type_1881 = 
*                              (anonfun_code_1882,
*                              CREC{funct_arg_c_1587 = funct_arg_c_1897, var_poly_c_1545 = var_poly_c_1896},
*                              record(c_1549>c_1549, cmpf2s_1782>cmpf2s_1895))
*                         anonfun_1550 : Trace = make_vararg[Closure][type_1898, type_1784](anonfun_1797)
*                    In   anonfun_1550
*                    End
*                    cmpi2s_inner_1790 : cmpi2s_inner_type_1875 = 
*                         (cmpi2s_inner_code_1876,
*                         CREC{type_1793 = type_1793, funct_arg_c_1587 = funct_arg_c_1901, var_poly_c_1545 = var_poly_c_1545},
*                         cmpf2s_1900)
*                    cmpi2s_inner_1553 : Trace = make_vararg[Closure][type_1902.cmp, type_1795](cmpi2s_inner_1790)
*               In   cmpi2s_inner_1553
*               End
*               cmpi2s_r_1555 : cmpi2s_r_type_1870 = 
*                    (cmpi2s_r_code_1871,
*                    CREC{type_1732 = type_1732, funct_arg_c_1587 = funct_arg_c_1587},
*                    cmpf2s_1782)
*               _r_1754 : Trace = record(cmpf2s>cmpf2s_1541, cmpi2s>cmpi2s_r_1555)
*          In   _r_1754
*          End,
*          functor_var_r_1459 : functor_var_r_type_1856 = (functor_var_r_code_1857,CREC{},record())]
*         IMPORTS:
*         
*         EXPORTS:
*         Bug_FCT_c = functor_var_c_1458
*         Bug_FCT_r = functor_var_r_1459
*         
===== Translating to RTL             =====
tilt: tortl-base.sml: Record too big

Compilation exited abnormally with code 1 at Mon Nov 19 07:09:49
