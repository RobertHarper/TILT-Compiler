Saving: tilt -fshowClosureConv mapfile-bug
Host: c1660464-a.ehlls1.pa.home.com
Pwd: /usr0/swasey/ml96/Local/Bugs/0065
Date: Mon Nov 19 08:31:42 EST 2001
Warning: setting TILT_LIBDIR to /usr0/swasey/ml96
Starting compilation           : Mon Nov 19 08:31:42 2001   0.0 sec
Warning: only compiling to assembly because non-native
Mapfile mapfile-bug with 2 units processed.
Imports read.
Dependency graph computed: 2 nodes and 0 edges.
Not reducing dependency graph.
Creating directories.
2 necessary units:   Pprtl  Trans
Start compiling files          : Mon Nov 19 08:31:42 2001   0.02 sec
Starting slave c1660464-a.ehlls1.pa.home.com.1492.
  [Plan for Trans:   elaborate  generate  cleanup]
  [Plan for Pprtl:   elaborate  generate  cleanup]
  [Sending FLUSH_ALL to c1660464-a.ehlls1.pa.home.com.1492]
  [Calling c1660464-a.ehlls1.pa.home.com.1492 to compile Pprtl]
Slave received FLUSH_ALL.
Setting PtrWriteBarrier to true
Setting FullWriteBarrier to true
Setting MirrorGlobal to true
Setting MirrorPtrArray to false
Setting BranchingTraps to true
Setting UptoElaborate to false
Setting UptoPhasesplit to false
Setting UptoClosureConvert to false
Setting UptoRtl to false
Setting UptoAsm to true
Setting debug_asm to true
Setting keep_asm to true
Setting compress_asm to true
Setting ManagerChat to true
Setting ManagerVerbose to true
Setting TimeEachFile to false
Setting makeBackups to false
Setting ShowWrittenContext to false
Setting WriteUnselfContext to false
Setting ShowTools to false
  [0 imports of total size 0 were cached.
   0 imports of total size 0 were uncached and took 0.0 seconds.]
  [Added contexts.]
  [Parsing pprtl-bug.sml]
  [Elaborating pprtl-bug.sml non-constrained]
gc_context: 17 items in original context.  0 items in reduced context.
  [writing TM/any/pprtl-bug.sml.il]
  [Compiling Pprtl to assembly]
===== Starting Phasesplit: Pprtl                         =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: Pprtl                             =====
===== Starting Optimize1: Pprtl                          =====
===== Starting Vararg: Pprtl                             =====
===== Starting Inline1: Pprtl                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: Pprtl                             =====
===== Starting Specialize: Pprtl                         =====
  0 optimizable candidates.
  0 impure.
  5 escaping.
  0 used polymorphically.
===== Starting Hoist: Pprtl                              =====
Imports Processed
===== Starting Optimize2: Pprtl                          =====
===== Starting Inline2: Pprtl                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: Pprtl                          =====
===== Starting Inline3: Pprtl                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: Pprtl                             =====
===== Starting ClosureConv: Pprtl                        =====
PASS: ClosureConv
ClosureConv

          [functor_var_c_code_1573 = 
*               CODE(functor_var_c_cEnv_1575 ::  REC_K{},
*                    funct_arg_c_1259 ::  REC_K{Rtl > _c_1261 : 
*                                               REC_K{label > label_1264 : 
*                                                     SINGLE(PROJ(MU_NR((vdt_label_1263=SUM(1,1)(CREC{}))),1)),
*                                                     label_sumarg > label_sumarg_1265 :  SINGLE(CREC{}),
*                                                     label_sum > label_sum_1266 :  SINGLE(SUM(1,1)(label_sumarg_1265)),
*                                                     sregi > sregi_1270 : 
*                                                     SINGLE(PROJ(MU_NR((vdt_sregi_1269=SUM(1,1)(CREC{}))),1)),
*                                                     sregi_sumarg > sregi_sumarg_1271 :  SINGLE(CREC{}),
*                                                     sregi_sum > sregi_sum_1272 :  SINGLE(SUM(1,1)(sregi_sumarg_1271)),
*                                                     regi > regi_1276 :  SINGLE(PROJ(MU_NR((vdt_regi_1275=SUM(1,1)(CREC{}))),1)),
*                                                     regi_sumarg > regi_sumarg_1277 :  SINGLE(CREC{}),
*                                                     regi_sum > regi_sum_1278 :  SINGLE(SUM(1,1)(regi_sumarg_1277)),
*                                                     rep_path > rep_path_1282 : 
*                                                     SINGLE(PROJ(MU_NR((vdt_rep_path_1281=SUM(1,1)(CREC{}))),1)),
*                                                     rep_path_sumarg > rep_path_sumarg_1283 :  SINGLE(CREC{}),
*                                                     rep_path_sum > rep_path_sum_1284 :  SINGLE(SUM(1,1)(rep_path_sumarg_1283)),
*                                                     rep > rep_1288 :  SINGLE(PROJ(MU_NR((vdt_rep_1287=SUM(1,1)(CREC{}))),1)),
*                                                     rep_sumarg > rep_sumarg_1289 :  SINGLE(CREC{}),
*                                                     rep_sum > rep_sum_1290 :  SINGLE(SUM(1,1)(rep_sumarg_1289)),
*                                                     regf > regf_1294 :  SINGLE(PROJ(MU_NR((vdt_regf_1293=SUM(1,1)(CREC{}))),1)),
*                                                     regf_sumarg > regf_sumarg_1295 :  SINGLE(CREC{}),
*                                                     regf_sum > regf_sum_1296 :  SINGLE(SUM(1,1)(regf_sumarg_1295)),
*                                                     reg > reg_1300 :  SINGLE(PROJ(MU_NR((vdt_reg_1299=SUM(1,1)(CREC{}))),1)),
*                                                     reg_sumarg > reg_sumarg_1301 :  SINGLE(CREC{}),
*                                                     reg_sum > reg_sum_1302 :  SINGLE(SUM(1,1)(reg_sumarg_1301)),
*                                                     ea > ea_1306 :  SINGLE(PROJ(MU_NR((vdt_ea_1305=SUM(1,1)(CREC{}))),1)),
*                                                     ea_sumarg > ea_sumarg_1307 :  SINGLE(CREC{}),
*                                                     ea_sum > ea_sum_1308 :  SINGLE(SUM(1,1)(ea_sumarg_1307)),
*                                                     cmp > cmp_1312 :  SINGLE(PROJ(MU_NR((vdt_cmp_1311=SUM(1,1)(CREC{}))),1)),
*                                                     cmp_sumarg > cmp_sumarg_1313 :  SINGLE(CREC{}),
*                                                     cmp_sum > cmp_sum_1314 :  SINGLE(SUM(1,1)(cmp_sumarg_1313))}})
*              = LET  
*                IN   CREC{}
*                END,
*          functor_var_c_1257 = CLOSURE(functor_var_c_code_1573,CREC{}),
*          STATIC type_1411 = MU_NR((_1267=SUM(2,2)(CREC{}))),
*          STATIC type_1412 = type_1411.1,
*          STATIC type_1419 = MU_NR((_1273=SUM(2,2)(CREC{}))),
*          STATIC type_1420 = type_1419.1,
*          STATIC type_1427 = MU_NR((_1279=SUM(2,2)(CREC{}))),
*          STATIC type_1428 = type_1427.1,
*          STATIC type_1435 = MU_NR((_1285=SUM(2,2)(CREC{}))),
*          STATIC type_1436 = type_1435.1,
*          STATIC type_1443 = MU_NR((_1291=SUM(2,2)(CREC{}))),
*          STATIC type_1444 = type_1443.1,
*          STATIC type_1451 = MU_NR((_1297=SUM(2,2)(CREC{}))),
*          STATIC type_1452 = type_1451.1,
*          STATIC type_1459 = MU_NR((_1303=SUM(2,2)(CREC{}))),
*          STATIC type_1460 = type_1459.1,
*          STATIC type_1467 = MU_NR((_1309=SUM(2,2)(CREC{}))),
*          STATIC type_1468 = type_1467.1,
*          STATIC type_1475 = MU_NR((_1315=SUM(2,2)(CREC{}))),
*          STATIC type_1476 = type_1475.1,
*          type_1481 = VECTOR(INT8),
*          _1485 : Trace = "eq",
*          STATIC 
*            functor_var_r_type_1577 = ALLARROW(Closure; TOTAL; 
*         +1   (funct_arg_c_1404 :: REC_K{Rtl > _c_1403 : 
*         +1                              REC_K{label > label_1360 :  SINGLE(PROJ(MU_NR((vdt_label_1358=SUM(1,1)(CREC{}))),1)),
*         +1                                    label_sumarg > label_sumarg_1361 :  SINGLE(CREC{}),
*         +1                                    label_sum > label_sum_1362 :  SINGLE(SUM(1,1)(label_sumarg_1361)),
*         +1                                    sregi > sregi_1365 :  SINGLE(PROJ(MU_NR((vdt_sregi_1363=SUM(1,1)(CREC{}))),1)),
*         +1                                    sregi_sumarg > sregi_sumarg_1366 :  SINGLE(CREC{}),
*         +1                                    sregi_sum > sregi_sum_1367 :  SINGLE(SUM(1,1)(sregi_sumarg_1366)),
*         +1                                    regi > regi_1370 :  SINGLE(PROJ(MU_NR((vdt_regi_1368=SUM(1,1)(CREC{}))),1)),
*         +1                                    regi_sumarg > regi_sumarg_1371 :  SINGLE(CREC{}),
*         +1                                    regi_sum > regi_sum_1372 :  SINGLE(SUM(1,1)(regi_sumarg_1371)),
*         +1                                    rep_path > rep_path_1375 :  SINGLE(PROJ(MU_NR((vdt_rep_path_1373=SUM(1,1)(CREC{}))),1)),
*         +1                                    rep_path_sumarg > rep_path_sumarg_1376 :  SINGLE(CREC{}),
*         +1                                    rep_path_sum > rep_path_sum_1377 :  SINGLE(SUM(1,1)(rep_path_sumarg_1376)),
*         +1                                    rep > rep_1380 :  SINGLE(PROJ(MU_NR((vdt_rep_1378=SUM(1,1)(CREC{}))),1)),
*         +1                                    rep_sumarg > rep_sumarg_1381 :  SINGLE(CREC{}),
*         +1                                    rep_sum > rep_sum_1382 :  SINGLE(SUM(1,1)(rep_sumarg_1381)),
*         +1                                    regf > regf_1385 :  SINGLE(PROJ(MU_NR((vdt_regf_1383=SUM(1,1)(CREC{}))),1)),
*         +1                                    regf_sumarg > regf_sumarg_1386 :  SINGLE(CREC{}),
*         +1                                    regf_sum > regf_sum_1387 :  SINGLE(SUM(1,1)(regf_sumarg_1386)),
*         +1                                    reg > reg_1390 :  SINGLE(PROJ(MU_NR((vdt_reg_1388=SUM(1,1)(CREC{}))),1)),
*         +1                                    reg_sumarg > reg_sumarg_1391 :  SINGLE(CREC{}),
*         +1                                    reg_sum > reg_sum_1392 :  SINGLE(SUM(1,1)(reg_sumarg_1391)),
*         +1                                    ea > ea_1395 :  SINGLE(PROJ(MU_NR((vdt_ea_1393=SUM(1,1)(CREC{}))),1)),
*         +1                                    ea_sumarg > ea_sumarg_1396 :  SINGLE(CREC{}),
*         +1                                    ea_sum > ea_sum_1397 :  SINGLE(SUM(1,1)(ea_sumarg_1396)),
*         +1                                    cmp > cmp_1400 :  SINGLE(PROJ(MU_NR((vdt_cmp_1398=SUM(1,1)(CREC{}))),1)),
*         +1                                    cmp_sumarg > cmp_sumarg_1401 :  SINGLE(CREC{}),
*         +1                                    cmp_sum > cmp_sum_1402 :  SINGLE(SUM(1,1)(cmp_sumarg_1401))}}); 
*                                         (funct_arg_r_1260 :: DEP_RECORD[ Rtl > _r_1262]
*                                                                (DEP_RECORD[
*                                                                 +Elabel > +Elabel_INT_1268,
*                                                                 +Esregi > +Esregi_INT_1274,
*                                                                 +Eregi > +Eregi_INT_1280,
*                                                                 +Erep_path > +Erep_path_INT_1286,
*                                                                 +Erep > +Erep_INT_1292,
*                                                                 +Eregf > +Eregf_INT_1298,
*                                                                 +Ereg > +Ereg_INT_1304,
*                                                                 +Eea > +Eea_INT_1310,
*                                                                 +Ecmp > +Ecmp_INT_1316]
*                                                                   (ALLARROW(Closure; PARTIAL; (); 
*                                                                       (funct_arg_c_1404.Rtl. label, funct_arg_c_1404.Rtl. label); 0; 
*                                                                       type_1412),
*                                                                    ALLARROW(Closure; PARTIAL; (); 
*                                                                       (funct_arg_c_1404.Rtl. sregi, funct_arg_c_1404.Rtl. sregi); 0; 
*                                                                       type_1420),
*                                                                    ALLARROW(Closure; PARTIAL; (); 
*                                                                       (funct_arg_c_1404.Rtl. regi, funct_arg_c_1404.Rtl. regi); 0; 
*                                                                       type_1428),
*                                                                    ALLARROW(Closure; PARTIAL; (); 
*                                                                       (funct_arg_c_1404.Rtl. rep_path,
*                                                                        funct_arg_c_1404.Rtl. rep_path); 0; 
*                                                                       type_1436),
*                                                                    ALLARROW(Closure; PARTIAL; (); 
*                                                                       (funct_arg_c_1404.Rtl. rep, funct_arg_c_1404.Rtl. rep); 0; 
*                                                                       type_1444),
*                                                                    ALLARROW(Closure; PARTIAL; (); 
*                                                                       (funct_arg_c_1404.Rtl. regf, funct_arg_c_1404.Rtl. regf); 0; 
*                                                                       type_1452),
*                                                                    ALLARROW(Closure; PARTIAL; (); 
*                                                                       (funct_arg_c_1404.Rtl. reg, funct_arg_c_1404.Rtl. reg); 0; 
*                                                                       type_1460),
*                                                                    ALLARROW(Closure; PARTIAL; (); 
*                                                                       (funct_arg_c_1404.Rtl. ea, funct_arg_c_1404.Rtl. ea); 0; 
*                                                                       type_1468),
*                                                                    ALLARROW(Closure; PARTIAL; (); 
*                                                                       (funct_arg_c_1404.Rtl. cmp, funct_arg_c_1404.Rtl. cmp); 0; 
*                                                                       type_1476)))); 0; 
*                                         LET  type_1523 = funct_arg_c_1404.Rtl
*                                              type_1524 = type_1523.cmp
*                                         IN   DEP_RECORD[ cmpf2s > _1321, cmpi2s > cmpi2s_r_1323]
*                                                (ALLARROW(Closure; PARTIAL; (); (type_1524); 0; type_1481),
*                                                 ALLARROW(Closure; TOTAL; (var_poly_c_1324 :: REC_K{'a > 'a_TYV_1326 :  TYPE}); 
*                                                    (var_poly_r_1325 :: DEP_RECORD[ ]); 0; 
*                                                    LET  type_1527 = var_poly_c_1324.'a
*                                                         type_1512 = VARARG[Closure->](type_1527, type_1481)
*                                                    IN   ALLARROW(Closure; PARTIAL; (); (type_1524); 0; type_1512)
*                                                    END))
*                                         END),
*          /LEAF-CODE\DEPfunctor_var_r_code_1578
*            (functor_var_r_cEnv_1580 :: SINGLE(CREC{}),
*             funct_arg_c_1404 :: 
*               REC_K{Rtl > _c_1403 : 
*                     REC_K{label > label_1360 :  SINGLE(PROJ(MU_NR((vdt_label_1358=SUM(1,1)(CREC{}))),1)),
*                           label_sumarg > label_sumarg_1361 :  SINGLE(CREC{}),
*                           label_sum > label_sum_1362 :  SINGLE(SUM(1,1)(label_sumarg_1361)),
*                           sregi > sregi_1365 :  SINGLE(PROJ(MU_NR((vdt_sregi_1363=SUM(1,1)(CREC{}))),1)),
*                           sregi_sumarg > sregi_sumarg_1366 :  SINGLE(CREC{}),
*                           sregi_sum > sregi_sum_1367 :  SINGLE(SUM(1,1)(sregi_sumarg_1366)),
*                           regi > regi_1370 :  SINGLE(PROJ(MU_NR((vdt_regi_1368=SUM(1,1)(CREC{}))),1)),
*                           regi_sumarg > regi_sumarg_1371 :  SINGLE(CREC{}),
*                           regi_sum > regi_sum_1372 :  SINGLE(SUM(1,1)(regi_sumarg_1371)),
*                           rep_path > rep_path_1375 :  SINGLE(PROJ(MU_NR((vdt_rep_path_1373=SUM(1,1)(CREC{}))),1)),
*                           rep_path_sumarg > rep_path_sumarg_1376 :  SINGLE(CREC{}),
*                           rep_path_sum > rep_path_sum_1377 :  SINGLE(SUM(1,1)(rep_path_sumarg_1376)),
*                           rep > rep_1380 :  SINGLE(PROJ(MU_NR((vdt_rep_1378=SUM(1,1)(CREC{}))),1)),
*                           rep_sumarg > rep_sumarg_1381 :  SINGLE(CREC{}),
*                           rep_sum > rep_sum_1382 :  SINGLE(SUM(1,1)(rep_sumarg_1381)),
*                           regf > regf_1385 :  SINGLE(PROJ(MU_NR((vdt_regf_1383=SUM(1,1)(CREC{}))),1)),
*                           regf_sumarg > regf_sumarg_1386 :  SINGLE(CREC{}),
*                           regf_sum > regf_sum_1387 :  SINGLE(SUM(1,1)(regf_sumarg_1386)),
*                           reg > reg_1390 :  SINGLE(PROJ(MU_NR((vdt_reg_1388=SUM(1,1)(CREC{}))),1)),
*                           reg_sumarg > reg_sumarg_1391 :  SINGLE(CREC{}),
*                           reg_sum > reg_sum_1392 :  SINGLE(SUM(1,1)(reg_sumarg_1391)),
*                           ea > ea_1395 :  SINGLE(PROJ(MU_NR((vdt_ea_1393=SUM(1,1)(CREC{}))),1)),
*                           ea_sumarg > ea_sumarg_1396 :  SINGLE(CREC{}),
*                           ea_sum > ea_sum_1397 :  SINGLE(SUM(1,1)(ea_sumarg_1396)),
*                           cmp > cmp_1400 :  SINGLE(PROJ(MU_NR((vdt_cmp_1398=SUM(1,1)(CREC{}))),1)),
*                           cmp_sumarg > cmp_sumarg_1401 :  SINGLE(CREC{}),
*                           cmp_sum > cmp_sum_1402 :  SINGLE(SUM(1,1)(cmp_sumarg_1401))}} ;; 
*             functor_var_r_eEnv_1581 : Trace : UNIT,
*             funct_arg_r_1260 : 
*               Trace : 
*               DEP_RECORD[ Rtl > _r_1262]
*                 (DEP_RECORD[
*                  +Elabel > +Elabel_INT_1268,
*                  +Esregi > +Esregi_INT_1274,
*                  +Eregi > +Eregi_INT_1280,
*                  +Erep_path > +Erep_path_INT_1286,
*                  +Erep > +Erep_INT_1292,
*                  +Eregf > +Eregf_INT_1298,
*                  +Ereg > +Ereg_INT_1304,
*                  +Eea > +Eea_INT_1310,
*                  +Ecmp > +Ecmp_INT_1316]
*                    (ALLARROW(Closure; PARTIAL; (); (funct_arg_c_1404.Rtl. label, funct_arg_c_1404.Rtl. label); 0; type_1412),
*                     ALLARROW(Closure; PARTIAL; (); (funct_arg_c_1404.Rtl. sregi, funct_arg_c_1404.Rtl. sregi); 0; type_1420),
*                     ALLARROW(Closure; PARTIAL; (); (funct_arg_c_1404.Rtl. regi, funct_arg_c_1404.Rtl. regi); 0; type_1428),
*                     ALLARROW(Closure; PARTIAL; (); 
*                        (funct_arg_c_1404.Rtl. rep_path, funct_arg_c_1404.Rtl. rep_path); 0; 
*                        type_1436),
*                     ALLARROW(Closure; PARTIAL; (); (funct_arg_c_1404.Rtl. rep, funct_arg_c_1404.Rtl. rep); 0; type_1444),
*                     ALLARROW(Closure; PARTIAL; (); (funct_arg_c_1404.Rtl. regf, funct_arg_c_1404.Rtl. regf); 0; type_1452),
*                     ALLARROW(Closure; PARTIAL; (); (funct_arg_c_1404.Rtl. reg, funct_arg_c_1404.Rtl. reg); 0; type_1460),
*                     ALLARROW(Closure; PARTIAL; (); (funct_arg_c_1404.Rtl. ea, funct_arg_c_1404.Rtl. ea); 0; type_1468),
*                     ALLARROW(Closure; PARTIAL; (); (funct_arg_c_1404.Rtl. cmp, funct_arg_c_1404.Rtl. cmp); 0; type_1476))) ;; 
*             )
*          =>LET  type_1523 = funct_arg_c_1404.Rtl
*                 type_1524 = type_1523.cmp
*            IN   DEP_RECORD[ cmpf2s > _1321, cmpi2s > cmpi2s_r_1323]
*                   (ALLARROW(Closure; PARTIAL; (); (type_1524); 0; type_1481),
*                    ALLARROW(Closure; TOTAL; (var_poly_c_1324 :: REC_K{'a > 'a_TYV_1326 :  TYPE}); 
*                       (var_poly_r_1325 :: DEP_RECORD[ ]); 0; 
*                       LET  type_1527 = var_poly_c_1324.'a
*                            type_1512 = VARARG[Closure->](type_1527, type_1481)
*                       IN   ALLARROW(Closure; PARTIAL; (); (type_1524); 0; type_1512)
*                       END))
*            END =
*          Let  STATIC type_1477 = funct_arg_c_1404.Rtl
*               STATIC type_1483 = type_1477.cmp
*               STATIC cmpf2s_type_1582 = ALLARROW(Closure; PARTIAL; (); (type_1477.cmp); 0; type_1481)
*               /CODE\cmpf2s_code_1583
*                 (cmpf2s_cEnv_1585 :: SINGLE(CREC{}) ;; cmpf2s_eEnv_1586 : Trace : UNIT, mvar_1332 : Trace : type_1477.cmp ;; )
*               ->type_1481 =
*               Let  _1484 : Trace = unroll[type_1483](mvar_1332)
*                    _1486 : Trace = 
*                      SUM_SWITCH(_1484: type_1477.cmp_sum, sumswitch_arg_1334, 0: Trace:: _1485NODEFAULT) : type_1481
*               In   _1486
*               End
*               cmpf2s_1331 : cmpf2s_type_1582 = (cmpf2s_code_1583,CREC{},record())
*               STATIC 
*                 cmpi2s_r_type_1587 = ALLARROW(Closure; TOTAL; (var_poly_c_1335 :: REC_K{'a > 'a_TYV_1337 :  TYPE}); 
*                                         (DEP_RECORD[ ]); 0; 
*                                         LET  type_1533 = var_poly_c_1335.'a
*                                              type_1498 = VARARG[Closure->](type_1533, type_1481)
*                                         IN   ALLARROW(Closure; PARTIAL; (); (type_1483); 0; type_1498)
*                                         END)
*               /LEAF-CODE\cmpi2s_r_code_1588
*                 (cmpi2s_r_cEnv_1590 :: SINGLE(CREC{}),
*                  var_poly_c_1335 :: REC_K{'a > 'a_TYV_1337 :  TYPE} ;; 
*                  cmpi2s_r_eEnv_1591 : Trace : cmpf2s_type_1582,
*                  var_poly_r_1336 : Trace : DEP_RECORD[ ] ;; 
*                  )
*               =>LET  type_1533 = var_poly_c_1335.'a
*                      type_1498 = VARARG[Closure->](type_1533, type_1481)
*                 IN   ALLARROW(Closure; PARTIAL; (); (type_1483); 0; type_1498)
*                 END =
*               Let  cmpf2s_1612 : Trace = cmpi2s_r_eEnv_1591
*                    type_1535 = var_poly_c_1335.'a
*                    STATIC type_1493 = VARARG[Closure->](type_1535, type_1481)
*                    STATIC cmpi2s_inner_type_1592 = ALLARROW(Closure; TOTAL; (); (type_1477.cmp); 0; type_1493)
*                    /CODE\cmpi2s_inner_code_1593
*                      (cmpi2s_inner_cEnv_1595 :: SINGLE(CREC{type_1535 = type_1535, var_poly_c_1335 = var_poly_c_1335}) ;; 
*                       cmpi2s_inner_eEnv_1596 : Trace : cmpf2s_type_1582,
*                       c_1339 : Trace : type_1477.cmp ;; 
*                       )
*                    =>type_1493 =
*                    Let  type_1611 = cmpi2s_inner_cEnv_1595.type_1535
*                         var_poly_c_1610 = cmpi2s_inner_cEnv_1595.var_poly_c_1335
*                         cmpf2s_1609 : Trace = cmpi2s_inner_eEnv_1596
*                         STATIC anonfun_type_1597 = ALLARROW(Closure; PARTIAL; (); (type_1611); 0; type_1481)
*                         /NORECUR-CODE\anonfun_code_1598
*                           (anonfun_cEnv_1600 :: SINGLE(CREC{var_poly_c_1335 = var_poly_c_1610}) ;; 
*                            anonfun_eEnv_1601 : Trace : RECORD[cmpf2s_1331, c_1339](cmpf2s_type_1582, TYPEOF(c_1339)),
*                            signflag_1341 : Compute(anonfun_cEnv_1600.var_poly_c_1335. 'a) : type_1611 ;; 
*                            )
*                         ->type_1481 =
*                         Let  var_poly_c_1607 = anonfun_cEnv_1600.var_poly_c_1335
*                              cmpf2s_1605 : Trace = select[cmpf2s_1331][](anonfun_eEnv_1601)
*                              c_1606 : Trace = select[c_1339][](anonfun_eEnv_1601)
*                              _1489 : Trace = App_Closure(cmpf2s_1605;  ; c_1606;  )
*                         In   _1489
*                         End
*                         anonfun_1536 : anonfun_type_1597 = 
*                              (anonfun_code_1598,
*                              CREC{var_poly_c_1335 = var_poly_c_1610},
*                              record(cmpf2s_1331>cmpf2s_1609, c_1339>c_1339))
*                         anonfun_1340 : Trace = make_vararg[Closure][type_1611, type_1481](anonfun_1536)
*                    In   anonfun_1340
*                    End
*                    cmpi2s_inner_1343 : cmpi2s_inner_type_1592 = 
*                         (cmpi2s_inner_code_1593,
*                         CREC{type_1535 = type_1535, var_poly_c_1335 = var_poly_c_1335},
*                         cmpf2s_1612)
*               In   cmpi2s_inner_1343
*               End
*               cmpi2s_r_1345 : cmpi2s_r_type_1587 = (cmpi2s_r_code_1588,CREC{},cmpf2s_1331)
*               _r_1500 : Trace = record(cmpf2s>cmpf2s_1331, cmpi2s>cmpi2s_r_1345)
*          In   _r_1500
*          End,
*          functor_var_r_1258 : functor_var_r_type_1577 = (functor_var_r_code_1578,CREC{},record())]
*         IMPORTS:
*         
*         EXPORTS:
*         Bug_FCT_c = functor_var_c_1257
*         Bug_FCT_r = functor_var_r_1258
*         
===== Translating to RTL             =====

================================================
Starting translation to TIL-Alpha assembly
  7 procedures.  7 recursive components.   Largest component has size 1.
Generation of TIL-Alpha assembly files complete
  [Compressing TM/alpha/pprtl-bug.sml.s]
  [c1660464-a.ehlls1.pa.home.com.1492 compiled Pprtl in 0.51 seconds]
  [Calling c1660464-a.ehlls1.pa.home.com.1492 to compile Trans]
  [0 imports of total size 0 were cached.
   0 imports of total size 0 were uncached and took 0.0 seconds.]
  [Added contexts.]
  [Parsing transparent-bug.sml]
  [Elaborating transparent-bug.sml non-constrained]
gc_context: 17 items in original context.  0 items in reduced context.
  [writing TM/any/transparent-bug.sml.il]
  [Compiling Trans to assembly]
===== Starting Phasesplit: Trans                         =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: Trans                             =====
===== Starting Optimize1: Trans                          =====
===== Starting Vararg: Trans                             =====
===== Starting Inline1: Trans                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: Trans                             =====
===== Starting Specialize: Trans                         =====
  0 optimizable candidates.
  0 impure.
  2 escaping.
  0 used polymorphically.
===== Starting Hoist: Trans                              =====
Imports Processed
===== Starting Optimize2: Trans                          =====
===== Starting Inline2: Trans                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: Trans                          =====
===== Starting Inline3: Trans                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: Trans                             =====
===== Starting ClosureConv: Trans                        =====
PASS: ClosureConv
ClosureConv

          [functor_var_c_code_2024 = 
*               CODE(functor_var_c_cEnv_2026 ::  REC_K{},
*                    funct_arg_c_1870 ::  REC_K{Arg > _c_1872 :  REC_K{t1 > t1_1874 :  TYPE,
*                                                                      t2 > t2_1875 :  TYPE,
*                                                                      t3 > t3_1876 :  TYPE,
*                                                                      t4 > t4_1877 :  TYPE,
*                                                                      t5 > t5_1878 :  TYPE,
*                                                                      t6 > t6_1879 :  TYPE,
*                                                                      t7 > t7_1880 :  TYPE,
*                                                                      t8 > t8_1881 :  TYPE,
*                                                                      t9 > t9_1882 :  TYPE,
*                                                                      t10 > t10_1883 :  TYPE,
*                                                                      t11 > t11_1884 :  TYPE,
*                                                                      t12 > t12_1885 :  TYPE,
*                                                                      t13 > t13_1886 :  TYPE,
*                                                                      t14 > t14_1887 :  TYPE,
*                                                                      t15 > t15_1888 :  TYPE,
*                                                                      t16 > t16_1889 :  TYPE,
*                                                                      t17 > t17_1890 :  TYPE,
*                                                                      t18 > t18_1891 :  TYPE,
*                                                                      t19 > t19_1892 :  TYPE,
*                                                                      t20 > t20_1893 :  TYPE,
*                                                                      t21 > t21_1894 :  TYPE,
*                                                                      t22 > t22_1895 :  TYPE,
*                                                                      t23 > t23_1896 :  TYPE,
*                                                                      t24 > t24_1897 :  TYPE,
*                                                                      t25 > t25_1898 :  TYPE}})
*              = LET  
*                IN   CREC{}
*                END,
*          functor_var_c_1868 = CLOSURE(functor_var_c_code_2024,CREC{}),
*          STATIC type_1952 = MU_NR((_1899=SUM(2,2)(CREC{}))),
*          STATIC type_1953 = type_1952.1,
*          type_1988 = MU_NR((_1913=SUM(2,2)(CREC{}))),
*          type_1989 = type_1988.1,
*          STATIC type_1976 = MU_NR((_1906=SUM(2,2)(CREC{}))),
*          STATIC type_1977 = type_1976.1,
*          STATIC 
*            functor_var_r_type_2028 = ALLARROW(Closure; TOTAL; (funct_arg_c_1945 :: REC_K{Arg > _c_1944 : 
*                                                                                          REC_K{t1 > t1_1919 :  TYPE,
*                                                                                                t2 > t2_1920 :  TYPE,
*                                                                                                t3 > t3_1921 :  TYPE,
*                                                                                                t4 > t4_1922 :  TYPE,
*                                                                                                t5 > t5_1923 :  TYPE,
*                                                                                                t6 > t6_1924 :  TYPE,
*                                                                                                t7 > t7_1925 :  TYPE,
*                                                                                                t8 > t8_1926 :  TYPE,
*                                                                                                t9 > t9_1927 :  TYPE,
*                                                                                                t10 > t10_1928 :  TYPE,
*                                                                                                t11 > t11_1929 :  TYPE,
*                                                                                                t12 > t12_1930 :  TYPE,
*                                                                                                t13 > t13_1931 :  TYPE,
*                                                                                                t14 > t14_1932 :  TYPE,
*                                                                                                t15 > t15_1933 :  TYPE,
*                                                                                                t16 > t16_1934 :  TYPE,
*                                                                                                t17 > t17_1935 :  TYPE,
*                                                                                                t18 > t18_1936 :  TYPE,
*                                                                                                t19 > t19_1937 :  TYPE,
*                                                                                                t20 > t20_1938 :  TYPE,
*                                                                                                t21 > t21_1939 :  TYPE,
*                                                                                                t22 > t22_1940 :  TYPE,
*                                                                                                t23 > t23_1941 :  TYPE,
*                                                                                                t24 > t24_1942 :  TYPE,
*                                                                                                t25 > t25_1943 :  TYPE}}); 
*                                         (funct_arg_r_1871 :: DEP_RECORD[ Arg > _r_1873, x > x_1901]
*                                                                (DEP_RECORD[ +Et25 > +Et25_INT_1900]
*                                                                   (ALLARROW(Closure; PARTIAL; (); 
*                                                                       (funct_arg_c_1945.Arg. t25, funct_arg_c_1945.Arg. t25); 0; 
*                                                                       type_1953)),
*                                                                 funct_arg_c_1945.Arg. t25)); 0; 
*                                         LET  type_1984 = funct_arg_c_1945.Arg
*                                              type_1985 = type_1984.t25
*                                         IN   DEP_RECORD[ cmpf2s > _1907](VARARG[Closure->](type_1985, type_1977))
*                                         END),
*          /LEAF-CODE\DEPfunctor_var_r_code_2029
*            (functor_var_r_cEnv_2031 :: SINGLE(CREC{}),
*             funct_arg_c_1945 :: REC_K{Arg > _c_1944 :  REC_K{t1 > t1_1919 :  TYPE,
*                                                              t2 > t2_1920 :  TYPE,
*                                                              t3 > t3_1921 :  TYPE,
*                                                              t4 > t4_1922 :  TYPE,
*                                                              t5 > t5_1923 :  TYPE,
*                                                              t6 > t6_1924 :  TYPE,
*                                                              t7 > t7_1925 :  TYPE,
*                                                              t8 > t8_1926 :  TYPE,
*                                                              t9 > t9_1927 :  TYPE,
*                                                              t10 > t10_1928 :  TYPE,
*                                                              t11 > t11_1929 :  TYPE,
*                                                              t12 > t12_1930 :  TYPE,
*                                                              t13 > t13_1931 :  TYPE,
*                                                              t14 > t14_1932 :  TYPE,
*                                                              t15 > t15_1933 :  TYPE,
*                                                              t16 > t16_1934 :  TYPE,
*                                                              t17 > t17_1935 :  TYPE,
*                                                              t18 > t18_1936 :  TYPE,
*                                                              t19 > t19_1937 :  TYPE,
*                                                              t20 > t20_1938 :  TYPE,
*                                                              t21 > t21_1939 :  TYPE,
*                                                              t22 > t22_1940 :  TYPE,
*                                                              t23 > t23_1941 :  TYPE,
*                                                              t24 > t24_1942 :  TYPE,
*                                                              t25 > t25_1943 :  TYPE}} ;; 
*             functor_var_r_eEnv_2032 : Trace : UNIT,
*             funct_arg_r_1871 : 
*               Trace : 
*               DEP_RECORD[ Arg > _r_1873, x > x_1901]
*                 (DEP_RECORD[ +Et25 > +Et25_INT_1900]
*                    (ALLARROW(Closure; PARTIAL; (); (funct_arg_c_1945.Arg. t25, funct_arg_c_1945.Arg. t25); 0; type_1953)),
*                  funct_arg_c_1945.Arg. t25) ;; 
*             )
*          =>LET  type_1984 = funct_arg_c_1945.Arg
*                 type_1985 = type_1984.t25
*            IN   DEP_RECORD[ cmpf2s > _1907](VARARG[Closure->](type_1985, type_1977))
*            END =
*          Let  funct_arg_r_Arg_1957 : Trace = select[Arg][](funct_arg_r_1871)
*               funct_arg_Arg_r_+Et25_1961 : Trace = select[+Et25][](funct_arg_r_Arg_1957)
*               funct_arg_r_x_1962 : Compute(funct_arg_c_1945.Arg. t25) = select[x][](funct_arg_r_1871)
*               STATIC cmpf2s_type_2033 = ALLARROW(Closure; PARTIAL; (); (funct_arg_c_1945.Arg. t25); 0; type_1989)
*               /CODE\cmpf2s_code_2034
*                 (cmpf2s_cEnv_2036 :: SINGLE(CREC{funct_arg_c_1945 = funct_arg_c_1945}) ;; 
*                  cmpf2s_eEnv_2037 : 
*                    Trace : 
*                    RECORD[funct_arg_Arg_r_+Et25_1961, funct_arg_r_x_1962]
*                      (TYPEOF(funct_arg_Arg_r_+Et25_1961), TYPEOF(funct_arg_r_x_1962)),
*                  y_1912 : Compute(cmpf2s_cEnv_2036.funct_arg_c_1945. Arg. t25) : cmpf2s_cEnv_2036.funct_arg_c_1945. Arg. t25 ;; 
*                  )
*               ->type_1989 =
*               Let  funct_arg_c_2043 = cmpf2s_cEnv_2036.funct_arg_c_1945
*                    funct_arg_Arg_r_+Et25_2041 : Trace = select[funct_arg_Arg_r_+Et25_1961][](cmpf2s_eEnv_2037)
*                    funct_arg_r_x_2042 : Compute(funct_arg_c_2043.Arg. t25) = select[funct_arg_r_x_1962][](cmpf2s_eEnv_2037)
*                    _1994 : Trace = App_Closure(funct_arg_Arg_r_+Et25_2041;  ; funct_arg_r_x_2042, y_1912;  )
*               In   _1994
*               End
*               cmpf2s_1986 : cmpf2s_type_2033 = 
*                    (cmpf2s_code_2034,
*                    CREC{funct_arg_c_1945 = funct_arg_c_1945},
*                    record(funct_arg_Arg_r_+Et25_1961>funct_arg_Arg_r_+Et25_1961, funct_arg_r_x_1962>funct_arg_r_x_1962))
*               cmpf2s_1911 : Trace = make_vararg[Closure][funct_arg_c_1945.Arg. t25, type_1989](cmpf2s_1986)
*               _r_1968 : Trace = record(cmpf2s>cmpf2s_1911)
*          In   _r_1968
*          End,
*          functor_var_r_1869 : functor_var_r_type_2028 = (functor_var_r_code_2029,CREC{},record())]
*         IMPORTS:
*         
*         EXPORTS:
*         Bug_FCT_c = functor_var_c_1868
*         Bug_FCT_r = functor_var_r_1869
*         
===== Translating to RTL             =====
tilt: tortl-base.sml: Record too big
Command exited with non-zero status 1
0.31user 0.16system 0:00.92elapsed 50%CPU (0avgtext+0avgdata 0maxresident)k
0inputs+0outputs (437major+2813minor)pagefaults 0swaps
