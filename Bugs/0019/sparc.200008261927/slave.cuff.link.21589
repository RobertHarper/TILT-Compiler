Saving: tilt -s
Date: Sat Aug 26 19:25:31 EDT 2000
Starting slave cuff.link.21589.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave received FLUSH_ALL.
Setting PtrWriteBarrier to true
Setting FullWriteBarrier to true
Setting MirrorGlobal to true
Setting MirrorPtrArray to false
Setting UptoElaborate to false
Setting UptoPhasesplit to false
Setting UptoClosureConvert to false
Setting UptoRtl to false
Setting UptoAsm to false
Setting debug_asm to true
Setting keep_asm to true
Setting compress_asm to true
Setting ManagerChat to true
Setting ManagerVerbose to true
Setting TimeEachFile to false
Setting makeBackups to false
Setting ShowWrittenContext to false
Setting WriteUnselfContext to false
Setting ShowTools to false
Slave waiting for master to send work.
Slave waiting for master to send work.
Flushing Bool.
Slave waiting for master to send work.
Flushing IMPERATIVE_IO.
Flushing BOOL.
Flushing INTEGER.
Flushing TIME.
Flushing CHAR.
  [Compiling WORD to assembly]
  [0 imports of total size 0 were cached.
   6 imports of total size 24895 were uncached and took 0.34 seconds.]
  [Added contexts.]
  [Parsing Basis/Numeric/word-sig.sml]
  [Elaborating Basis/Numeric/word-sig.sml non-constrained]
  [writing Basis/Numeric/TM/any/word-sig.sml.il - unnecessary]
gc_context: 233 items in original context.  10 items in reduced context.
===== Starting Phasesplit: WORD                          =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: WORD                              =====
===== Starting Optimize1: WORD                           =====
===== Starting Vararg: WORD                              =====
===== Starting Inline1: WORD                             =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: WORD                              =====
===== Starting Specialize: WORD                          =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: WORD                               =====
Imports Processed
===== Starting Optimize2: WORD                           =====
===== Starting Inline2: WORD                             =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: WORD                           =====
===== Starting Inline3: WORD                             =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: WORD                              =====
===== Starting ClosureConv: WORD                         =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling WORD to object file.]
  [Compressing Basis/Numeric/TM/sparc/word-sig.sml.s]
Slave compiled WORD
Slave waiting for master to send work.
Flushing StringCvt.
Flushing OS_PRIM_IO.
Flushing STREAM_IO.
Flushing PRELINK.
Flushing MONO_HASH_TABLE.
Flushing Delay.
Flushing ORD_MAP.
  [Compiling ORD_SET to assembly]
  [1 imports of total size 15446 were cached.
   1 imports of total size 148 were uncached and took 0.0 seconds.]
  [Added contexts.]
  [Parsing Basis/Library/ord-set-sig.sml]
  [Elaborating Basis/Library/ord-set-sig.sml non-constrained]
  [writing Basis/Library/TM/any/ord-set-sig.sml.il - unnecessary]
gc_context: 227 items in original context.  5 items in reduced context.
===== Starting Phasesplit: ORD_SET                       =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: ORD_SET                           =====
===== Starting Optimize1: ORD_SET                        =====
===== Starting Vararg: ORD_SET                           =====
===== Starting Inline1: ORD_SET                          =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: ORD_SET                           =====
===== Starting Specialize: ORD_SET                       =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: ORD_SET                            =====
Imports Processed
===== Starting Optimize2: ORD_SET                        =====
===== Starting Inline2: ORD_SET                          =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: ORD_SET                        =====
===== Starting Inline3: ORD_SET                          =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: ORD_SET                           =====
===== Starting ClosureConv: ORD_SET                      =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling ORD_SET to object file.]
  [Compressing Basis/Library/TM/sparc/ord-set-sig.sml.s]
Slave compiled ORD_SET
Slave waiting for master to send work.
Slave waiting for master to send work.
Flushing ListPair.
Flushing IO.
Flushing PRIM_IO.
Flushing List.
Flushing Option.
Flushing General.
Flushing STRING_CVT.
  [Compiling POSIX_SYS_DB to assembly]
  [1 imports of total size 15446 were cached.
   0 imports of total size 0 were uncached and took 0.0 seconds.]
  [Added contexts.]
  [Parsing Basis/Posix/posix-sysdb-sig.sml]
  [Elaborating Basis/Posix/posix-sysdb-sig.sml non-constrained]
  [writing Basis/Posix/TM/any/posix-sysdb-sig.sml.il - unnecessary]
gc_context: 226 items in original context.  2 items in reduced context.
===== Starting Phasesplit: POSIX_SYS_DB                  =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: POSIX_SYS_DB                      =====
===== Starting Optimize1: POSIX_SYS_DB                   =====
===== Starting Vararg: POSIX_SYS_DB                      =====
===== Starting Inline1: POSIX_SYS_DB                     =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: POSIX_SYS_DB                      =====
===== Starting Specialize: POSIX_SYS_DB                  =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: POSIX_SYS_DB                       =====
Imports Processed
===== Starting Optimize2: POSIX_SYS_DB                   =====
===== Starting Inline2: POSIX_SYS_DB                     =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: POSIX_SYS_DB                   =====
===== Starting Inline3: POSIX_SYS_DB                     =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: POSIX_SYS_DB                      =====
===== Starting ClosureConv: POSIX_SYS_DB                 =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling POSIX_SYS_DB to object file.]
  [Compressing Basis/Posix/TM/sparc/posix-sysdb-sig.sml.s]
Slave compiled POSIX_SYS_DB
Slave waiting for master to send work.
Flushing OPTION.
Flushing STRING.
Flushing PreString.
Flushing GENERAL.
Flushing LIST.
Flushing IEEE.
Flushing Math64.
  [Compiling PreOS to assembly]
  [1 imports of total size 15446 were cached.
   0 imports of total size 0 were uncached and took 0.0 seconds.]
  [Added contexts.]
  [Parsing Basis/Unix/pre-os.sml]
  [Elaborating Basis/Unix/pre-os.sml non-constrained]
  [writing Basis/Unix/TM/any/pre-os.sml.il - unnecessary]
gc_context: 226 items in original context.  0 items in reduced context.
===== Starting Phasesplit: PreOS                         =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: PreOS                             =====
===== Starting Optimize1: PreOS                          =====
===== Starting Vararg: PreOS                             =====
===== Starting Inline1: PreOS                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: PreOS                             =====
===== Starting Specialize: PreOS                         =====
  0 optimizable candidates.
  0 impure.
  3 escaping.
  0 used polymorphically.
===== Starting Hoist: PreOS                              =====
Imports Processed
===== Starting Optimize2: PreOS                          =====
===== Starting Inline2: PreOS                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: PreOS                          =====
===== Starting Inline3: PreOS                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: PreOS                             =====
===== Starting ClosureConv: PreOS                        =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  4 procedures.  4 recursive components.   Largest component has size 1.
  [Assembling PreOS to object file.]
  [Compressing Basis/Unix/TM/sparc/pre-os.sml.s]
Slave compiled PreOS
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Flushing MONO_ARRAY.
Flushing NumScan.
Flushing String.
Flushing Char.
Flushing NumFormat.
Flushing ARRAY.
Flushing MONO_VECTOR.
  [Compiling VECTOR to assembly]
  [1 imports of total size 15446 were cached.
   0 imports of total size 0 were uncached and took 0.0 seconds.]
  [Added contexts.]
  [Parsing Basis/Aggregate/vector-sig.sml]
  [Elaborating Basis/Aggregate/vector-sig.sml non-constrained]
  [writing Basis/Aggregate/TM/any/vector-sig.sml.il - unnecessary]
gc_context: 226 items in original context.  2 items in reduced context.
===== Starting Phasesplit: VECTOR                        =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: VECTOR                            =====
===== Starting Optimize1: VECTOR                         =====
===== Starting Vararg: VECTOR                            =====
===== Starting Inline1: VECTOR                           =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: VECTOR                            =====
===== Starting Specialize: VECTOR                        =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: VECTOR                             =====
Imports Processed
===== Starting Optimize2: VECTOR                         =====
===== Starting Inline2: VECTOR                           =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: VECTOR                         =====
===== Starting Inline3: VECTOR                           =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: VECTOR                            =====
===== Starting ClosureConv: VECTOR                       =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling VECTOR to object file.]
  [Compressing Basis/Aggregate/TM/sparc/vector-sig.sml.s]
Slave compiled VECTOR
Flushing POSIX_ERROR.
Flushing Word8Vector.
Flushing Word8Array.
  [Compiling Vector to assembly]
  [2 imports of total size 18184 were cached.
   6 imports of total size 22040 were uncached and took 0.12 seconds.]
  [Added contexts.]
  [Parsing Basis/Aggregate/vector.sml]
  [Elaborating Basis/Aggregate/vector.sml non-constrained]
  [writing Basis/Aggregate/TM/any/vector.sml.il - unnecessary]
gc_context: 233 items in original context.  16 items in reduced context.
===== Starting Phasesplit: Vector                        =====
  Initial context is phase-split
Warning: newSplitVar called on alredy existing variable copy_+Evector_INT_3783
Warning: newSplitVar called on alredy existing variable copy_fromList_3787
Warning: newSplitVar called on alredy existing variable copy_tabulate_3790
Warning: newSplitVar called on alredy existing variable copy_length_3793
Warning: newSplitVar called on alredy existing variable copy_sub_3796
Warning: newSplitVar called on alredy existing variable copy_extract_3799
Warning: newSplitVar called on alredy existing variable copy_concat_3802
Warning: newSplitVar called on alredy existing variable copy_app_3805
Warning: newSplitVar called on alredy existing variable copy_map_3808
Warning: newSplitVar called on alredy existing variable copy_foldl_3812
Warning: newSplitVar called on alredy existing variable copy_foldr_3816
Warning: newSplitVar called on alredy existing variable copy_appi_3820
Warning: newSplitVar called on alredy existing variable copy_mapi_3823
Warning: newSplitVar called on alredy existing variable copy_foldli_3827
Warning: newSplitVar called on alredy existing variable copy_foldri_3831
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: Vector                            =====
===== Starting Optimize1: Vector                         =====
===== Starting Vararg: Vector                            =====
===== Starting Inline1: Vector                           =====
  3 functions inlined once.
  6 copies of 2 other functions inlined.
===== Starting Reify1: Vector                            =====
===== Starting Specialize: Vector                        =====
  0 optimizable candidates.
  7 impure.
  46 escaping.
  2 used polymorphically.
===== Starting Hoist: Vector                             =====
Imports Processed
===== Starting Optimize2: Vector                         =====
===== Starting Inline2: Vector                           =====
  1 functions inlined once.
  2 copies of 1 other functions inlined.
===== Starting Optimize3: Vector                         =====
===== Starting Inline3: Vector                           =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: Vector                            =====
===== Starting ClosureConv: Vector                       =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  53 procedures.  53 recursive components.   Largest component has size 1.
  [Assembling Vector to object file.]
/usr/ccs/bin/as: "Basis/Aggregate/TM/sparc/vector.sml.s", line 2487: warning: not even-numbered register
/usr/ccs/bin/as: "Basis/Aggregate/TM/sparc/vector.sml.s", line 2800: warning: not even-numbered register
/usr/ccs/bin/as: "Basis/Aggregate/TM/sparc/vector.sml.s", line 3730: warning: not even-numbered register
/usr/ccs/bin/as: "Basis/Aggregate/TM/sparc/vector.sml.s", line 4864: warning: not even-numbered register
  [Compressing Basis/Aggregate/TM/sparc/vector.sml.s]
Slave compiled Vector
Slave waiting for master to send work.
Flushing PrimIOFn.
Flushing BACKGROUND.
Flushing STATISTICS.
Flushing FIFO.
Flushing RealFormat.
Flushing CharArray.
Flushing CharVector.
Flushing Array.
  [Compiling SUBSTRING to assembly]
  [1 imports of total size 15446 were cached.
   0 imports of total size 0 were uncached and took 0.0 seconds.]
  [Added contexts.]
  [Parsing Basis/Text/substring-sig.sml]
  [Elaborating Basis/Text/substring-sig.sml non-constrained]
  [writing Basis/Text/TM/any/substring-sig.sml.il - unnecessary]
gc_context: 226 items in original context.  5 items in reduced context.
===== Starting Phasesplit: SUBSTRING                     =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: SUBSTRING                         =====
===== Starting Optimize1: SUBSTRING                      =====
===== Starting Vararg: SUBSTRING                         =====
===== Starting Inline1: SUBSTRING                        =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: SUBSTRING                         =====
===== Starting Specialize: SUBSTRING                     =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: SUBSTRING                          =====
Imports Processed
===== Starting Optimize2: SUBSTRING                      =====
===== Starting Inline2: SUBSTRING                        =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: SUBSTRING                      =====
===== Starting Inline3: SUBSTRING                        =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: SUBSTRING                         =====
===== Starting ClosureConv: SUBSTRING                    =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling SUBSTRING to object file.]
  [Compressing Basis/Text/TM/sparc/substring-sig.sml.s]
Slave compiled SUBSTRING
Slave waiting for master to send work.
Slave waiting for master to send work.
Flushing CLEAN_UP.
Flushing POSIX_TTY.
Flushing REAL.
Flushing TEXT_IO.
Flushing TEXT_STREAM_IO.
Flushing OS_PATH.
Flushing Substring.
  [Compiling CleanUp to assembly]
  [1 imports of total size 15446 were cached.
   3 imports of total size 11019 were uncached and took 0.07 seconds.]
  [Added contexts.]
  [Parsing Basis/NJ/cleanup.sml]
  [Elaborating Basis/NJ/cleanup.sml non-constrained]
  [writing Basis/NJ/TM/any/cleanup.sml.il - unnecessary]
gc_context: 229 items in original context.  12 items in reduced context.
===== Starting Phasesplit: CleanUp                       =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: CleanUp                           =====
===== Starting Optimize1: CleanUp                        =====
===== Starting Vararg: CleanUp                           =====
===== Starting Inline1: CleanUp                          =====
  2 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: CleanUp                           =====
===== Starting Specialize: CleanUp                       =====
  0 optimizable candidates.
  2 impure.
  12 escaping.
  0 used polymorphically.
===== Starting Hoist: CleanUp                            =====
Imports Processed
===== Starting Optimize2: CleanUp                        =====
===== Starting Inline2: CleanUp                          =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: CleanUp                        =====
===== Starting Inline3: CleanUp                          =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: CleanUp                           =====
===== Starting ClosureConv: CleanUp                      =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  15 procedures.  15 recursive components.   Largest component has size 1.
  [Assembling CleanUp to object file.]
  [Compressing Basis/NJ/TM/sparc/cleanup.sml.s]
Slave compiled CleanUp
Slave waiting for master to send work.
Flushing OS_PROCESS.
Flushing POSIX_Error.
Flushing TILWORD.
Flushing OS_Path.
Flushing OS_PathFn.
Flushing IO_SIG.
Flushing CleanIO.
  [Compiling CommandLineHelp to assembly]
  [1 imports of total size 15446 were cached.
   0 imports of total size 0 were uncached and took 0.0 seconds.]
  [Added contexts.]
  [Parsing Basis/OS/commandline-help.sml]
  [Elaborating Basis/OS/commandline-help.sml non-constrained]
  [writing Basis/OS/TM/any/commandline-help.sml.il - unnecessary]
gc_context: 226 items in original context.  0 items in reduced context.
===== Starting Phasesplit: CommandLineHelp               =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: CommandLineHelp                   =====
===== Starting Optimize1: CommandLineHelp                =====
===== Starting Vararg: CommandLineHelp                   =====
===== Starting Inline1: CommandLineHelp                  =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: CommandLineHelp                   =====
===== Starting Specialize: CommandLineHelp               =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: CommandLineHelp                    =====
Imports Processed
===== Starting Optimize2: CommandLineHelp                =====
===== Starting Inline2: CommandLineHelp                  =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: CommandLineHelp                =====
===== Starting Inline3: CommandLineHelp                  =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: CommandLineHelp                   =====
===== Starting ClosureConv: CommandLineHelp              =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling CommandLineHelp to object file.]
  [Compressing Basis/OS/TM/sparc/commandline-help.sml.s]
Slave compiled CommandLineHelp
Slave waiting for master to send work.
Flushing COMMAND_LINE.
Slave waiting for master to send work.
Flushing Word31.
Flushing PLATFORM.
Flushing CommandLine.
Flushing SLAVE.
Flushing UPDATE.
  [Compiling STATS to assembly]
  [1 imports of total size 15446 were cached.
   0 imports of total size 0 were uncached and took 0.0 seconds.]
  [Added contexts.]
  [Parsing Util/stats.sig.sml]
  [Elaborating Util/stats.sig.sml non-constrained]
  [writing Util/TM/any/stats.sig.sml.il - unnecessary]
gc_context: 226 items in original context.  2 items in reduced context.
===== Starting Phasesplit: STATS                         =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: STATS                             =====
===== Starting Optimize1: STATS                          =====
===== Starting Vararg: STATS                             =====
===== Starting Inline1: STATS                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: STATS                             =====
===== Starting Specialize: STATS                         =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: STATS                              =====
Imports Processed
===== Starting Optimize2: STATS                          =====
===== Starting Inline2: STATS                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: STATS                          =====
===== Starting Inline3: STATS                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: STATS                             =====
===== Starting ClosureConv: STATS                        =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling STATS to object file.]
  [Compressing Util/TM/sparc/stats.sig.sml.s]
Slave compiled STATS
Flushing LISTOPS.
Slave waiting for master to send work.
Flushing POSIX_extern.
Flushing POSIX_SIGNAL.
Flushing Ieee.
Flushing UTIL.
Flushing UTIL_ERROR.
Flushing LIST_PAIR.
  [Compiling LIST_SORT to assembly]
  [1 imports of total size 15446 were cached.
   0 imports of total size 0 were uncached and took 0.0 seconds.]
  [Added contexts.]
  [Parsing Basis/Library/listsort-sig.sml]
  [Elaborating Basis/Library/listsort-sig.sml non-constrained]
  [writing Basis/Library/TM/any/listsort-sig.sml.il - unnecessary]
gc_context: 226 items in original context.  3 items in reduced context.
===== Starting Phasesplit: LIST_SORT                     =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: LIST_SORT                         =====
===== Starting Optimize1: LIST_SORT                      =====
===== Starting Vararg: LIST_SORT                         =====
===== Starting Inline1: LIST_SORT                        =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: LIST_SORT                         =====
===== Starting Specialize: LIST_SORT                     =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: LIST_SORT                          =====
Imports Processed
===== Starting Optimize2: LIST_SORT                      =====
===== Starting Inline2: LIST_SORT                        =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: LIST_SORT                      =====
===== Starting Inline3: LIST_SORT                        =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: LIST_SORT                         =====
===== Starting ClosureConv: LIST_SORT                    =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling LIST_SORT to object file.]
  [Compressing Basis/Library/TM/sparc/listsort-sig.sml.s]
Slave compiled LIST_SORT
Flushing LIB_BASE.
Flushing SPLAY_TREE.
Flushing ORD_KEY.
Flushing PATHS.
Flushing TARGET.
Flushing PRETTYPRINT.
  [Compiling HASH_TABLE to assembly]
  [1 imports of total size 15446 were cached.
   0 imports of total size 0 were uncached and took 0.0 seconds.]
  [Added contexts.]
  [Parsing Basis/Library/hash-table-sig.sml]
  [Elaborating Basis/Library/hash-table-sig.sml non-constrained]
  [writing Basis/Library/TM/any/hash-table-sig.sml.il - unnecessary]
gc_context: 226 items in original context.  4 items in reduced context.
===== Starting Phasesplit: HASH_TABLE                    =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: HASH_TABLE                        =====
===== Starting Optimize1: HASH_TABLE                     =====
===== Starting Vararg: HASH_TABLE                        =====
===== Starting Inline1: HASH_TABLE                       =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: HASH_TABLE                        =====
===== Starting Specialize: HASH_TABLE                    =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: HASH_TABLE                         =====
Imports Processed
===== Starting Optimize2: HASH_TABLE                     =====
===== Starting Inline2: HASH_TABLE                       =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: HASH_TABLE                     =====
===== Starting Inline3: HASH_TABLE                       =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: HASH_TABLE                        =====
===== Starting ClosureConv: HASH_TABLE                   =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling HASH_TABLE to object file.]
  [Compressing Basis/Library/TM/sparc/hash-table-sig.sml.s]
Slave compiled HASH_TABLE
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Flushing SEQUENCE.
Flushing POSIX_FLAGS.
Flushing TYVAR.
Flushing GRAPHUTIL.
Flushing DELAY.
Flushing HASH_KEY.
Flushing TOOLS.
  [Compiling QUEUE to assembly]
  [1 imports of total size 15446 were cached.
   0 imports of total size 0 were uncached and took 0.0 seconds.]
  [Added contexts.]
  [Parsing Basis/Library/queue-sig.sml]
  [Elaborating Basis/Library/queue-sig.sml non-constrained]
  [writing Basis/Library/TM/any/queue-sig.sml.il - unnecessary]
gc_context: 226 items in original context.  3 items in reduced context.
===== Starting Phasesplit: QUEUE                         =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: QUEUE                             =====
===== Starting Optimize1: QUEUE                          =====
===== Starting Vararg: QUEUE                             =====
===== Starting Inline1: QUEUE                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: QUEUE                             =====
===== Starting Specialize: QUEUE                         =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: QUEUE                              =====
Imports Processed
===== Starting Optimize2: QUEUE                          =====
===== Starting Inline2: QUEUE                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: QUEUE                          =====
===== Starting Inline3: QUEUE                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: QUEUE                             =====
===== Starting ClosureConv: QUEUE                        =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling QUEUE to object file.]
  [Compressing Basis/Library/TM/sparc/queue-sig.sml.s]
Slave compiled QUEUE
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Flushing Word8.
Flushing Word32.
Flushing Byte.
Flushing BYTE.
Flushing Int.
Flushing Timer.
Flushing POSIX_PROC_ENV.
Flushing POSIX_PROCESS.
Flushing POSIX_FILE_SYS.
Flushing OS_IO_SIG.
Flushing OS_FILE_SYS.
  [Compiling DATE to assembly]
  [1 imports of total size 15446 were cached.
   31 imports of total size 92149 were uncached and took 0.61 seconds.]
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Basis/date-sig.sml]
  [Elaborating Basis/date-sig.sml non-constrained]
  [writing Basis/TM/any/date-sig.sml.il - unnecessary]
gc_context: 273 items in original context.  8 items in reduced context.
===== Starting Phasesplit: DATE                          =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: DATE                              =====
===== Starting Optimize1: DATE                           =====
===== Starting Vararg: DATE                              =====
===== Starting Inline1: DATE                             =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: DATE                              =====
===== Starting Specialize: DATE                          =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: DATE                               =====
Imports Processed
===== Starting Optimize2: DATE                           =====
===== Starting Inline2: DATE                             =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: DATE                           =====
===== Starting Inline3: DATE                             =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: DATE                              =====
===== Starting ClosureConv: DATE                         =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling DATE to object file.]
  [Compressing Basis/TM/sparc/date-sig.sml.s]
Slave compiled DATE
Slave waiting for master to send work.
Flushing TIMER.
Flushing OS_SIG.
Flushing Statistics.
Flushing HashTableFn.
Flushing HashTable.
  [Compiling Time to assembly]
  [31 imports of total size 106004 were cached.
   0 imports of total size 0 were uncached and took 0.0 seconds.]
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Basis/OS/time.sml]
  [Elaborating Basis/OS/time.sml non-constrained]
  [writing Basis/OS/TM/any/time.sml.il - unnecessary]
gc_context: 272 items in original context.  38 items in reduced context.
===== Starting Phasesplit: Time                          =====
  Initial context is phase-split
WARNING (xsbnds/BND_MOD):  Duplicate variable found:copy_Time_21506
Warning: newSplitVar called on alredy existing variable copy_scan_21527
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: Time                              =====
===== Starting Optimize1: Time                           =====
===== Starting Vararg: Time                              =====
===== Starting Inline1: Time                             =====
  0 functions inlined once.
  4 copies of 2 other functions inlined.
===== Starting Reify1: Time                              =====
===== Starting Specialize: Time                          =====
  0 optimizable candidates.
  8 impure.
  19 escaping.
  0 used polymorphically.
===== Starting Hoist: Time                               =====
Imports Processed
===== Starting Optimize2: Time                           =====
===== Starting Inline2: Time                             =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: Time                           =====
===== Starting Inline3: Time                             =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: Time                              =====
===== Starting ClosureConv: Time                         =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  26 procedures.  26 recursive components.   Largest component has size 1.
  [Assembling Time to object file.]
  [Compressing Basis/OS/TM/sparc/time.sml.s]
Slave compiled Time
Slave waiting for master to send work.
Flushing Real64.
Flushing HashString.
Flushing HashTableRep.
Flushing POSIX_Sys_DB.
Flushing Date.
  [Compiling POSIX_FileSys to assembly]
  [32 imports of total size 107595 were cached.
   15 imports of total size 52585 were uncached and took 0.47 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Basis/Posix/posix-filesys.sml]
  [Warning: constraints currently coerce.  Not compatible with our notion of freshness.]
  [Elaborating Basis/Posix/posix-filesys.sml with constraint]
  [writing Basis/Posix/TM/any/posix-filesys.sml.il]
gc_context: 401 items in original context.  60 items in reduced context.
===== Starting Phasesplit: POSIX_FileSys                 =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: POSIX_FileSys                     =====
===== Starting Optimize1: POSIX_FileSys                  =====
===== Starting Vararg: POSIX_FileSys                     =====
===== Starting Inline1: POSIX_FileSys                    =====
  6 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: POSIX_FileSys                     =====
===== Starting Specialize: POSIX_FileSys                 =====
  0 optimizable candidates.
  3 impure.
  83 escaping.
  0 used polymorphically.
===== Starting Hoist: POSIX_FileSys                      =====
Imports Processed
===== Starting Optimize2: POSIX_FileSys                  =====
===== Starting Inline2: POSIX_FileSys                    =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: POSIX_FileSys                  =====
===== Starting Inline3: POSIX_FileSys                    =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: POSIX_FileSys                     =====
===== Starting ClosureConv: POSIX_FileSys                =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  87 procedures.  87 recursive components.   Largest component has size 1.
  [Assembling POSIX_FileSys to object file.]
  [Compressing Basis/Posix/TM/sparc/posix-filesys.sml.s]
Slave compiled POSIX_FileSys
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Flushing POSIX_IO_SIG.
Flushing BIN_IO.
Flushing TextPrimIO.
Flushing BinPrimIO.
Flushing POSIX.
Flushing BinIOFn.
Flushing POSIX_Signal.
Flushing POSIX_IO.
Flushing POSIX_ProcEnv.
Flushing POSIX_Tty.
Flushing POSIX_Process.
Flushing OS_IO.
Flushing OS_Process.
Flushing OS_FileSys.
Flushing Posix.
Flushing BINIOUTIL.
Flushing CRC.
Flushing BinIO.
Flushing PosixBinPrimIO.
Flushing PosixPrimIOFn.
Flushing TextIOFn.
  [Compiling DIRS to assembly]
  [48 imports of total size 169320 were cached.
   34 imports of total size 153168 were uncached and took 0.92 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Top/dirs.sig.sml]
  [Elaborating Top/dirs.sig.sml non-constrained]
  [writing Top/TM/any/dirs.sig.sml.il - unnecessary]
gc_context: 436 items in original context.  30 items in reduced context.
===== Starting Phasesplit: DIRS                          =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: DIRS                              =====
===== Starting Optimize1: DIRS                           =====
===== Starting Vararg: DIRS                              =====
===== Starting Inline1: DIRS                             =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: DIRS                              =====
===== Starting Specialize: DIRS                          =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: DIRS                               =====
Imports Processed
===== Starting Optimize2: DIRS                           =====
===== Starting Inline2: DIRS                             =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: DIRS                           =====
===== Starting Inline3: DIRS                             =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: DIRS                              =====
===== Starting ClosureConv: DIRS                         =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling DIRS to object file.]
  [Compressing Top/TM/sparc/dirs.sig.sml.s]
Slave compiled DIRS
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Flushing OS.
Flushing PosixTextPrimIO.
Flushing UPDATE_HELP.
Flushing COMPILER.
Flushing MASTER.
Flushing UNIT_ENVIRONMENT.
Flushing FILECACHE.
Flushing MANAGER.
  [Compiling Crc to assembly]
  [82 imports of total size 322488 were cached.
   27 imports of total size 149741 were uncached and took 0.86 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Util/crc-native.sml]
  [Elaborating Util/crc-native.sml non-constrained]
  [writing Util/TM/any/crc-native.sml.il - unnecessary]
gc_context: 491 items in original context.  41 items in reduced context.
===== Starting Phasesplit: Crc                           =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: Crc                               =====
===== Starting Optimize1: Crc                            =====
===== Starting Vararg: Crc                               =====
===== Starting Inline1: Crc                              =====
  3 functions inlined once.
  11 copies of 3 other functions inlined.
===== Starting Reify1: Crc                               =====
===== Starting Specialize: Crc                           =====
  3 optimizable candidates.
  6 impure.
  26 escaping.
  0 used polymorphically.
===== Starting Hoist: Crc                                =====
Imports Processed
===== Starting Optimize2: Crc                            =====
===== Starting Inline2: Crc                              =====
  11 functions inlined once.
  2 copies of 1 other functions inlined.
===== Starting Optimize3: Crc                            =====
===== Starting Inline3: Crc                              =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: Crc                               =====
===== Starting ClosureConv: Crc                          =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  18 procedures.  18 recursive components.   Largest component has size 1.
  [Assembling Crc to object file.]
  [Compressing Util/TM/sparc/crc-native.sml.s]
Slave compiled Crc
Slave waiting for master to send work.
Flushing BinaryMapFn.
Flushing Stream.
Flushing BinarySetFn.
Flushing Queue.
Flushing Fifo.
Flushing POPEN.
Flushing GRAPH.
  [Compiling TextIO to assembly]
  [99 imports of total size 437784 were cached.
   0 imports of total size 0 were uncached and took 0.0 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Basis/Unix/posix-text-io.sml]
  [Warning: constraints currently coerce.  Not compatible with our notion of freshness.]
  [Elaborating Basis/Unix/posix-text-io.sml with constraint]
  [writing Basis/Unix/TM/any/posix-text-io.sml.il]
gc_context: 453 items in original context.  34 items in reduced context.
===== Starting Phasesplit: TextIO                        =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: TextIO                            =====
===== Starting Optimize1: TextIO                         =====
===== Starting Vararg: TextIO                            =====
===== Starting Inline1: TextIO                           =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: TextIO                            =====
===== Starting Specialize: TextIO                        =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: TextIO                             =====
Imports Processed
===== Starting Optimize2: TextIO                         =====
===== Starting Inline2: TextIO                           =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: TextIO                         =====
===== Starting Inline3: TextIO                           =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: TextIO                            =====
===== Starting ClosureConv: TextIO                       =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling TextIO to object file.]
  [Compressing Basis/Unix/TM/sparc/posix-text-io.sml.s]
Slave compiled TextIO
Slave waiting for master to send work.
Flushing INTSTRMAP.
Slave waiting for master to send work.
Flushing YaccBase.
Flushing GraphUtil.
Flushing TopLevelHelp.
  [Compiling TopLevel to assembly]
  [100 imports of total size 443678 were cached.
   1 imports of total size 2635 were uncached and took 0.05 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Basis/toplevel.sml]
  [Elaborating Basis/toplevel.sml non-constrained]
  [writing Basis/TM/any/toplevel.sml.il - unnecessary]
gc_context: 471 items in original context.  34 items in reduced context.
===== Starting Phasesplit: TopLevel                      =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: TopLevel                          =====
===== Starting Optimize1: TopLevel                       =====
===== Starting Vararg: TopLevel                          =====
===== Starting Inline1: TopLevel                         =====
  10 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: TopLevel                          =====
===== Starting Specialize: TopLevel                      =====
  0 optimizable candidates.
  0 impure.
  10 escaping.
  0 used polymorphically.
===== Starting Hoist: TopLevel                           =====
Imports Processed
===== Starting Optimize2: TopLevel                       =====
===== Starting Inline2: TopLevel                         =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: TopLevel                       =====
===== Starting Inline3: TopLevel                         =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: TopLevel                          =====
===== Starting ClosureConv: TopLevel                     =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  11 procedures.  11 recursive components.   Largest component has size 1.
  [Assembling TopLevel to object file.]
  [Compressing Basis/TM/sparc/toplevel.sml.s]
Slave compiled TopLevel
Slave waiting for master to send work.
Flushing RUN.
Flushing Trace.
Flushing Fixity.
Flushing StrgHash.
Flushing PATHNAMES.
Flushing CONTROL.
Flushing LrParser.
  [Compiling Platform to assembly]
  [102 imports of total size 449108 were cached.
   3 imports of total size 1805 were uncached and took 0.11 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Util/platform.sml]
  [Elaborating Util/platform.sml non-constrained]
  [writing Util/TM/any/platform.sml.il - unnecessary]
gc_context: 487 items in original context.  46 items in reduced context.
===== Starting Phasesplit: Platform                      =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: Platform                          =====
===== Starting Optimize1: Platform                       =====
===== Starting Vararg: Platform                          =====
===== Starting Inline1: Platform                         =====
  2 functions inlined once.
  2 copies of 1 other functions inlined.
===== Starting Reify1: Platform                          =====
===== Starting Specialize: Platform                      =====
  1 optimizable candidates.
  3 impure.
  10 escaping.
  0 used polymorphically.
===== Starting Hoist: Platform                           =====
Imports Processed
===== Starting Optimize2: Platform                       =====
===== Starting Inline2: Platform                         =====
  2 functions inlined once.
  2 copies of 1 other functions inlined.
===== Starting Optimize3: Platform                       =====
===== Starting Inline3: Platform                         =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: Platform                          =====
===== Starting ClosureConv: Platform                     =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  11 procedures.  11 recursive components.   Largest component has size 1.
  [Assembling Platform to object file.]
  [Compressing Util/TM/sparc/platform.sml.s]
Slave compiled Platform
Flushing Run.
Flushing IntStrMap.
Flushing PathNames.
Flushing Control.
Flushing PpQueue.
Flushing SOURCEMAP.
  [Compiling UtilError to assembly]
  [103 imports of total size 449477 were cached.
   0 imports of total size 0 were uncached and took 0.0 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Util/util-error.sml]
  [Elaborating Util/util-error.sml non-constrained]
  [writing Util/TM/any/util-error.sml.il - unnecessary]
gc_context: 485 items in original context.  7 items in reduced context.
===== Starting Phasesplit: UtilError                     =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: UtilError                         =====
===== Starting Optimize1: UtilError                      =====
===== Starting Vararg: UtilError                         =====
===== Starting Inline1: UtilError                        =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: UtilError                         =====
===== Starting Specialize: UtilError                     =====
  0 optimizable candidates.
  0 impure.
  6 escaping.
  0 used polymorphically.
===== Starting Hoist: UtilError                          =====
Imports Processed
===== Starting Optimize2: UtilError                      =====
===== Starting Inline2: UtilError                        =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: UtilError                      =====
===== Starting Inline3: UtilError                        =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: UtilError                         =====
===== Starting ClosureConv: UtilError                    =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  7 procedures.  7 recursive components.   Largest component has size 1.
  [Assembling UtilError to object file.]
  [Compressing Util/TM/sparc/util-error.sml.s]
Slave compiled UtilError
Slave waiting for master to send work.
Flushing FORMATTER.
Flushing SourceMap.
Flushing Listops.
Flushing Popen.
  [Compiling Background to assembly]
  [104 imports of total size 449957 were cached.
   5 imports of total size 8196 were uncached and took 0.07 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Top/background.sml]
  [Elaborating Top/background.sml non-constrained]
  [writing Top/TM/any/background.sml.il - unnecessary]
gc_context: 491 items in original context.  54 items in reduced context.
===== Starting Phasesplit: Background                    =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: Background                        =====
===== Starting Optimize1: Background                     =====
===== Starting Vararg: Background                        =====
===== Starting Inline1: Background                       =====
  5 functions inlined once.
  3 copies of 1 other functions inlined.
===== Starting Reify1: Background                        =====
===== Starting Specialize: Background                    =====
  1 optimizable candidates.
  0 impure.
  7 escaping.
  0 used polymorphically.
===== Starting Hoist: Background                         =====
Imports Processed
===== Starting Optimize2: Background                     =====
===== Starting Inline2: Background                       =====
  3 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: Background                     =====
===== Starting Inline3: Background                       =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: Background                        =====
===== Starting ClosureConv: Background                   =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  4 procedures.  4 recursive components.   Largest component has size 1.
  [Assembling Background to object file.]
  [Compressing Top/TM/sparc/background.sml.s]
Slave compiled Background
Slave waiting for master to send work.
Flushing Util.
Flushing SYMBOL.
Flushing SplayTree.
Flushing Join.
Flushing PRINTUTIL.
  [Compiling ENV to assembly]
  [102 imports of total size 449108 were cached.
   1 imports of total size 1811 were uncached and took 0.03 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Parser/env.sig.sml]
  [Elaborating Parser/env.sig.sml non-constrained]
  [writing Parser/TM/any/env.sig.sml.il - unnecessary]
gc_context: 485 items in original context.  4 items in reduced context.
===== Starting Phasesplit: ENV                           =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: ENV                               =====
===== Starting Optimize1: ENV                            =====
===== Starting Vararg: ENV                               =====
===== Starting Inline1: ENV                              =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: ENV                               =====
===== Starting Specialize: ENV                           =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: ENV                                =====
Imports Processed
===== Starting Optimize2: ENV                            =====
===== Starting Inline2: ENV                              =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: ENV                            =====
===== Starting Inline3: ENV                              =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: ENV                               =====
===== Starting ClosureConv: ENV                          =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling ENV to object file.]
  [Compressing Parser/TM/sparc/env.sig.sml.s]
Slave compiled ENV
Flushing LrTable.
Slave waiting for master to send work.
Flushing MAIN.
Flushing LibBase.
Flushing BinIoUtil.
  [Compiling GETOPT to assembly]
  [102 imports of total size 449108 were cached.
   0 imports of total size 0 were uncached and took 0.0 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Top/getopt.sig.sml]
  [Elaborating Top/getopt.sig.sml non-constrained]
  [writing Top/TM/any/getopt.sig.sml.il - unnecessary]
gc_context: 484 items in original context.  3 items in reduced context.
===== Starting Phasesplit: GETOPT                        =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: GETOPT                            =====
===== Starting Optimize1: GETOPT                         =====
===== Starting Vararg: GETOPT                            =====
===== Starting Inline1: GETOPT                           =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: GETOPT                            =====
===== Starting Specialize: GETOPT                        =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: GETOPT                             =====
Imports Processed
===== Starting Optimize2: GETOPT                         =====
===== Starting Inline2: GETOPT                           =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: GETOPT                         =====
===== Starting Inline3: GETOPT                           =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: GETOPT                            =====
===== Starting ClosureConv: GETOPT                       =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling GETOPT to object file.]
  [Compressing Top/TM/sparc/getopt.sig.sml.s]
Slave compiled GETOPT
Slave waiting for master to send work.
Flushing Source.
Flushing SOURCE.
Flushing Getopt.
Flushing ListMergeSort.
Flushing SplaySetFn.
  [Compiling SplayMapFn to assembly]
  [102 imports of total size 449108 were cached.
   6 imports of total size 11145 were uncached and took 0.08 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Basis/Library/splay-map-fn.sml]
  [Elaborating Basis/Library/splay-map-fn.sml non-constrained]
  [writing Basis/Library/TM/any/splay-map-fn.sml.il - unnecessary]
gc_context: 490 items in original context.  16 items in reduced context.
===== Starting Phasesplit: SplayMapFn                    =====
  Initial context is phase-split
WARNING (xsbnds/BND_MOD):  Duplicate variable found:openvar_119822
WARNING (xsbnds/BND_MOD):  Duplicate variable found:copy_Key_STR_121681
Warning: newSplitVar called on alredy existing variable copy_empty_121683
Warning: newSplitVar called on alredy existing variable copy_insert_121686
Warning: newSplitVar called on alredy existing variable copy_find_121689
Warning: newSplitVar called on alredy existing variable copy_remove_121692
Warning: newSplitVar called on alredy existing variable copy_numItems_121695
Warning: newSplitVar called on alredy existing variable copy_listItems_121698
Warning: newSplitVar called on alredy existing variable copy_listItemsi_121701
Warning: newSplitVar called on alredy existing variable copy_collate_121704
Warning: newSplitVar called on alredy existing variable copy_unionWith_121708
Warning: newSplitVar called on alredy existing variable copy_unionWithi_121711
Warning: newSplitVar called on alredy existing variable copy_intersectWith_121714
Warning: newSplitVar called on alredy existing variable copy_intersectWithi_121719
Warning: newSplitVar called on alredy existing variable copy_app_121724
Warning: newSplitVar called on alredy existing variable copy_appi_121728
Warning: newSplitVar called on alredy existing variable copy_map_121732
Warning: newSplitVar called on alredy existing variable copy_mapi_121736
Warning: newSplitVar called on alredy existing variable copy_foldl_121740
Warning: newSplitVar called on alredy existing variable copy_foldli_121744
Warning: newSplitVar called on alredy existing variable copy_foldr_121748
Warning: newSplitVar called on alredy existing variable copy_foldri_121752
Warning: newSplitVar called on alredy existing variable copy_filter_121756
Warning: newSplitVar called on alredy existing variable copy_filteri_121759
Warning: newSplitVar called on alredy existing variable copy_mapPartial_121762
Warning: newSplitVar called on alredy existing variable copy_mapPartiali_121766
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: SplayMapFn                        =====
===== Starting Optimize1: SplayMapFn                     =====
===== Starting Vararg: SplayMapFn                        =====
===== Starting Inline1: SplayMapFn                       =====
  7 functions inlined once.
  2 copies of 1 other functions inlined.
===== Starting Reify1: SplayMapFn                        =====
===== Starting Specialize: SplayMapFn                    =====
  3 optimizable candidates.
  10 impure.
  94 escaping.
  5 used polymorphically.
===== Starting Hoist: SplayMapFn                         =====
Imports Processed
===== Starting Optimize2: SplayMapFn                     =====
===== Starting Inline2: SplayMapFn                       =====
  1 functions inlined once.
  9 copies of 4 other functions inlined.
===== Starting Optimize3: SplayMapFn                     =====
===== Starting Inline3: SplayMapFn                       =====
  5 functions inlined once.
  2 copies of 1 other functions inlined.
===== Starting Reify2: SplayMapFn                        =====
===== Starting ClosureConv: SplayMapFn                   =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  108 procedures.  108 recursive components.   Largest component has size 1.
  [Assembling SplayMapFn to object file.]
  [Compressing Basis/Library/TM/sparc/splay-map-fn.sml.s]
Slave compiled SplayMapFn
Slave waiting for master to send work.
Flushing PrettyPrint.
Flushing Blaster.
Flushing Formatter.
Flushing TilWord64.
Flushing Stats.
  [Compiling PrintUtil to assembly]
  [102 imports of total size 449108 were cached.
   18 imports of total size 43004 were uncached and took 0.27 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Parser/printutil.sml]
  [Warning: constraints currently coerce.  Not compatible with our notion of freshness.]
  [Elaborating Parser/printutil.sml with constraint]
  [writing Parser/TM/any/printutil.sml.il]
gc_context: 510 items in original context.  42 items in reduced context.
===== Starting Phasesplit: PrintUtil                     =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: PrintUtil                         =====
===== Starting Optimize1: PrintUtil                      =====
===== Starting Vararg: PrintUtil                         =====
===== Starting Inline1: PrintUtil                        =====
  1 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: PrintUtil                         =====
===== Starting Specialize: PrintUtil                     =====
  0 optimizable candidates.
  4 impure.
  21 escaping.
  0 used polymorphically.
===== Starting Hoist: PrintUtil                          =====
Imports Processed
===== Starting Optimize2: PrintUtil                      =====
===== Starting Inline2: PrintUtil                        =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: PrintUtil                      =====
===== Starting Inline3: PrintUtil                        =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: PrintUtil                         =====
===== Starting ClosureConv: PrintUtil                    =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  26 procedures.  26 recursive components.   Largest component has size 1.
  [Assembling PrintUtil to object file.]
  [Compressing Parser/TM/sparc/printutil.sml.s]
Slave compiled PrintUtil
Slave waiting for master to send work.
Flushing NAME.
Flushing Graph.
Flushing TilWord32.
Flushing Symbol.
  [Compiling ErrorMsg to assembly]
  [114 imports of total size 471805 were cached.
   0 imports of total size 0 were uncached and took 0.0 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Parser/errormsg.sml]
  [Warning: constraints currently coerce.  Not compatible with our notion of freshness.]
  [Elaborating Parser/errormsg.sml with constraint]
  [writing Parser/TM/any/errormsg.sml.il]
gc_context: 500 items in original context.  38 items in reduced context.
===== Starting Phasesplit: ErrorMsg                      =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: ErrorMsg                          =====
===== Starting Optimize1: ErrorMsg                       =====
===== Starting Vararg: ErrorMsg                          =====
===== Starting Inline1: ErrorMsg                         =====
  4 functions inlined once.
  2 copies of 1 other functions inlined.
===== Starting Reify1: ErrorMsg                          =====
===== Starting Specialize: ErrorMsg                      =====
  2 optimizable candidates.
  3 impure.
  29 escaping.
  1 used polymorphically.
===== Starting Hoist: ErrorMsg                           =====
Imports Processed
===== Starting Optimize2: ErrorMsg                       =====
===== Starting Inline2: ErrorMsg                         =====
  1 functions inlined once.
  8 copies of 2 other functions inlined.
===== Starting Optimize3: ErrorMsg                       =====
===== Starting Inline3: ErrorMsg                         =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: ErrorMsg                          =====
===== Starting ClosureConv: ErrorMsg                     =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  30 procedures.  30 recursive components.   Largest component has size 1.
  [Assembling ErrorMsg to object file.]
  [Compressing Parser/TM/sparc/errormsg.sml.s]
Slave compiled ErrorMsg
Flushing ERRORMSG.
Flushing Prelink.
Flushing INFO.
Flushing UnitEnvironment.
  [Compiling Sequence to assembly]
  [102 imports of total size 449108 were cached.
   11 imports of total size 59519 were uncached and took 0.3 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Util/sequence.sml]
  [Elaborating Util/sequence.sml non-constrained]
  [writing Util/TM/any/sequence.sml.il - unnecessary]
gc_context: 495 items in original context.  23 items in reduced context.
===== Starting Phasesplit: Sequence                      =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: Sequence                          =====
===== Starting Optimize1: Sequence                       =====
===== Starting Vararg: Sequence                          =====
===== Starting Inline1: Sequence                         =====
  30 functions inlined once.
  2 copies of 1 other functions inlined.
===== Starting Reify1: Sequence                          =====
===== Starting Specialize: Sequence                      =====
  0 optimizable candidates.
  1 impure.
  26 escaping.
  0 used polymorphically.
===== Starting Hoist: Sequence                           =====
Imports Processed
===== Starting Optimize2: Sequence                       =====
===== Starting Inline2: Sequence                         =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: Sequence                       =====
===== Starting Inline3: Sequence                         =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: Sequence                          =====
===== Starting ClosureConv: Sequence                     =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  28 procedures.  28 recursive components.   Largest component has size 1.
  [Assembling Sequence to object file.]
  [Compressing Util/TM/sparc/sequence.sml.s]
Slave compiled Sequence
Slave waiting for master to send work.
Slave waiting for master to send work.
Flushing TopHelp.
Flushing Annotation.
Flushing ASTHELP.
Flushing TVClose.
Flushing FRONTEND.
Flushing ASTUTIL.
Flushing NamedForm.
  [Compiling VarGraph to assembly]
  [124 imports of total size 527033 were cached.
   34 imports of total size 147524 were uncached and took 1.23 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Backend/vargraph.sml]
  [Elaborating Backend/vargraph.sml non-constrained]
  [writing Backend/TM/any/vargraph.sml.il - unnecessary]
gc_context: 553 items in original context.  26 items in reduced context.
===== Starting Phasesplit: VarGraph                      =====
  Initial context is phase-split
Warning: newSplitVar called on alredy existing variable copy_insert_170818
Warning: newSplitVar called on alredy existing variable copy_find_170821
Warning: newSplitVar called on alredy existing variable copy_make_170824
Warning: newSplitVar called on alredy existing variable copy_copy_170827
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: VarGraph                          =====
===== Starting Optimize1: VarGraph                       =====
===== Starting Vararg: VarGraph                          =====
===== Starting Inline1: VarGraph                         =====
  1 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: VarGraph                          =====
===== Starting Specialize: VarGraph                      =====
  0 optimizable candidates.
  0 impure.
  7 escaping.
  0 used polymorphically.
===== Starting Hoist: VarGraph                           =====
Imports Processed
===== Starting Optimize2: VarGraph                       =====
===== Starting Inline2: VarGraph                         =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: VarGraph                       =====
===== Starting Inline3: VarGraph                         =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: VarGraph                          =====
===== Starting ClosureConv: VarGraph                     =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  8 procedures.  8 recursive components.   Largest component has size 1.
  [Assembling VarGraph to object file.]
  [Compressing Backend/TM/sparc/vargraph.sml.s]
Slave compiled VarGraph
Flushing TokenTable.
Flushing Ast.
Flushing NAMEBLAST.
Flushing Tyvar.
  [Compiling PRIM to assembly]
  [152 imports of total size 655696 were cached.
   3 imports of total size 10328 were uncached and took 0.06 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Elaborator/prim.sig.sml]
  [Elaborating Elaborator/prim.sig.sml non-constrained]
  [writing Elaborator/TM/any/prim.sig.sml.il - unnecessary]
gc_context: 547 items in original context.  23 items in reduced context.
===== Starting Phasesplit: PRIM                          =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: PRIM                              =====
===== Starting Optimize1: PRIM                           =====
===== Starting Vararg: PRIM                              =====
===== Starting Inline1: PRIM                             =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: PRIM                              =====
===== Starting Specialize: PRIM                          =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: PRIM                               =====
Imports Processed
===== Starting Optimize2: PRIM                           =====
===== Starting Inline2: PRIM                             =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: PRIM                           =====
===== Starting Inline3: PRIM                             =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: PRIM                              =====
===== Starting ClosureConv: PRIM                         =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling PRIM to object file.]
  [Compressing Elaborator/TM/sparc/prim.sig.sml.s]
Slave compiled PRIM
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Flushing ML_TOKENS.
Flushing AstUtil.
Flushing AstHelp.
Flushing ANNOTATION.
  [Compiling TRACEINFO to assembly]
  [152 imports of total size 655696 were cached.
   0 imports of total size 0 were uncached and took 0.0 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Nil/traceinfo.sig.sml]
  [Elaborating Nil/traceinfo.sig.sml non-constrained]
  [writing Nil/TM/any/traceinfo.sig.sml.il - unnecessary]
gc_context: 544 items in original context.  14 items in reduced context.
===== Starting Phasesplit: TRACEINFO                     =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: TRACEINFO                         =====
===== Starting Optimize1: TRACEINFO                      =====
===== Starting Vararg: TRACEINFO                         =====
===== Starting Inline1: TRACEINFO                        =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: TRACEINFO                         =====
===== Starting Specialize: TRACEINFO                     =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: TRACEINFO                          =====
Imports Processed
===== Starting Optimize2: TRACEINFO                      =====
===== Starting Inline2: TRACEINFO                        =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: TRACEINFO                      =====
===== Starting Inline3: TRACEINFO                        =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: TRACEINFO                         =====
===== Starting ClosureConv: TRACEINFO                    =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling TRACEINFO to object file.]
  [Compressing Nil/TM/sparc/traceinfo.sig.sml.s]
Slave compiled TRACEINFO
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Flushing RTL.
Flushing MLLexFun.
Flushing AST.
Flushing Name.
Flushing MLLrValsFun.
Flushing Info.
Flushing RTLTAGS.
Flushing PPPRIM.
Flushing IL.
  [Compiling PRIMUTIL to assembly]
  [152 imports of total size 655696 were cached.
   5 imports of total size 53631 were uncached and took 0.7 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Elaborator/primutil.sig.sml]
  [Elaborating Elaborator/primutil.sig.sml non-constrained]
  [writing Elaborator/TM/any/primutil.sig.sml.il - unnecessary]
gc_context: 549 items in original context.  25 items in reduced context.
===== Starting Phasesplit: PRIMUTIL                      =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: PRIMUTIL                          =====
===== Starting Optimize1: PRIMUTIL                       =====
===== Starting Vararg: PRIMUTIL                          =====
===== Starting Inline1: PRIMUTIL                         =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: PRIMUTIL                          =====
===== Starting Specialize: PRIMUTIL                      =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: PRIMUTIL                           =====
Imports Processed
===== Starting Optimize2: PRIMUTIL                       =====
===== Starting Inline2: PRIMUTIL                         =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: PRIMUTIL                       =====
===== Starting Inline3: PRIMUTIL                         =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: PRIMUTIL                          =====
===== Starting ClosureConv: PRIMUTIL                     =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling PRIMUTIL to object file.]
  [Compressing Elaborator/TM/sparc/primutil.sig.sml.s]
Slave compiled PRIMUTIL
Slave waiting for master to send work.
Slave waiting for master to send work.
Flushing PRIMUTILPARAM.
Flushing Rtl.
Flushing CORE.
  [Compiling LINKASM to assembly]
  [154 imports of total size 662136 were cached.
   2 imports of total size 75061 were uncached and took 0.4 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Backend/link.sig.sml]
  [Elaborating Backend/link.sig.sml non-constrained]
  [writing Backend/TM/any/link.sig.sml.il - unnecessary]
gc_context: 550 items in original context.  23 items in reduced context.
===== Starting Phasesplit: LINKASM                       =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: LINKASM                           =====
===== Starting Optimize1: LINKASM                        =====
===== Starting Vararg: LINKASM                           =====
===== Starting Inline1: LINKASM                          =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: LINKASM                           =====
===== Starting Specialize: LINKASM                       =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: LINKASM                            =====
Imports Processed
===== Starting Optimize2: LINKASM                        =====
===== Starting Inline2: LINKASM                          =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: LINKASM                        =====
===== Starting Inline3: LINKASM                          =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: LINKASM                           =====
===== Starting ClosureConv: LINKASM                      =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling LINKASM to object file.]
  [Compressing Backend/TM/sparc/link.sig.sml.s]
Slave compiled LINKASM
Slave waiting for master to send work.
Flushing RTLTOASM.
Flushing TraceInfo.
Flushing Prim.
Flushing RECURSION.
Flushing NameBlast.
Flushing NILCONTEXTPRE.
Flushing NILSUBST.
  [Compiling ALPHA to assembly]
  [154 imports of total size 662136 were cached.
   11 imports of total size 142745 were uncached and took 1.04 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Nil/alpha_context.sig.sml]
  [Elaborating Nil/alpha_context.sig.sml non-constrained]
  [writing Nil/TM/any/alpha_context.sig.sml.il - unnecessary]
gc_context: 557 items in original context.  14 items in reduced context.
===== Starting Phasesplit: ALPHA                         =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: ALPHA                             =====
===== Starting Optimize1: ALPHA                          =====
===== Starting Vararg: ALPHA                             =====
===== Starting Inline1: ALPHA                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: ALPHA                             =====
===== Starting Specialize: ALPHA                         =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: ALPHA                              =====
Imports Processed
===== Starting Optimize2: ALPHA                          =====
===== Starting Inline2: ALPHA                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: ALPHA                          =====
===== Starting Inline3: ALPHA                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: ALPHA                             =====
===== Starting ClosureConv: ALPHA                        =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling ALPHA to object file.]
  [Compressing Nil/TM/sparc/alpha_context.sig.sml.s]
Slave compiled ALPHA
Slave waiting for master to send work.
Flushing NILREWRITE.
Flushing DecAlpha.
Flushing DIVMULT.
Flushing CALLCONV.
Flushing NILERROR.
  [Compiling PPNIL to assembly]
  [165 imports of total size 804881 were cached.
   2 imports of total size 4147 were uncached and took 0.06 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Nil/ppnil.sig.sml]
  [Elaborating Nil/ppnil.sig.sml non-constrained]
  [writing Nil/TM/any/ppnil.sig.sml.il - unnecessary]
gc_context: 559 items in original context.  43 items in reduced context.
===== Starting Phasesplit: PPNIL                         =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: PPNIL                             =====
===== Starting Optimize1: PPNIL                          =====
===== Starting Vararg: PPNIL                             =====
===== Starting Inline1: PPNIL                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: PPNIL                             =====
===== Starting Specialize: PPNIL                         =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: PPNIL                              =====
Imports Processed
===== Starting Optimize2: PPNIL                          =====
===== Starting Inline2: PPNIL                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: PPNIL                          =====
===== Starting Inline3: PPNIL                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: PPNIL                             =====
===== Starting ClosureConv: PPNIL                        =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling PPNIL to object file.]
  [Compressing Nil/TM/sparc/ppnil.sig.sml.s]
Slave compiled PPNIL
Slave waiting for master to send work.
Slave waiting for master to send work.
Flushing OPTIMIZE.
Flushing DECALPHA.
Flushing VARARG.
Flushing TOCLOSURE.
Flushing REIFY.
  [Compiling LINEARIZE to assembly]
  [165 imports of total size 804881 were cached.
   0 imports of total size 0 were uncached and took 0.0 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Nil/linearize.sig.sml]
  [Elaborating Nil/linearize.sig.sml non-constrained]
  [writing Nil/TM/any/linearize.sig.sml.il - unnecessary]
gc_context: 557 items in original context.  32 items in reduced context.
===== Starting Phasesplit: LINEARIZE                     =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: LINEARIZE                         =====
===== Starting Optimize1: LINEARIZE                      =====
===== Starting Vararg: LINEARIZE                         =====
===== Starting Inline1: LINEARIZE                        =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: LINEARIZE                         =====
===== Starting Specialize: LINEARIZE                     =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: LINEARIZE                          =====
Imports Processed
===== Starting Optimize2: LINEARIZE                      =====
===== Starting Inline2: LINEARIZE                        =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: LINEARIZE                      =====
===== Starting Inline3: LINEARIZE                        =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: LINEARIZE                         =====
===== Starting ClosureConv: LINEARIZE                    =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling LINEARIZE to object file.]
  [Compressing Nil/TM/sparc/linearize.sig.sml.s]
Slave compiled LINEARIZE
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Flushing EXPTABLE.
Flushing Labelgraph.
Flushing PASS.
Flushing INLINE.
Flushing ANALYZE.
  [Compiling HOIST to assembly]
  [165 imports of total size 804881 were cached.
   0 imports of total size 0 were uncached and took 0.0 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Nil/hoist.sig.sml]
  [Elaborating Nil/hoist.sig.sml non-constrained]
  [writing Nil/TM/any/hoist.sig.sml.il - unnecessary]
gc_context: 557 items in original context.  32 items in reduced context.
===== Starting Phasesplit: HOIST                         =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: HOIST                             =====
===== Starting Optimize1: HOIST                          =====
===== Starting Vararg: HOIST                             =====
===== Starting Inline1: HOIST                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: HOIST                             =====
===== Starting Specialize: HOIST                         =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: HOIST                              =====
Imports Processed
===== Starting Optimize2: HOIST                          =====
===== Starting Inline2: HOIST                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: HOIST                          =====
===== Starting Inline3: HOIST                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: HOIST                             =====
===== Starting ClosureConv: HOIST                        =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling HOIST to object file.]
  [Compressing Nil/TM/sparc/hoist.sig.sml.s]
Slave compiled HOIST
Flushing SPECIALIZE.
Flushing IFGRAPH.
Flushing TRACKSTORAGE.
Flushing NILSTATIC.
Flushing TRAIL.
Flushing MEASURE.
  [Compiling INFIXPARSE to assembly]
  [157 imports of total size 709327 were cached.
   7 imports of total size 169702 were uncached and took 1.18 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Elaborator/infixparse.sig.sml]
  [Elaborating Elaborator/infixparse.sig.sml non-constrained]
  [writing Elaborator/TM/any/infixparse.sig.sml.il - unnecessary]
gc_context: 557 items in original context.  25 items in reduced context.
===== Starting Phasesplit: INFIXPARSE                    =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: INFIXPARSE                        =====
===== Starting Optimize1: INFIXPARSE                     =====
===== Starting Vararg: INFIXPARSE                        =====
===== Starting Inline1: INFIXPARSE                       =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: INFIXPARSE                        =====
===== Starting Specialize: INFIXPARSE                    =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: INFIXPARSE                         =====
Imports Processed
===== Starting Optimize2: INFIXPARSE                     =====
===== Starting Inline2: INFIXPARSE                       =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: INFIXPARSE                     =====
===== Starting Inline3: INFIXPARSE                       =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: INFIXPARSE                        =====
===== Starting ClosureConv: INFIXPARSE                   =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling INFIXPARSE to object file.]
  [Compressing Elaborator/TM/sparc/infixparse.sig.sml.s]
Slave compiled INFIXPARSE
Slave waiting for master to send work.
Slave waiting for master to send work.
Flushing EQUAL.
Flushing MACHINEUTILS.
Flushing SIGNATURE.
Flushing ERROR.
Flushing DATATYPE.
Flushing PAT.
  [Compiling TOIL to assembly]
  [164 imports of total size 879029 were cached.
   0 imports of total size 0 were uncached and took 0.0 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Elaborator/toil.sig.sml]
  [Elaborating Elaborator/toil.sig.sml non-constrained]
  [writing Elaborator/TM/any/toil.sig.sml.il - unnecessary]
gc_context: 557 items in original context.  34 items in reduced context.
===== Starting Phasesplit: TOIL                          =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: TOIL                              =====
===== Starting Optimize1: TOIL                           =====
===== Starting Vararg: TOIL                              =====
===== Starting Inline1: TOIL                             =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: TOIL                              =====
===== Starting Specialize: TOIL                          =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: TOIL                               =====
Imports Processed
===== Starting Optimize2: TOIL                           =====
===== Starting Inline2: TOIL                             =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: TOIL                           =====
===== Starting Inline3: TOIL                             =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: TOIL                              =====
===== Starting ClosureConv: TOIL                         =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling TOIL to object file.]
  [Compressing Elaborator/TM/sparc/toil.sig.sml.s]
Slave compiled TOIL
Flushing BASIS.
Flushing CallConv.
Flushing ILCONTEXT.
Flushing ILCONTEXTEQ.
Flushing ILSTATIC.
Flushing PPIL.
  [Compiling IlPrimUtilParam to assembly]
  [162 imports of total size 787412 were cached.
   1 imports of total size 1210 were uncached and took 0.02 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Elaborator/ilprimutilparam.sml]
  [Elaborating Elaborator/ilprimutilparam.sml non-constrained]
  [writing Elaborator/TM/any/ilprimutilparam.sml.il - unnecessary]
gc_context: 556 items in original context.  43 items in reduced context.
===== Starting Phasesplit: IlPrimUtilParam               =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: IlPrimUtilParam                   =====
===== Starting Optimize1: IlPrimUtilParam                =====
===== Starting Vararg: IlPrimUtilParam                   =====
===== Starting Inline1: IlPrimUtilParam                  =====
  2 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: IlPrimUtilParam                   =====
===== Starting Specialize: IlPrimUtilParam               =====
  0 optimizable candidates.
  2 impure.
  14 escaping.
  0 used polymorphically.
===== Starting Hoist: IlPrimUtilParam                    =====
Imports Processed
===== Starting Optimize2: IlPrimUtilParam                =====
===== Starting Inline2: IlPrimUtilParam                  =====
  0 functions inlined once.
  2 copies of 1 other functions inlined.
===== Starting Optimize3: IlPrimUtilParam                =====
===== Starting Inline3: IlPrimUtilParam                  =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: IlPrimUtilParam                   =====
===== Starting ClosureConv: IlPrimUtilParam              =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  16 procedures.  16 recursive components.   Largest component has size 1.
  [Assembling IlPrimUtilParam to object file.]
  [Compressing Elaborator/TM/sparc/ilprimutilparam.sml.s]
Slave compiled IlPrimUtilParam
Slave waiting for master to send work.
Flushing PrimUtil.
Flushing DivMult.
Flushing DecAlphaUtils.
Flushing TRACETABLE.
Flushing ILUTIL.
  [Compiling Nil to assembly]
  [164 imports of total size 758915 were cached.
   0 imports of total size 0 were uncached and took 0.0 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Nil/nil.sml]
  [Elaborating Nil/nil.sml non-constrained]
  [writing Nil/TM/any/nil.sml.ileq_var returning false
_200746, _237622
eq_path returning false
XXX eq_signat false - 
signat =           SIGS_SELF(_200746.+Eannotation_INT, 
*            UNSELF_SIG = NONE
*            SELF_SIG = SIGF(_200750, ['a_TYV > _200751 : TYPE, 
*                                      +E'a_INT > _200752 : 
**                                        ({_200751 *
**                                          _200751} ->
**                                           CON_MU(/-\(_200753)(SUM[
**                                                                  (false, true);
**                                                                  2;
**                                                                  ()]))#0)] =>
*                               [it_INT > _200754 : 
**                                  ({CON_APP(CON_PATH(_199656.hiddenThinModule_INT.
**                                                             annotation_TYC);
**                                       CON_PATH(_200750.'a_TYV)) *
**                                    CON_APP(CON_PATH(_199656.hiddenThinModule_INT.
**                                                             annotation_TYC);
**                                       CON_PATH(_200750.'a_TYV))} ->
**                                     CON_MU(/-\(_200755)(SUM[ (false, true); 2; ()]))#0)])
*            )
signat' =           SIGS_SELF(_237622.+Eannotation_INT, 
*            UNSELF_SIG = NONE
*            SELF_SIG = SIGF(_237623, ['a_TYV > _237624 : TYPE, 
*                                      +E'a_INT > _237625 : 
**                                        ({_237624 *
**                                          _237624} ->
**                                           CON_MU(/-\(_237626)(SUM[
**                                                                  (false, true);
**                                                                  2;
**                                                                  ()]))#0)] =>
*                               [it_INT > _237627 : 
**                                  ({CON_APP(CON_PATH(_237618.hiddenThinModule_INT.
**                                                             annotation_TYC);
**                                       CON_PATH(_237623.'a_TYV)) *
**                                    CON_APP(CON_PATH(_237618.hiddenThinModule_INT.
**                                                             annotation_TYC);
**                                       CON_PATH(_237623.'a_TYV))} ->
**                                     CON_MU(/-\(_237628)(SUM[ (false, true); 2; ()]))#0)])
*            )
XXX eq_dec false - 
dec =           _200749 = 
*             $POLY$ SIGS_SELF(_200746.+Eannotation_INT, 
*                       UNSELF_SIG = NONE
*                       SELF_SIG = SIGF(_200750, ['a_TYV > _200751 : TYPE, 
*                                                 +E'a_INT > _200752 : 
**                                                   ({_200751 *
**                                                     _200751} ->
**                                                      CON_MU(/-\(_200753)(SUM[
**                                                                             (false,
**                                                                              true);
**                                                                             2;
**                                                                             ()]))#0)] =>
*                                          [it_INT > _200754 : 
**                                             ({CON_APP(CON_PATH(
**        +1   _199656.hiddenThinModule_INT. annotation_TYC);
**                                                  CON_PATH(_200750.'a_TYV)) *
**                                               CON_APP(CON_PATH(
**        +1   _199656.hiddenThinModule_INT. annotation_TYC);
**                                                  CON_PATH(_200750.'a_TYV))} ->
**                                                CON_MU(/-\(_200755)(SUM[
**                                                                       (false, true);
**                                                                       2;
**                                                                       ()]))#0)])
*                       )
dec' =           _237621 = 
*             $POLY$ SIGS_SELF(_237622.+Eannotation_INT, 
*                       UNSELF_SIG = NONE
*                       SELF_SIG = SIGF(_237623, ['a_TYV > _237624 : TYPE, 
*                                                 +E'a_INT > _237625 : 
**                                                   ({_237624 *
**                                                     _237624} ->
**                                                      CON_MU(/-\(_237626)(SUM[
**                                                                             (false,
**                                                                              true);
**                                                                             2;
**                                                                             ()]))#0)] =>
*                                          [it_INT > _237627 : 
**                                             ({CON_APP(CON_PATH(
**        +1   _237618.hiddenThinModule_INT. annotation_TYC);
**                                                  CON_PATH(_237623.'a_TYV)) *
**                                               CON_APP(CON_PATH(
**        +1   _237618.hiddenThinModule_INT. annotation_TYC);
**                                                  CON_PATH(_237623.'a_TYV))} ->
**                                                CON_MU(/-\(_237628)(SUM[
**                                                                       (false, true);
**                                                                       2;
**                                                                       ()]))#0)])
*                       )
eq_sdecs returning false
XXX eq_signat false - 
signat =           [var_TYC > _200733 : TYPE = CON_PATH(_170053.var_TYC), 
*          label_TYC > _200735 : TYPE = CON_PATH(_170053.label_TYC), 
*          w32_TYC > _200736 : TYPE = CON_PATH(_29216.word_TYC), 
*          prim_TYC > _200738 : TYPE = CON_PATH(_200145.prim_TYC), 
*          sequence_TYC > _200740 : 
**            KIND(2 -> TYPE) = /-\(_200741, _200742)CON_APP(
**        +1   CON_PATH(_200623.sequence_TYC);
**                                                      _200741, _200742), 
*          flattenThreshold > _200744 : REF(INT32), 
*          annotation_TYC > _200745 : KIND(1 -> TYPE) = CON_PATH(_199656.annotation_TYC), 
*          annotation_sumarg_INT > _200747 : 
**            KIND(2) = CON_PATH(_199656.annotation_sumarg_INT), 
*          annotation_sum_INT > _200748 : 
**            KIND(1 -> TYPE) = CON_PATH(_199656.annotation_sum_INT), 
*          +Eannotation_INT > _200749 : 
**             $POLY$ SIGS_SELF(_200746.+Eannotation_INT, 
**                       UNSELF_SIG = NONE
**                       SELF_SIG = SIGF(_200750, ['a_TYV > _200751 : TYPE, 
**                                                 +E'a_INT > _200752 : 
***                                                   ({_200751 *
***                                                     _200751} ->
***                                                      CON_MU(/-\(_200753)(SUM[
***                                                                             (false,
***                                                                              true);
***                                                                             2;
***                                                                             ()]))#0)] =>
**                                          [it_INT > _200754 : 
***                                             ({CON_APP(CON_PATH(
***       +1   _199656.hiddenThinModule_INT. annotation_TYC);
***                                                  CON_PATH(_200750.'a_TYV)) *
***                                               CON_APP(CON_PATH(
***       +1   _199656.hiddenThinModule_INT. annotation_TYC);
***                                                  CON_PATH(_200750.'a_TYV))} ->
***                                                CON_MU(/-\(_200755)(SUM[
***                                                                       (false, true);
***                                                                       2;
***                                                                       ()]))#0)])
**                       ), 
*          +O+Dannotation_INT > _200756 : 
**            SIGS_SELF(strbindvar_229902.+O+Dannotation_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [annotation_INT > _200757 : 
***                             KIND(1 -> TYPE) == CON_PATH(_199656.hiddenThinModule_INT.
***                                                                 annotation_TYC), 
**                           expose_INT > _200758 : 
***                              $POLY$ SIGS_SELF(_200746.+O+Dannotation_INT. expose_INT, 
***                                        UNSELF_SIG = NONE
***                                        SELF_SIG = SIGF(_200750, ['a_TYV > _200759 : 
****                                                                    TYPE] =>
***                                                           
***       +1   [it_INT > _200760 : 
****      +1       (CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_TYC);
****      +1           CON_PATH(_200750.'a_TYV)) =>
****      +1          CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_sum_INT);
****      +1             CON_PATH(_200750.'a_TYV))) == 
****      +2   /TOTALNONRECUR\_200761
****      +2         (_200762 : CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_TYC);
****      +2                       CON_PATH(_200750.'a_TYV)))
****      +2         : CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_sum_INT);
****      +2              CON_PATH(_200750.'a_TYV)) =
****      +2      UNROLL(CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_TYC);
****      +2                CON_PATH(_200750.'a_TYV)),
****      +3   CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_sum_INT);
****      +3      CON_PATH(_200750.'a_TYV)),_200762)])
***                                        ), 
**                           SUBST_RESULT > _200763 : 
***                              $POLY$ SIGS_SELF(_200746.+O+Dannotation_INT. SUBST_RESULT, 
***                                        UNSELF_SIG = NONE
***                                        SELF_SIG = SIGF(_200750, ['a_TYV > _200759 : 
****                                                                    TYPE] =>
***                                                           
***       +1   [it_INT > _200764 : 
****      +1       CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_TYC);
****      +1          CON_PATH(_200750.'a_TYV)) == 
****      +2   ROLL(CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_TYC);
****      +2           CON_PATH(_200750.'a_TYV)),
****      +3   INJ(0, CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_sum_INT);
****      +3             CON_PATH(_200750.'a_TYV))))])
***                                        ), 
**                           FREE_VARS > _200765 : 
***                              $POLY$ SIGS_SELF(_200746.+O+Dannotation_INT. FREE_VARS, 
***                                        UNSELF_SIG = NONE
***                                        SELF_SIG = SIGF(_200750, ['a_TYV > _200759 : 
****                                                                    TYPE] =>
***                                                           
***       +1   [it_INT > _200766 : 
****      +1       ({con_vars_LAB = REF(CON_PATH(_199656.hiddenThinModule_INT.
****      +1                                             VarSet_STR.
****      +1                                             set_TYC)),
****      +1         exp_vars_LAB = REF(CON_PATH(_199656.hiddenThinModule_INT.
****      +1                                             VarSet_STR.
****      +1                                             set_TYC))} =>
****      +1          CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_TYC);
****      +1             CON_PATH(_200750.'a_TYV))) == 
****      +2   /TOTALNONRECUR\_200767
****      +2         (_200768 : {con_vars_LAB = REF(CON_PATH(_199656.hiddenThinModule_INT.
****      +2                                                         VarSet_STR.
****      +2                                                         set_TYC)),
****      +2                     exp_vars_LAB = REF(CON_PATH(_199656.hiddenThinModule_INT.
****      +2                                                         VarSet_STR.
****      +2                                                         set_TYC))})
****      +2         : CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_TYC);
****      +2              CON_PATH(_200750.'a_TYV)) =
****      +2      ROLL(CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_TYC);
****      +2              CON_PATH(_200750.'a_TYV)),
****      +3   INJ(1, CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_sum_INT);
****      +3             CON_PATH(_200750.'a_TYV))
****      +4   ,_200768))])
***                                        ), 
**                           TYPECHECKED > _200769 : 
***                              $POLY$ SIGS_SELF(_200746.+O+Dannotation_INT. TYPECHECKED, 
***                                        UNSELF_SIG = NONE
***                                        SELF_SIG = SIGF(_200750, ['a_TYV > _200759 : 
****                                                                    TYPE] =>
***                                                           
***       +1   [it_INT > _200770 : 
****      +1       (CON_PATH(_200750.'a_TYV) =>
****      +1          CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_TYC);
****      +1             CON_PATH(_200750.'a_TYV))) == 
****      +2   /TOTALNONRECUR\_200771
****      +2         (_200772 : CON_PATH(_200750.'a_TYV))
****      +2         : CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_TYC);
****      +2              CON_PATH(_200750.'a_TYV)) =
****      +2      ROLL(CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_TYC);
****      +2              CON_PATH(_200750.'a_TYV)),
****      +3   INJ(2, CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_sum_INT);
****      +3             CON_PATH(_200750.'a_TYV))
****      +4   ,_200772))])
***                                        )]
**               ), 
*          openness_TYC > _200773 : 
**            TYPE = CON_MU(/-\(_200774)(SUM[ (Closure, Code, Open); 3; ()]))#0, 
*          openness_sumarg_INT > _200775 : KIND(0) = (), 
*          openness_sum_INT > _200776 : 
**            TYPE = SUM[
**                      (Closure, Code, Open);
**                      3;
**                      CON_PATH(strbindvar_229902.openness_sumarg_INT)], 
*          +Eopenness_INT > _200777 : 
**            ({CON_PATH(strbindvar_229902.openness_TYC) *
**              CON_PATH(strbindvar_229902.openness_TYC)} ->
**               CON_MU(/-\(_200778)(SUM[ (false, true); 2; ()]))#0), 
*          +O+Dopenness_INT > _200779 : 
**            SIGS_SELF(strbindvar_229902.+O+Dopenness_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [openness_INT > _200780 : 
***                             TYPE == CON_PATH(strbindvar_229902.openness_TYC), 
**                           expose_INT > _200781 : 
***                             (CON_PATH(strbindvar_229902.openness_TYC) =>
***                                CON_PATH(strbindvar_229902.openness_sum_INT)) == 
***       +1   /TOTALNONRECUR\_200782
***       +1         (_200783 : CON_PATH(strbindvar_229902.openness_TYC))
***       +1         : CON_PATH(strbindvar_229902.openness_sum_INT) =
***       +1      UNROLL(CON_PATH(strbindvar_229902.openness_TYC),
***       +2   CON_PATH(strbindvar_229902.openness_sum_INT),_200783), 
**                           Closure > _200784 : 
***                             CON_PATH(strbindvar_229902.openness_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.openness_TYC),INJ(0, 
***       +2   CON_PATH(strbindvar_229902.openness_sum_INT))), 
**                           Code > _200785 : 
***                             CON_PATH(strbindvar_229902.openness_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.openness_TYC),INJ(1, 
***       +2   CON_PATH(strbindvar_229902.openness_sum_INT))), 
**                           Open > _200786 : 
***                             CON_PATH(strbindvar_229902.openness_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.openness_TYC),INJ(2, 
***       +2   CON_PATH(strbindvar_229902.openness_sum_INT)))]
**               ), 
*          effect_TYC > _200787 : 
**            TYPE = CON_MU(/-\(_200788)(SUM[ (Partial, Total); 2; ()]))#0, 
*          effect_sumarg_INT > _200789 : KIND(0) = (), 
*          effect_sum_INT > _200790 : 
**            TYPE = SUM[
**                      (Partial, Total);
**                      2;
**                      CON_PATH(strbindvar_229902.effect_sumarg_INT)], 
*          +Eeffect_INT > _200791 : 
**            ({CON_PATH(strbindvar_229902.effect_TYC) *
**              CON_PATH(strbindvar_229902.effect_TYC)} ->
**               CON_MU(/-\(_200778)(SUM[ (false, true); 2; ()]))#0), 
*          +O+Deffect_INT > _200792 : 
**            SIGS_SELF(strbindvar_229902.+O+Deffect_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [effect_INT > _200793 : 
***                             TYPE == CON_PATH(strbindvar_229902.effect_TYC), 
**                           expose_INT > _200794 : 
***                             (CON_PATH(strbindvar_229902.effect_TYC) =>
***                                CON_PATH(strbindvar_229902.effect_sum_INT)) == 
***       +1   /TOTALNONRECUR\_200795
***       +1         (_200796 : CON_PATH(strbindvar_229902.effect_TYC))
***       +1         : CON_PATH(strbindvar_229902.effect_sum_INT) =
***       +1      UNROLL(CON_PATH(strbindvar_229902.effect_TYC),CON_PATH(
***       +2   strbindvar_229902.effect_sum_INT),_200796), 
**                           Partial > _200797 : 
***                             CON_PATH(strbindvar_229902.effect_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.effect_TYC),INJ(0, 
***       +2   CON_PATH(strbindvar_229902.effect_sum_INT))), 
**                           Total > _200798 : 
***                             CON_PATH(strbindvar_229902.effect_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.effect_TYC),INJ(1, 
***       +2   CON_PATH(strbindvar_229902.effect_sum_INT)))]
**               ), 
*          recursive_TYC > _200799 : 
**            TYPE = CON_MU(/-\(_200800)(SUM[ (Arbitrary, Leaf, NonRecursive); 3; ()]))#0, 
*          recursive_sumarg_INT > _200801 : KIND(0) = (), 
*          recursive_sum_INT > _200802 : 
**            TYPE = SUM[
**                      (Arbitrary, Leaf, NonRecursive);
**                      3;
**                      CON_PATH(strbindvar_229902.recursive_sumarg_INT)], 
*          +Erecursive_INT > _200803 : 
**            ({CON_PATH(strbindvar_229902.recursive_TYC) *
**              CON_PATH(strbindvar_229902.recursive_TYC)} ->
**               CON_MU(/-\(_200778)(SUM[ (false, true); 2; ()]))#0), 
*          +O+Drecursive_INT > _200804 : 
**            SIGS_SELF(strbindvar_229902.+O+Drecursive_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [recursive_INT > _200805 : 
***                             TYPE == CON_PATH(strbindvar_229902.recursive_TYC), 
**                           expose_INT > _200806 : 
***                             (CON_PATH(strbindvar_229902.recursive_TYC) =>
***                                CON_PATH(strbindvar_229902.recursive_sum_INT)) == 
***       +1   /TOTALNONRECUR\_200807
***       +1         (_200808 : CON_PATH(strbindvar_229902.recursive_TYC))
***       +1         : CON_PATH(strbindvar_229902.recursive_sum_INT) =
***       +1      UNROLL(CON_PATH(strbindvar_229902.recursive_TYC),
***       +2   CON_PATH(strbindvar_229902.recursive_sum_INT),_200808), 
**                           Arbitrary > _200809 : 
***                             CON_PATH(strbindvar_229902.recursive_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.recursive_TYC),INJ(0, 
***       +2   CON_PATH(strbindvar_229902.recursive_sum_INT))), 
**                           Leaf > _200810 : 
***                             CON_PATH(strbindvar_229902.recursive_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.recursive_TYC),INJ(1, 
***       +2   CON_PATH(strbindvar_229902.recursive_sum_INT))), 
**                           NonRecursive > _200811 : 
***                             CON_PATH(strbindvar_229902.recursive_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.recursive_TYC),INJ(2, 
***       +2   CON_PATH(strbindvar_229902.recursive_sum_INT)))]
**               ), 
*          niltrace_TYC > _200812 : 
**            TYPE = CON_MU(/-\(_200813)(SUM[
**                                          (TraceUnknown, TraceCompute, TraceKnown);
**                                          1;
**                                          (CON_PATH(strbindvar_229902.var_TYC),
**                                           CON_PATH(_199575.traceinfo_TYC))]))#0, 
*          niltrace_sumarg_INT > _200815 : 
**            KIND(2) = (CON_PATH(strbindvar_229902.var_TYC),
**                       CON_PATH(_199575.traceinfo_TYC)), 
*          niltrace_sum_INT > _200816 : 
**            TYPE = SUM[
**                      (TraceUnknown, TraceCompute, TraceKnown);
**                      1;
**                      CON_PATH(strbindvar_229902.niltrace_sumarg_INT)], 
*          +Eniltrace_INT > _200817 : 
**            ({CON_PATH(strbindvar_229902.niltrace_TYC) *
**              CON_PATH(strbindvar_229902.niltrace_TYC)} ->
**               CON_MU(/-\(_200778)(SUM[ (false, true); 2; ()]))#0), 
*          +O+Dniltrace_INT > _200818 : 
**            SIGS_SELF(strbindvar_229902.+O+Dniltrace_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [niltrace_INT > _200819 : 
***                             TYPE == CON_PATH(strbindvar_229902.niltrace_TYC), 
**                           expose_INT > _200820 : 
***                             (CON_PATH(strbindvar_229902.niltrace_TYC) =>
***                                CON_PATH(strbindvar_229902.niltrace_sum_INT)) == 
***       +1   /TOTALNONRECUR\_200821
***       +1         (_200822 : CON_PATH(strbindvar_229902.niltrace_TYC))
***       +1         : CON_PATH(strbindvar_229902.niltrace_sum_INT) =
***       +1      UNROLL(CON_PATH(strbindvar_229902.niltrace_TYC),
***       +2   CON_PATH(strbindvar_229902.niltrace_sum_INT),_200822), 
**                           TraceUnknown > _200823 : 
***                             CON_PATH(strbindvar_229902.niltrace_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.niltrace_TYC),INJ(0, 
***       +2   CON_PATH(strbindvar_229902.niltrace_sum_INT))), 
**                           TraceCompute > _200824 : 
***                             (CON_PATH(strbindvar_229902.var_TYC) =>
***                                CON_PATH(strbindvar_229902.niltrace_TYC)) == 
***       +1   /TOTALNONRECUR\_200825
***       +1         (_200826 : CON_PATH(strbindvar_229902.var_TYC))
***       +1         : CON_PATH(strbindvar_229902.niltrace_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.niltrace_TYC),INJ(1, 
***       +2   CON_PATH(strbindvar_229902.niltrace_sum_INT),_200826)), 
**                           TraceKnown > _200827 : 
***                             (CON_PATH(_199575.traceinfo_TYC) =>
***                                CON_PATH(strbindvar_229902.niltrace_TYC)) == 
***       +1   /TOTALNONRECUR\_200828
***       +1         (_200829 : CON_PATH(_199575.traceinfo_TYC))
***       +1         : CON_PATH(strbindvar_229902.niltrace_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.niltrace_TYC),INJ(2, 
***       +2   CON_PATH(strbindvar_229902.niltrace_sum_INT),_200829))]
**               ), 
*          letsort_TYC > _200830 : 
**            TYPE = CON_MU(/-\(_200831)(SUM[ (Parallel, Sequential); 2; ()]))#0, 
*          letsort_sumarg_INT > _200832 : KIND(0) = (), 
*          letsort_sum_INT > _200833 : 
**            TYPE = SUM[
**                      (Parallel, Sequential);
**                      2;
**                      CON_PATH(strbindvar_229902.letsort_sumarg_INT)], 
*          +Eletsort_INT > _200834 : 
**            ({CON_PATH(strbindvar_229902.letsort_TYC) *
**              CON_PATH(strbindvar_229902.letsort_TYC)} ->
**               CON_MU(/-\(_200778)(SUM[ (false, true); 2; ()]))#0), 
*          +O+Dletsort_INT > _200835 : 
**            SIGS_SELF(strbindvar_229902.+O+Dletsort_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [letsort_INT > _200836 : 
***                             TYPE == CON_PATH(strbindvar_229902.letsort_TYC), 
**                           expose_INT > _200837 : 
***                             (CON_PATH(strbindvar_229902.letsort_TYC) =>
***                                CON_PATH(strbindvar_229902.letsort_sum_INT)) == 
***       +1   /TOTALNONRECUR\_200838
***       +1         (_200839 : CON_PATH(strbindvar_229902.letsort_TYC))
***       +1         : CON_PATH(strbindvar_229902.letsort_sum_INT) =
***       +1      UNROLL(CON_PATH(strbindvar_229902.letsort_TYC),
***       +2   CON_PATH(strbindvar_229902.letsort_sum_INT),_200839), 
**                           Parallel > _200840 : 
***                             CON_PATH(strbindvar_229902.letsort_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.letsort_TYC),INJ(0, 
***       +2   CON_PATH(strbindvar_229902.letsort_sum_INT))), 
**                           Sequential > _200841 : 
***                             CON_PATH(strbindvar_229902.letsort_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.letsort_TYC),INJ(1, 
***       +2   CON_PATH(strbindvar_229902.letsort_sum_INT)))]
**               ), 
*          phase_TYC > _200842 : 
**            TYPE = CON_MU(/-\(_200843)(SUM[ (Compiletime, Runtime); 2; ()]))#0, 
*          phase_sumarg_INT > _200844 : KIND(0) = (), 
*          phase_sum_INT > _200845 : 
**            TYPE = SUM[
**                      (Compiletime, Runtime);
**                      2;
**                      CON_PATH(strbindvar_229902.phase_sumarg_INT)], 
*          +Ephase_INT > _200846 : 
**            ({CON_PATH(strbindvar_229902.phase_TYC) *
**              CON_PATH(strbindvar_229902.phase_TYC)} ->
**               CON_MU(/-\(_200778)(SUM[ (false, true); 2; ()]))#0), 
*          +O+Dphase_INT > _200847 : 
**            SIGS_SELF(strbindvar_229902.+O+Dphase_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [phase_INT > _200848 : 
***                             TYPE == CON_PATH(strbindvar_229902.phase_TYC), 
**                           expose_INT > _200849 : 
***                             (CON_PATH(strbindvar_229902.phase_TYC) =>
***                                CON_PATH(strbindvar_229902.phase_sum_INT)) == 
***       +1   /TOTALNONRECUR\_200850
***       +1         (_200851 : CON_PATH(strbindvar_229902.phase_TYC))
***       +1         : CON_PATH(strbindvar_229902.phase_sum_INT) =
***       +1      UNROLL(CON_PATH(strbindvar_229902.phase_TYC),CON_PATH(
***       +2   strbindvar_229902.phase_sum_INT),_200851), 
**                           Compiletime > _200852 : 
***                             CON_PATH(strbindvar_229902.phase_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.phase_TYC),INJ(0, 
***       +2   CON_PATH(strbindvar_229902.phase_sum_INT))), 
**                           Runtime > _200853 : 
***                             CON_PATH(strbindvar_229902.phase_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.phase_TYC),INJ(1, 
***       +2   CON_PATH(strbindvar_229902.phase_sum_INT)))]
**               ), 
*          primcon_TYC > _200854 : 
**            TYPE = CON_MU(/-\(_200855)(SUM[
**                                          (Array_c,
**                                           Exn_c,
**                                           Exntag_c,
**                                           Loc_c,
**                                           Vector_c,
**                                           BoxFloat_c,
**                                           Float_c,
**                                           Int_c,
**                                           Record_c,
**                                           Sum_c,
**                                           Vararg_c);
**                                          5;
**                                          (CON_PATH(_200145.floatsize_TYC),
**                                           CON_PATH(_200145.floatsize_TYC),
**                                           CON_PATH(_200145.intsize_TYC),
**                                           {CON_APP(_742;
**                                               CON_PATH(strbindvar_229902.label_TYC)) *
**                                            CON_APP(_785;
**                                               CON_APP(_742;
**                                                  CON_PATH(strbindvar_229902.var_TYC)))},
**                                           {totalcount_LAB = 
**        +1   CON_PATH(strbindvar_229902.w32_TYC),
**                                            tagcount_LAB = 
**        +1   CON_PATH(strbindvar_229902.w32_TYC),
**                                            known_LAB = CON_APP(_785;
**                                                           
**        +1   CON_PATH(strbindvar_229902.w32_TYC))},
**                                           {CON_PATH(strbindvar_229902.openness_TYC) *
**                                            CON_PATH(strbindvar_229902.effect_TYC)})]))#0, 
*          primcon_sumarg_INT > _200858 : 
**            KIND(6) = (CON_PATH(_200145.floatsize_TYC),
**                       CON_PATH(_200145.floatsize_TYC),
**                       CON_PATH(_200145.intsize_TYC),
**                       {CON_APP(_742; CON_PATH(strbindvar_229902.label_TYC)) *
**                        CON_APP(_785;
**                           CON_APP(_742; CON_PATH(strbindvar_229902.var_TYC)))},
**                       {totalcount_LAB = CON_PATH(strbindvar_229902.w32_TYC),
**                        tagcount_LAB = CON_PATH(strbindvar_229902.w32_TYC),
**                        known_LAB = CON_APP(_785; CON_PATH(strbindvar_229902.w32_TYC))},
**                       {CON_PATH(strbindvar_229902.openness_TYC) *
**                        CON_PATH(strbindvar_229902.effect_TYC)}), 
*          primcon_sum_INT > _200859 : 
**            TYPE = SUM[
**                      (Array_c,
**                       Exn_c,
**                       Exntag_c,
**                       Loc_c,
**                       Vector_c,
**                       BoxFloat_c,
**                       Float_c,
**                       Int_c,
**                       Record_c,
**                       Sum_c,
**                       Vararg_c);
**                      5;
**                      CON_PATH(strbindvar_229902.primcon_sumarg_INT)], 
*          +Eprimcon_INT > _200860 : 
**            ({CON_PATH(strbindvar_229902.primcon_TYC) *
**              CON_PATH(strbindvar_229902.primcon_TYC)} ->
**               CON_MU(/-\(_200778)(SUM[ (false, true); 2; ()]))#0), 
*          +O+Dprimcon_INT > _200861 : 
**            SIGS_SELF(strbindvar_229902.+O+Dprimcon_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [primcon_INT > _200862 : 
***                             TYPE == CON_PATH(strbindvar_229902.primcon_TYC), 
**                           expose_INT > _200863 : 
***                             (CON_PATH(strbindvar_229902.primcon_TYC) =>
***                                CON_PATH(strbindvar_229902.primcon_sum_INT)) == 
***       +1   /TOTALNONRECUR\_200864
***       +1         (_200865 : CON_PATH(strbindvar_229902.primcon_TYC))
***       +1         : CON_PATH(strbindvar_229902.primcon_sum_INT) =
***       +1      UNROLL(CON_PATH(strbindvar_229902.primcon_TYC),
***       +2   CON_PATH(strbindvar_229902.primcon_sum_INT),_200865), 
**                           Array_c > _200866 : 
***                             CON_PATH(strbindvar_229902.primcon_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.primcon_TYC),INJ(0, 
***       +2   CON_PATH(strbindvar_229902.primcon_sum_INT))), 
**                           Exn_c > _200867 : 
***                             CON_PATH(strbindvar_229902.primcon_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.primcon_TYC),INJ(1, 
***       +2   CON_PATH(strbindvar_229902.primcon_sum_INT))), 
**                           Exntag_c > _200868 : 
***                             CON_PATH(strbindvar_229902.primcon_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.primcon_TYC),INJ(2, 
***       +2   CON_PATH(strbindvar_229902.primcon_sum_INT))), 
**                           Loc_c > _200869 : 
***                             CON_PATH(strbindvar_229902.primcon_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.primcon_TYC),INJ(3, 
***       +2   CON_PATH(strbindvar_229902.primcon_sum_INT))), 
**                           Vector_c > _200870 : 
***                             CON_PATH(strbindvar_229902.primcon_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.primcon_TYC),INJ(4, 
***       +2   CON_PATH(strbindvar_229902.primcon_sum_INT))), 
**                           BoxFloat_c > _200871 : 
***                             (CON_PATH(_200145.floatsize_TYC) =>
***                                CON_PATH(strbindvar_229902.primcon_TYC)) == 
***       +1   /TOTALNONRECUR\_200872
***       +1         (_200873 : CON_PATH(_200145.floatsize_TYC))
***       +1         : CON_PATH(strbindvar_229902.primcon_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.primcon_TYC),INJ(5, 
***       +2   CON_PATH(strbindvar_229902.primcon_sum_INT),_200873)), 
**                           Float_c > _200874 : 
***                             (CON_PATH(_200145.floatsize_TYC) =>
***                                CON_PATH(strbindvar_229902.primcon_TYC)) == 
***       +1   /TOTALNONRECUR\_200875
***       +1         (_200876 : CON_PATH(_200145.floatsize_TYC))
***       +1         : CON_PATH(strbindvar_229902.primcon_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.primcon_TYC),INJ(6, 
***       +2   CON_PATH(strbindvar_229902.primcon_sum_INT),_200876)), 
**                           Int_c > _200877 : 
***                             (CON_PATH(_200145.intsize_TYC) =>
***                                CON_PATH(strbindvar_229902.primcon_TYC)) == 
***       +1   /TOTALNONRECUR\_200878
***       +1         (_200879 : CON_PATH(_200145.intsize_TYC))
***       +1         : CON_PATH(strbindvar_229902.primcon_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.primcon_TYC),INJ(7, 
***       +2   CON_PATH(strbindvar_229902.primcon_sum_INT),_200879)), 
**                           Record_c > _200880 : 
***                             ({CON_APP(_742; CON_PATH(strbindvar_229902.label_TYC)) *
***                               CON_APP(_785;
***                                  CON_APP(_742; CON_PATH(strbindvar_229902.var_TYC)))} =>
***                                CON_PATH(strbindvar_229902.primcon_TYC)) == /TOTALNONRECUR\_200881
***       +1               (_200882 : {CON_APP(_742;
***       +1                              CON_PATH(strbindvar_229902.
***       +1   label_TYC)) *
***       +1                           CON_APP(_785;
***       +1                              CON_APP(_742;
***       +1                                 CON_PATH(strbindvar_229902.
***       +1   var_TYC)))})
***       +1               : CON_PATH(strbindvar_229902.primcon_TYC) =
***       +1            ROLL(CON_PATH(strbindvar_229902.primcon_TYC),
***       +1   INJ(8, CON_PATH(strbindvar_229902.primcon_sum_INT),_200882)), 
**                           Sum_c > _200883 : 
***                             ({totalcount_LAB = CON_PATH(strbindvar_229902.w32_TYC),
***                               tagcount_LAB = CON_PATH(strbindvar_229902.w32_TYC),
***                               known_LAB = CON_APP(_785;
***                                              CON_PATH(strbindvar_229902.w32_TYC))} =>
***                                CON_PATH(strbindvar_229902.primcon_TYC)) == /TOTALNONRECUR\_200884
***       +1             (_200885 : {totalcount_LAB = CON_PATH(strbindvar_229902.
***       +1   w32_TYC),
***       +1                         tagcount_LAB = CON_PATH(strbindvar_229902.
***       +1   w32_TYC),
***       +1                         known_LAB = CON_APP(_785;
***       +1                                        CON_PATH(strbindvar_229902.
***       +1   w32_TYC))})
***       +1             : CON_PATH(strbindvar_229902.primcon_TYC) =
***       +1          ROLL(CON_PATH(strbindvar_229902.primcon_TYC),
***       +1   INJ(9, CON_PATH(strbindvar_229902.primcon_sum_INT),_200885)), 
**                           Vararg_c > _200886 : 
***                             ({CON_PATH(strbindvar_229902.openness_TYC) *
***                               CON_PATH(strbindvar_229902.effect_TYC)} =>
***                                CON_PATH(strbindvar_229902.primcon_TYC)) == 
***       +1   /TOTALNONRECUR\_200887
***       +1         (_200888 : {CON_PATH(strbindvar_229902.openness_TYC) *
***       +1                     CON_PATH(strbindvar_229902.effect_TYC)})
***       +1         : CON_PATH(strbindvar_229902.primcon_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.primcon_TYC),INJ(10, 
***       +2   CON_PATH(strbindvar_229902.primcon_sum_INT),_200888))]
**               ), 
*          nilprim_TYC > _200889 : 
**            TYPE = CON_MU(/-\(_200890)(SUM[
**                                          (make_exntag,
**                                           peq,
**                                           roll,
**                                           unroll,
**                                           box_float,
**                                           inj_exn,
**                                           inject,
**                                           inject_known,
**                                           inject_known_record,
**                                           make_onearg,
**                                           make_vararg,
**                                           partialRecord,
**                                           project,
**                                           project_known,
**                                           project_known_record,
**                                           record,
**                                           select,
**                                           unbox_float);
**                                          4;
**                                          (CON_PATH(_200145.floatsize_TYC),
**                                           _902,
**                                           CON_PATH(_193843.word_TYC),
**                                           CON_PATH(_193843.word_TYC),
**                                           CON_PATH(_193843.word_TYC),
**                                           {CON_PATH(strbindvar_229902.openness_TYC) *
**                                            CON_PATH(strbindvar_229902.effect_TYC)},
**                                           {CON_PATH(strbindvar_229902.openness_TYC) *
**                                            CON_PATH(strbindvar_229902.effect_TYC)},
**                                           {CON_APP(_742;
**                                               CON_PATH(strbindvar_229902.label_TYC)) *
**                                            INT32},
**                                           CON_PATH(_193843.word_TYC),
**                                           CON_PATH(_193843.word_TYC),
**                                           {CON_PATH(_193843.word_TYC) *
**                                            CON_PATH(strbindvar_229902.label_TYC)},
**                                           CON_APP(_742;
**                                              CON_PATH(strbindvar_229902.label_TYC)),
**                                           CON_PATH(strbindvar_229902.label_TYC),
**                                           CON_PATH(_200145.floatsize_TYC))]))#0, 
*          nilprim_sumarg_INT > _200893 : 
**            KIND(14) = (CON_PATH(_200145.floatsize_TYC),
**                        _902,
**                        CON_PATH(_193843.word_TYC),
**                        CON_PATH(_193843.word_TYC),
**                        CON_PATH(_193843.word_TYC),
**                        {CON_PATH(strbindvar_229902.openness_TYC) *
**                         CON_PATH(strbindvar_229902.effect_TYC)},
**                        {CON_PATH(strbindvar_229902.openness_TYC) *
**                         CON_PATH(strbindvar_229902.effect_TYC)},
**                        {CON_APP(_742; CON_PATH(strbindvar_229902.label_TYC)) *
**                         INT32},
**                        CON_PATH(_193843.word_TYC),
**                        CON_PATH(_193843.word_TYC),
**                        {CON_PATH(_193843.word_TYC) *
**                         CON_PATH(strbindvar_229902.label_TYC)},
**                        CON_APP(_742; CON_PATH(strbindvar_229902.label_TYC)),
**                        CON_PATH(strbindvar_229902.label_TYC),
**                        CON_PATH(_200145.floatsize_TYC)), 
*          nilprim_sum_INT > _200894 : 
**            TYPE = SUM[
**                      (make_exntag,
**                       peq,
**                       roll,
**                       unroll,
**                       box_float,
**                       inj_exn,
**                       inject,
**                       inject_known,
**                       inject_known_record,
**                       make_onearg,
**                       make_vararg,
**                       partialRecord,
**                       project,
**                       project_known,
**                       project_known_record,
**                       record,
**                       select,
**                       unbox_float);
**                      4;
**                      CON_PATH(strbindvar_229902.nilprim_sumarg_INT)], 
*          +Enilprim_INT > _200895 : 
**            ({CON_PATH(strbindvar_229902.nilprim_TYC) *
**              CON_PATH(strbindvar_229902.nilprim_TYC)} ->
**               CON_MU(/-\(_200778)(SUM[ (false, true); 2; ()]))#0), 
*          +O+Dnilprim_INT > _200896 : 
**            SIGS_SELF(strbindvar_229902.+O+Dnilprim_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [nilprim_INT > _200897 : 
***                             TYPE == CON_PATH(strbindvar_229902.nilprim_TYC), 
**                           expose_INT > _200898 : 
***                             (CON_PATH(strbindvar_229902.nilprim_TYC) =>
***                                CON_PATH(strbindvar_229902.nilprim_sum_INT)) == 
***       +1   /TOTALNONRECUR\_200899
***       +1         (_200900 : CON_PATH(strbindvar_229902.nilprim_TYC))
***       +1         : CON_PATH(strbindvar_229902.nilprim_sum_INT) =
***       +1      UNROLL(CON_PATH(strbindvar_229902.nilprim_TYC),
***       +2   CON_PATH(strbindvar_229902.nilprim_sum_INT),_200900), 
**                           make_exntag > _200901 : 
***                             CON_PATH(strbindvar_229902.nilprim_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),INJ(0, 
***       +2   CON_PATH(strbindvar_229902.nilprim_sum_INT))), 
**                           peq > _200902 : 
***                             CON_PATH(strbindvar_229902.nilprim_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),INJ(1, 
***       +2   CON_PATH(strbindvar_229902.nilprim_sum_INT))), 
**                           roll > _200903 : 
***                             CON_PATH(strbindvar_229902.nilprim_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),INJ(2, 
***       +2   CON_PATH(strbindvar_229902.nilprim_sum_INT))), 
**                           unroll > _200904 : 
***                             CON_PATH(strbindvar_229902.nilprim_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),INJ(3, 
***       +2   CON_PATH(strbindvar_229902.nilprim_sum_INT))), 
**                           box_float > _200905 : 
***                             (CON_PATH(_200145.floatsize_TYC) =>
***                                CON_PATH(strbindvar_229902.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_200906
***       +1         (_200907 : CON_PATH(_200145.floatsize_TYC))
***       +1         : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),INJ(4, 
***       +2   CON_PATH(strbindvar_229902.nilprim_sum_INT),_200907)), 
**                           inj_exn > _200908 : 
***                             (_902 => CON_PATH(strbindvar_229902.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_200909
***       +1         (_200910 : _902)
***       +1         : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),INJ(5, 
***       +2   CON_PATH(strbindvar_229902.nilprim_sum_INT),_200910)), 
**                           inject > _200911 : 
***                             (CON_PATH(_193843.word_TYC) =>
***                                CON_PATH(strbindvar_229902.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_200912
***       +1         (_200913 : CON_PATH(_193843.word_TYC))
***       +1         : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),INJ(6, 
***       +2   CON_PATH(strbindvar_229902.nilprim_sum_INT),_200913)), 
**                           inject_known > _200914 : 
***                             (CON_PATH(_193843.word_TYC) =>
***                                CON_PATH(strbindvar_229902.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_200915
***       +1         (_200916 : CON_PATH(_193843.word_TYC))
***       +1         : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),INJ(7, 
***       +2   CON_PATH(strbindvar_229902.nilprim_sum_INT),_200916)), 
**                           inject_known_record > _200917 : 
***                             (CON_PATH(_193843.word_TYC) =>
***                                CON_PATH(strbindvar_229902.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_200918
***       +1         (_200919 : CON_PATH(_193843.word_TYC))
***       +1         : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),INJ(8, 
***       +2   CON_PATH(strbindvar_229902.nilprim_sum_INT),_200919)), 
**                           make_onearg > _200920 : 
***                             ({CON_PATH(strbindvar_229902.openness_TYC) *
***                               CON_PATH(strbindvar_229902.effect_TYC)} =>
***                                CON_PATH(strbindvar_229902.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_200921
***       +1         (_200922 : {CON_PATH(strbindvar_229902.openness_TYC) *
***       +1                     CON_PATH(strbindvar_229902.effect_TYC)})
***       +1         : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),INJ(9, 
***       +2   CON_PATH(strbindvar_229902.nilprim_sum_INT),_200922)), 
**                           make_vararg > _200923 : 
***                             ({CON_PATH(strbindvar_229902.openness_TYC) *
***                               CON_PATH(strbindvar_229902.effect_TYC)} =>
***                                CON_PATH(strbindvar_229902.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_200924
***       +1         (_200925 : {CON_PATH(strbindvar_229902.openness_TYC) *
***       +1                     CON_PATH(strbindvar_229902.effect_TYC)})
***       +1         : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),INJ(10, 
***       +2   CON_PATH(strbindvar_229902.nilprim_sum_INT),_200925)), 
**                           partialRecord > _200926 : 
***                             ({CON_APP(_742; CON_PATH(strbindvar_229902.label_TYC)) *
***                               INT32} =>
***                                CON_PATH(strbindvar_229902.nilprim_TYC)) == /TOTALNONRECUR\_200927
***       +1              (_200928 : {CON_APP(_742;
***       +1                             CON_PATH(strbindvar_229902.
***       +1   label_TYC)) *
***       +1                          INT32})
***       +1              : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1           ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),
***       +1   INJ(11, CON_PATH(strbindvar_229902.nilprim_sum_INT),_200928)), 
**                           project > _200929 : 
***                             (CON_PATH(_193843.word_TYC) =>
***                                CON_PATH(strbindvar_229902.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_200930
***       +1         (_200931 : CON_PATH(_193843.word_TYC))
***       +1         : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),INJ(12, 
***       +2   CON_PATH(strbindvar_229902.nilprim_sum_INT),_200931)), 
**                           project_known > _200932 : 
***                             (CON_PATH(_193843.word_TYC) =>
***                                CON_PATH(strbindvar_229902.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_200933
***       +1         (_200934 : CON_PATH(_193843.word_TYC))
***       +1         : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),INJ(13, 
***       +2   CON_PATH(strbindvar_229902.nilprim_sum_INT),_200934)), 
**                           project_known_record > _200935 : 
***                             ({CON_PATH(_193843.word_TYC) *
***                               CON_PATH(strbindvar_229902.label_TYC)} =>
***                                CON_PATH(strbindvar_229902.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_200936
***       +1         (_200937 : {CON_PATH(_193843.word_TYC) *
***       +1                     CON_PATH(strbindvar_229902.label_TYC)})
***       +1         : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),INJ(14, 
***       +2   CON_PATH(strbindvar_229902.nilprim_sum_INT),_200937)), 
**                           record > _200938 : 
***                             (CON_APP(_742; CON_PATH(strbindvar_229902.label_TYC)) =>
***                                CON_PATH(strbindvar_229902.nilprim_TYC)) == /TOTALNONRECUR\_200939
***       +1           (_200940 : CON_APP(_742;
***       +1                         CON_PATH(strbindvar_229902.label_TYC)))
***       +1           : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1        ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),
***       +1   INJ(15, CON_PATH(strbindvar_229902.nilprim_sum_INT),_200940)), 
**                           select > _200941 : 
***                             (CON_PATH(strbindvar_229902.label_TYC) =>
***                                CON_PATH(strbindvar_229902.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_200942
***       +1         (_200943 : CON_PATH(strbindvar_229902.label_TYC))
***       +1         : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),INJ(16, 
***       +2   CON_PATH(strbindvar_229902.nilprim_sum_INT),_200943)), 
**                           unbox_float > _200944 : 
***                             (CON_PATH(_200145.floatsize_TYC) =>
***                                CON_PATH(strbindvar_229902.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_200945
***       +1         (_200946 : CON_PATH(_200145.floatsize_TYC))
***       +1         : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),INJ(17, 
***       +2   CON_PATH(strbindvar_229902.nilprim_sum_INT),_200946))]
**               ), 
*          allprim_TYC > _200947 : 
**            TYPE = CON_MU(/-\(_200948)(SUM[
**                                          (NilPrimOp, PrimOp);
**                                          0;
**                                          (CON_PATH(strbindvar_229902.nilprim_TYC),
**                                           CON_PATH(strbindvar_229902.prim_TYC))]))#0, 
*          allprim_sumarg_INT > _200949 : 
**            KIND(2) = (CON_PATH(strbindvar_229902.nilprim_TYC),
**                       CON_PATH(strbindvar_229902.prim_TYC)), 
*          allprim_sum_INT > _200950 : 
**            TYPE = SUM[
**                      (NilPrimOp, PrimOp);
**                      0;
**                      CON_PATH(strbindvar_229902.allprim_sumarg_INT)], 
*          +Eallprim_INT > _200951 : 
**            ({CON_PATH(strbindvar_229902.allprim_TYC) *
**              CON_PATH(strbindvar_229902.allprim_TYC)} ->
**               CON_MU(/-\(_200778)(SUM[ (false, true); 2; ()]))#0), 
*          +O+Dallprim_INT > _200952 : 
**            SIGS_SELF(strbindvar_229902.+O+Dallprim_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [allprim_INT > _200953 : 
***                             TYPE == CON_PATH(strbindvar_229902.allprim_TYC), 
**                           expose_INT > _200954 : 
***                             (CON_PATH(strbindvar_229902.allprim_TYC) =>
***                                CON_PATH(strbindvar_229902.allprim_sum_INT)) == 
***       +1   /TOTALNONRECUR\_200955
***       +1         (_200956 : CON_PATH(strbindvar_229902.allprim_TYC))
***       +1         : CON_PATH(strbindvar_229902.allprim_sum_INT) =
***       +1      UNROLL(CON_PATH(strbindvar_229902.allprim_TYC),
***       +2   CON_PATH(strbindvar_229902.allprim_sum_INT),_200956), 
**                           NilPrimOp > _200957 : 
***                             (CON_PATH(strbindvar_229902.nilprim_TYC) =>
***                                CON_PATH(strbindvar_229902.allprim_TYC)) == 
***       +1   /TOTALNONRECUR\_200958
***       +1         (_200959 : CON_PATH(strbindvar_229902.nilprim_TYC))
***       +1         : CON_PATH(strbindvar_229902.allprim_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.allprim_TYC),INJ(0, 
***       +2   CON_PATH(strbindvar_229902.allprim_sum_INT),_200959)), 
**                           PrimOp > _200960 : 
***                             (CON_PATH(strbindvar_229902.prim_TYC) =>
***                                CON_PATH(strbindvar_229902.allprim_TYC)) == 
***       +1   /TOTALNONRECUR\_200961
***       +1         (_200962 : CON_PATH(strbindvar_229902.prim_TYC))
***       +1         : CON_PATH(strbindvar_229902.allprim_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.allprim_TYC),INJ(1, 
***       +2   CON_PATH(strbindvar_229902.allprim_sum_INT),_200962))]
**               ), 
*          +Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT > _200963 : 
**            KIND(8) = CON_MU(/-\(_200964,
**                                 _200965,
**                                 _200966,
**                                 _200967,
**                                 _200968,
**                                 _200969,
**                                 _200970,
**                                 _200971)(SUM[
**                                             (Con_b,
**                                              Exp_b,
**                                              Fixclosure_b,
**                                              Fixcode_b,
**                                              Fixopen_b);
**                                             0;
**                                             ({CON_PATH(strbindvar_229902.phase_TYC) *
**                                               _200966},
**                                              {CON_PATH(strbindvar_229902.var_TYC) *
**                                               CON_PATH(strbindvar_229902.niltrace_TYC) *
**                                               _200968},
**                                              {_729 *
**                                               CON_APP(CON_PATH(
**        +1   strbindvar_229902.sequence_TYC);
**                                                  CON_PATH(strbindvar_229902.var_TYC),
**                                                  {code_LAB = 
**        +1   CON_PATH(strbindvar_229902.var_TYC),
**                                                   tipe_LAB = _200965,
**                                                   cenv_LAB = _200965,
**                                                   venv_LAB = _200968})},
**                                              CON_APP(CON_PATH(
**        +1   strbindvar_229902.sequence_TYC);
**                                                 CON_PATH(strbindvar_229902.var_TYC),
**                                                 _200969),
**                                              CON_APP(CON_PATH(
**        +1   strbindvar_229902.sequence_TYC);
**                                                 CON_PATH(strbindvar_229902.var_TYC),
**                                                 _200969))],
**                                          SUM[
**                                             (AllArrow_c,
**                                              Annotate_c,
**                                              App_c,
**                                              Closure_c,
**                                              Crecord_c,
**                                              ExternArrow_c,
**                                              Let_c,
**                                              Mu_c,
**                                              Prim_c,
**                                              Proj_c,
**                                              Typecase_c,
**                                              Typeof_c,
**                                              Var_c);
**                                             0;
**                                             ({openness_LAB = 
**        +1   CON_PATH(strbindvar_229902.openness_TYC),
**                                               effect_LAB = 
**        +1   CON_PATH(strbindvar_229902.effect_TYC),
**                                               body_type_LAB = _200965,
**                                               eFormals_LAB = 
**        +1   CON_APP(_742;
**        +1      {CON_APP(_785; CON_PATH(strbindvar_229902.var_TYC)) *
**        +1       _200965}),
**                                               fFormals_LAB = 
**        +1   CON_PATH(strbindvar_229902.w32_TYC),
**                                               tFormals_LAB = 
**        +1   CON_APP(_742;
**        +1      {CON_PATH(strbindvar_229902.var_TYC) *
**        +1       _200970}),
**                                               isDependent_LAB = _729},
**                                              {CON_APP(CON_PATH(
**        +1   strbindvar_229902.annotation_TYC);
**                                                  _200970) *
**                                               _200965},
**                                              {_200965 *
**                                               CON_APP(_742; _200965)},
**                                              {_200965 *
**                                               _200965},
**                                              CON_APP(_742;
**                                                 {CON_PATH(strbindvar_229902.label_TYC) *
**                                                  _200965}),
**                                              {CON_APP(_742; _200965) *
**                                               _200965},
**                                              {CON_PATH(strbindvar_229902.letsort_TYC) *
**                                               CON_APP(_742; _200966) *
**                                               _200965},
**                                              {_729 *
**                                               CON_APP(CON_PATH(
**        +1   strbindvar_229902.sequence_TYC);
**                                                  CON_PATH(strbindvar_229902.var_TYC),
**                                                  _200965)},
**                                              {CON_PATH(strbindvar_229902.primcon_TYC) *
**                                               CON_APP(_742; _200965)},
**                                              {_200965 *
**                                               CON_PATH(strbindvar_229902.label_TYC)},
**                                              {arg_LAB = _200965,
**                                               kind_LAB = _200970,
**                                               arms_LAB = 
**        +1   CON_APP(_742;
**        +1      {CON_PATH(strbindvar_229902.primcon_TYC) *
**        +1       CON_APP(_742; {CON_PATH(strbindvar_229902.var_TYC) *
**        +1                      _200970}) *
**        +1       _200965}),
**                                               default_LAB = _200965},
**                                              _200968,
**                                              CON_PATH(strbindvar_229902.var_TYC))],
**                                          SUM[
**                                             (Code_cb, Con_cb, Open_cb);
**                                             0;
**                                             ({CON_PATH(strbindvar_229902.var_TYC) *
**                                               CON_APP(_742;
**                                                  {CON_PATH(strbindvar_229902.var_TYC) *
**                                                   _200970}) *
**                                               _200965},
**                                              {CON_PATH(strbindvar_229902.var_TYC) *
**                                               _200965},
**                                              {CON_PATH(strbindvar_229902.var_TYC) *
**                                               CON_APP(_742;
**                                                  {CON_PATH(strbindvar_229902.var_TYC) *
**                                                   _200970}) *
**                                               _200965})],
**                                          SUM[
**                                             (And_cc, Exp_cc, Not_cc, Or_cc);
**                                             0;
**                                             ({_200967 *
**                                               _200967}, _200968, _200967, {_200967 *
**                                                                             _200967})],
**                                          SUM[
**                                             (App_e,
**                                              Const_e,
**                                              ExternApp_e,
**                                              Handle_e,
**                                              Let_e,
**                                              Prim_e,
**                                              Raise_e,
**                                              Switch_e,
**                                              Var_e);
**                                             0;
**                                             ({CON_PATH(strbindvar_229902.openness_TYC) *
**                                               _200968 *
**                                               CON_APP(_742; _200965) *
**                                               CON_APP(_742; _200968) *
**                                               CON_APP(_742; _200968)},
**                                              CON_APP(CON_PATH(_200145.value_TYC);
**                                                 _200965, _200968),
**                                              {_200968 *
**                                               CON_APP(_742; _200968)},
**                                              {body_LAB = _200968,
**                                               result_type_LAB = _200965,
**                                               bound_LAB = 
**        +1   CON_PATH(strbindvar_229902.var_TYC),
**                                               handler_LAB = _200968},
**                                              {CON_PATH(strbindvar_229902.letsort_TYC) *
**                                               CON_APP(_742; _200964) *
**                                               _200968},
**                                              {CON_PATH(strbindvar_229902.allprim_TYC) *
**                                               CON_APP(_742; _200965) *
**                                               CON_APP(_742; _200968)},
**                                              {_200968 *
**                                               _200965},
**                                              _200971,
**                                              CON_PATH(strbindvar_229902.var_TYC))],
**                                          SUM[
**                                             (Function);
**                                             0;
**                                             {effect_LAB = 
**        +1   CON_PATH(strbindvar_229902.effect_TYC),
**                                              body_LAB = _200968,
**                                              recursive_LAB = 
**        +1   CON_PATH(strbindvar_229902.recursive_TYC),
**                                              body_type_LAB = _200965,
**                                              eFormals_LAB = 
**        +1   CON_APP(_742;
**        +1      {CON_PATH(strbindvar_229902.var_TYC) *
**        +1       CON_PATH(strbindvar_229902.niltrace_TYC) *
**        +1       _200965}),
**                                              fFormals_LAB = 
**        +1   CON_APP(_742;
**        +1      CON_PATH(strbindvar_229902.var_TYC)),
**                                              tFormals_LAB = 
**        +1   CON_APP(_742;
**        +1      {CON_PATH(strbindvar_229902.var_TYC) *
**        +1       _200970}),
**                                              isDependent_LAB = _729}],
**                                          SUM[
**                                             (Type_k,
**                                              Arrow_k,
**                                              Record_k,
**                                              SingleType_k,
**                                              Single_k);
**                                             1;
**                                             ({CON_PATH(strbindvar_229902.openness_TYC) *
**                                               CON_APP(_742;
**                                                  {CON_PATH(strbindvar_229902.var_TYC) *
**                                                   _200970}) *
**                                               _200970},
**                                              CON_APP(CON_PATH(
**        +1   strbindvar_229902.sequence_TYC);
**                                                 {CON_PATH(strbindvar_229902.label_TYC) *
**                                                  CON_PATH(strbindvar_229902.var_TYC)},
**                                                 _200970),
**                                              _200965,
**                                              _200965)],
**                                          SUM[
**                                             (Exncase_e,
**                                              Ifthenelse_e,
**                                              Intsw_e,
**                                              Sumsw_e,
**                                              Typecase_e);
**                                             0;
**                                             ({arg_LAB = _200968,
**                                               result_type_LAB = _200965,
**                                               bound_LAB = 
**        +1   CON_PATH(strbindvar_229902.var_TYC),
**                                               arms_LAB = 
**        +1   CON_APP(_742;
**        +1      {_200968 *
**        +1       CON_PATH(strbindvar_229902.niltrace_TYC) *
**        +1       _200968}),
**                                               default_LAB = CON_APP(_785; _200968)},
**                                              {arg_LAB = _200967,
**                                               elseArm_LAB = _200968,
**                                               result_type_LAB = _200965,
**                                               thenArm_LAB = _200968},
**                                              {arg_LAB = _200968,
**                                               size_LAB = CON_PATH(_200145.intsize_TYC),
**                                               result_type_LAB = _200965,
**                                               arms_LAB = 
**        +1   CON_APP(_742;
**        +1      {CON_PATH(strbindvar_229902.w32_TYC) *
**        +1       _200968}),
**                                               default_LAB = CON_APP(_785; _200968)},
**                                              {arg_LAB = _200968,
**                                               result_type_LAB = _200965,
**                                               sumtype_LAB = _200965,
**                                               bound_LAB = 
**        +1   CON_PATH(strbindvar_229902.var_TYC),
**                                               arms_LAB = 
**        +1   CON_APP(_742;
**        +1      {CON_PATH(strbindvar_229902.w32_TYC) *
**        +1       CON_PATH(strbindvar_229902.niltrace_TYC) *
**        +1       _200968}),
**                                               default_LAB = CON_APP(_785; _200968)},
**                                              {arg_LAB = _200965,
**                                               result_type_LAB = _200965,
**                                               arms_LAB = 
**        +1   CON_APP(_742;
**        +1      {CON_PATH(strbindvar_229902.primcon_TYC) *
**        +1       CON_APP(_742; {CON_PATH(strbindvar_229902.var_TYC) *
**        +1                      _200970}) *
**        +1       _200968}),
**                                               default_LAB = _200968})])), 
*          bnd_TYC > _200973 : 
**            TYPE = CON_PATH(strbindvar_229902.+Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#0, 
*          con_TYC > _200974 : 
**            TYPE = CON_PATH(strbindvar_229902.+Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#1, 
*          conbnd_TYC > _200975 : 
**            TYPE = CON_PATH(strbindvar_229902.+Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#2, 
*          conditionCode_TYC > _200976 : 
**            TYPE = CON_PATH(strbindvar_229902.+Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#3, 
*          exp_TYC > _200977 : 
**            TYPE = CON_PATH(strbindvar_229902.+Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#4, 
*          function_TYC > _200978 : 
**            TYPE = CON_PATH(strbindvar_229902.+Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#5, 
*          kind_TYC > _200979 : 
**            TYPE = CON_PATH(strbindvar_229902.+Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#6, 
*          switch_TYC > _200980 : 
**            TYPE = CON_PATH(strbindvar_229902.+Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#7, 
*          bnd_sumarg_INT > _200981 : 
**            KIND(5) = ({CON_PATH(strbindvar_229902.phase_TYC) *
**                        CON_PATH(strbindvar_229902.conbnd_TYC)},
**                       {CON_PATH(strbindvar_229902.var_TYC) *
**                        CON_PATH(strbindvar_229902.niltrace_TYC) *
**                        CON_PATH(strbindvar_229902.exp_TYC)},
**                       {_729 *
**                        CON_APP(CON_PATH(strbindvar_229902.sequence_TYC);
**                           CON_PATH(strbindvar_229902.var_TYC),
**                           {code_LAB = CON_PATH(strbindvar_229902.var_TYC),
**                            tipe_LAB = CON_PATH(strbindvar_229902.con_TYC),
**                            cenv_LAB = CON_PATH(strbindvar_229902.con_TYC),
**                            venv_LAB = CON_PATH(strbindvar_229902.exp_TYC)})},
**                       CON_APP(CON_PATH(strbindvar_229902.sequence_TYC);
**                          CON_PATH(strbindvar_229902.var_TYC),
**                          CON_PATH(strbindvar_229902.function_TYC)),
**                       CON_APP(CON_PATH(strbindvar_229902.sequence_TYC);
**                          CON_PATH(strbindvar_229902.var_TYC),
**                          CON_PATH(strbindvar_229902.function_TYC))), 
*          con_sumarg_INT > _200982 : 
**            KIND(13) = ({openness_LAB = CON_PATH(strbindvar_229902.openness_TYC),
**                         effect_LAB = CON_PATH(strbindvar_229902.effect_TYC),
**                         body_type_LAB = CON_PATH(strbindvar_229902.con_TYC),
**                         eFormals_LAB = CON_APP(_742;
**                                           {CON_APP(_785;
**                                               CON_PATH(strbindvar_229902.var_TYC)) *
**                                            CON_PATH(strbindvar_229902.con_TYC)}),
**                         fFormals_LAB = CON_PATH(strbindvar_229902.w32_TYC),
**                         tFormals_LAB = CON_APP(_742;
**                                           {CON_PATH(strbindvar_229902.var_TYC) *
**                                            CON_PATH(strbindvar_229902.kind_TYC)}),
**                         isDependent_LAB = _729},
**                        {CON_APP(CON_PATH(strbindvar_229902.annotation_TYC);
**                            CON_PATH(strbindvar_229902.kind_TYC)) *
**                         CON_PATH(strbindvar_229902.con_TYC)},
**                        {CON_PATH(strbindvar_229902.con_TYC) *
**                         CON_APP(_742; CON_PATH(strbindvar_229902.con_TYC))},
**                        {CON_PATH(strbindvar_229902.con_TYC) *
**                         CON_PATH(strbindvar_229902.con_TYC)},
**                        CON_APP(_742; {CON_PATH(strbindvar_229902.label_TYC) *
**                                       CON_PATH(strbindvar_229902.con_TYC)}),
**                        {CON_APP(_742; CON_PATH(strbindvar_229902.con_TYC)) *
**                         CON_PATH(strbindvar_229902.con_TYC)},
**                        {CON_PATH(strbindvar_229902.letsort_TYC) *
**                         CON_APP(_742; CON_PATH(strbindvar_229902.conbnd_TYC)) *
**                         CON_PATH(strbindvar_229902.con_TYC)},
**                        {_729 *
**                         CON_APP(CON_PATH(strbindvar_229902.sequence_TYC);
**                            CON_PATH(strbindvar_229902.var_TYC),
**                            CON_PATH(strbindvar_229902.con_TYC))},
**                        {CON_PATH(strbindvar_229902.primcon_TYC) *
**                         CON_APP(_742; CON_PATH(strbindvar_229902.con_TYC))},
**                        {CON_PATH(strbindvar_229902.con_TYC) *
**                         CON_PATH(strbindvar_229902.label_TYC)},
**                        {arg_LAB = CON_PATH(strbindvar_229902.con_TYC),
**                         kind_LAB = CON_PATH(strbindvar_229902.kind_TYC),
**                         arms_LAB = CON_APP(_742;
**                                       {CON_PATH(strbindvar_229902.primcon_TYC) *
**                                        CON_APP(_742;
**                                           {CON_PATH(strbindvar_229902.var_TYC) *
**                                            CON_PATH(strbindvar_229902.kind_TYC)}) *
**                                        CON_PATH(strbindvar_229902.con_TYC)}),
**                         default_LAB = CON_PATH(strbindvar_229902.con_TYC)},
**                        CON_PATH(strbindvar_229902.exp_TYC),
**                        CON_PATH(strbindvar_229902.var_TYC)), 
*          conbnd_sumarg_INT > _200983 : 
**            KIND(3) = ({CON_PATH(strbindvar_229902.var_TYC) *
**                        CON_APP(_742; {CON_PATH(strbindvar_229902.var_TYC) *
**                                       CON_PATH(strbindvar_229902.kind_TYC)}) *
**                        CON_PATH(strbindvar_229902.con_TYC)},
**                       {CON_PATH(strbindvar_229902.var_TYC) *
**                        CON_PATH(strbindvar_229902.con_TYC)},
**                       {CON_PATH(strbindvar_229902.var_TYC) *
**                        CON_APP(_742; {CON_PATH(strbindvar_229902.var_TYC) *
**                                       CON_PATH(strbindvar_229902.kind_TYC)}) *
**                        CON_PATH(strbindvar_229902.con_TYC)}), 
*          conditionCode_sumarg_INT > _200984 : 
**            KIND(4) = ({CON_PATH(strbindvar_229902.conditionCode_TYC) *
**                        CON_PATH(strbindvar_229902.conditionCode_TYC)},
**                       CON_PATH(strbindvar_229902.exp_TYC),
**                       CON_PATH(strbindvar_229902.conditionCode_TYC),
**                       {CON_PATH(strbindvar_229902.conditionCode_TYC) *
**                        CON_PATH(strbindvar_229902.conditionCode_TYC)}), 
*          exp_sumarg_INT > _200985 : 
**            KIND(9) = ({CON_PATH(strbindvar_229902.openness_TYC) *
**                        CON_PATH(strbindvar_229902.exp_TYC) *
**                        CON_APP(_742; CON_PATH(strbindvar_229902.con_TYC)) *
**                        CON_APP(_742; CON_PATH(strbindvar_229902.exp_TYC)) *
**                        CON_APP(_742; CON_PATH(strbindvar_229902.exp_TYC))},
**                       CON_APP(CON_PATH(_200145.value_TYC);
**                          CON_PATH(strbindvar_229902.con_TYC),
**                          CON_PATH(strbindvar_229902.exp_TYC)),
**                       {CON_PATH(strbindvar_229902.exp_TYC) *
**                        CON_APP(_742; CON_PATH(strbindvar_229902.exp_TYC))},
**                       {body_LAB = CON_PATH(strbindvar_229902.exp_TYC),
**                        result_type_LAB = CON_PATH(strbindvar_229902.con_TYC),
**                        bound_LAB = CON_PATH(strbindvar_229902.var_TYC),
**                        handler_LAB = CON_PATH(strbindvar_229902.exp_TYC)},
**                       {CON_PATH(strbindvar_229902.letsort_TYC) *
**                        CON_APP(_742; CON_PATH(strbindvar_229902.bnd_TYC)) *
**                        CON_PATH(strbindvar_229902.exp_TYC)},
**                       {CON_PATH(strbindvar_229902.allprim_TYC) *
**                        CON_APP(_742; CON_PATH(strbindvar_229902.con_TYC)) *
**                        CON_APP(_742; CON_PATH(strbindvar_229902.exp_TYC))},
**                       {CON_PATH(strbindvar_229902.exp_TYC) *
**                        CON_PATH(strbindvar_229902.con_TYC)},
**                       CON_PATH(strbindvar_229902.switch_TYC),
**                       CON_PATH(strbindvar_229902.var_TYC)), 
*          function_sumarg_INT > _200986 : 
**            TYPE = {effect_LAB = CON_PATH(strbindvar_229902.effect_TYC),
**                    body_LAB = CON_PATH(strbindvar_229902.exp_TYC),
**                    recursive_LAB = CON_PATH(strbindvar_229902.recursive_TYC),
**                    body_type_LAB = CON_PATH(strbindvar_229902.con_TYC),
**                    eFormals_LAB = CON_APP(_742;
**                                      {CON_PATH(strbindvar_229902.var_TYC) *
**                                       CON_PATH(strbindvar_229902.niltrace_TYC) *
**                                       CON_PATH(strbindvar_229902.con_TYC)}),
**                    fFormals_LAB = CON_APP(_742; CON_PATH(strbindvar_229902.var_TYC)),
**                    tFormals_LAB = CON_APP(_742; {CON_PATH(strbindvar_229902.var_TYC) *
**                                                  CON_PATH(strbindvar_229902.kind_TYC)}),
**                    isDependent_LAB = _729}, 
*          kind_sumarg_INT > _200987 : 
**            KIND(4) = ({CON_PATH(strbindvar_229902.openness_TYC) *
**                        CON_APP(_742; {CON_PATH(strbindvar_229902.var_TYC) *
**                                       CON_PATH(strbindvar_229902.kind_TYC)}) *
**                        CON_PATH(strbindvar_229902.kind_TYC)},
**                       CON_APP(CON_PATH(strbindvar_229902.sequence_TYC);
**                          {CON_PATH(strbindvar_229902.label_TYC) *
**                           CON_PATH(strbindvar_229902.var_TYC)},
**                          CON_PATH(strbindvar_229902.kind_TYC)),
**                       CON_PATH(strbindvar_229902.con_TYC),
**                       CON_PATH(strbindvar_229902.con_TYC)), 
*          switch_sumarg_INT > _200988 : 
**            KIND(5) = ({arg_LAB = CON_PATH(strbindvar_229902.exp_TYC),
**                        result_type_LAB = CON_PATH(strbindvar_229902.con_TYC),
**                        bound_LAB = CON_PATH(strbindvar_229902.var_TYC),
**                        arms_LAB = CON_APP(_742;
**                                      {CON_PATH(strbindvar_229902.exp_TYC) *
**                                       CON_PATH(strbindvar_229902.niltrace_TYC) *
**                                       CON_PATH(strbindvar_229902.exp_TYC)}),
**                        default_LAB = CON_APP(_785; CON_PATH(strbindvar_229902.exp_TYC))},
**                       {arg_LAB = CON_PATH(strbindvar_229902.conditionCode_TYC),
**                        elseArm_LAB = CON_PATH(strbindvar_229902.exp_TYC),
**                        result_type_LAB = CON_PATH(strbindvar_229902.con_TYC),
**                        thenArm_LAB = CON_PATH(strbindvar_229902.exp_TYC)},
**                       {arg_LAB = CON_PATH(strbindvar_229902.exp_TYC),
**                        size_LAB = CON_PATH(_200145.intsize_TYC),
**                        result_type_LAB = CON_PATH(strbindvar_229902.con_TYC),
**                        arms_LAB = CON_APP(_742; {CON_PATH(strbindvar_229902.w32_TYC) *
**                                                  CON_PATH(strbindvar_229902.exp_TYC)}),
**                        default_LAB = CON_APP(_785; CON_PATH(strbindvar_229902.exp_TYC))},
**                       {arg_LAB = CON_PATH(strbindvar_229902.exp_TYC),
**                        result_type_LAB = CON_PATH(strbindvar_229902.con_TYC),
**                        sumtype_LAB = CON_PATH(strbindvar_229902.con_TYC),
**                        bound_LAB = CON_PATH(strbindvar_229902.var_TYC),
**                        arms_LAB = CON_APP(_742;
**                                      {CON_PATH(strbindvar_229902.w32_TYC) *
**                                       CON_PATH(strbindvar_229902.niltrace_TYC) *
**                                       CON_PATH(strbindvar_229902.exp_TYC)}),
**                        default_LAB = CON_APP(_785; CON_PATH(strbindvar_229902.exp_TYC))},
**                       {arg_LAB = CON_PATH(strbindvar_229902.con_TYC),
**                        result_type_LAB = CON_PATH(strbindvar_229902.con_TYC),
**                        arms_LAB = CON_APP(_742;
**                                      {CON_PATH(strbindvar_229902.primcon_TYC) *
**                                       CON_APP(_742;
**                                          {CON_PATH(strbindvar_229902.var_TYC) *
**                                           CON_PATH(strbindvar_229902.kind_TYC)}) *
**                                       CON_PATH(strbindvar_229902.exp_TYC)}),
**                        default_LAB = CON_PATH(strbindvar_229902.exp_TYC)}), 
*          bnd_sum_INT > _200989 : 
**            TYPE = SUM[
**                      (Con_b, Exp_b, Fixclosure_b, Fixcode_b, Fixopen_b);
**                      0;
**                      CON_PATH(strbindvar_229902.bnd_sumarg_INT)], 
*          con_sum_INT > _200990 : 
**            TYPE = SUM[
**                      (AllArrow_c,
**                       Annotate_c,
**                       App_c,
**                       Closure_c,
**                       Crecord_c,
**                       ExternArrow_c,
**                       Let_c,
**                       Mu_c,
**                       Prim_c,
**                       Proj_c,
**                       Typecase_c,
**                       Typeof_c,
**                       Var_c);
**                      0;
**                      CON_PATH(strbindvar_229902.con_sumarg_INT)], 
*          conbnd_sum_INT > _200991 : 
**            TYPE = SUM[
**                      (Code_cb, Con_cb, Open_cb);
**                      0;
**                      CON_PATH(strbindvar_229902.conbnd_sumarg_INT)], 
*          conditionCode_sum_INT > _200992 : 
**            TYPE = SUM[
**                      (And_cc, Exp_cc, Not_cc, Or_cc);
**                      0;
**                      CON_PATH(strbindvar_229902.conditionCode_sumarg_INT)], 
*          exp_sum_INT > _200993 : 
**            TYPE = SUM[
**                      (App_e,
**                       Const_e,
**                       ExternApp_e,
**                       Handle_e,
**                       Let_e,
**                       Prim_e,
**                       Raise_e,
**                       Switch_e,
**                       Var_e);
**                      0;
**                      CON_PATH(strbindvar_229902.exp_sumarg_INT)], 
*          function_sum_INT > _200994 : 
**            TYPE = SUM[ (Function); 0; CON_PATH(strbindvar_229902.function_sumarg_INT)], 
*          kind_sum_INT > _200995 : 
**            TYPE = SUM[
**                      (Type_k, Arrow_k, Record_k, SingleType_k, Single_k);
**                      1;
**                      CON_PATH(strbindvar_229902.kind_sumarg_INT)], 
*          switch_sum_INT > _200996 : 
**            TYPE = SUM[
**                      (Exncase_e, Ifthenelse_e, Intsw_e, Sumsw_e, Typecase_e);
**                      0;
**                      CON_PATH(strbindvar_229902.switch_sumarg_INT)], 
*          +O+Dbnd_INT > _200997 : 
**            SIGS_SELF(strbindvar_229902.+O+Dbnd_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [bnd_INT > _200998 : 
***                             TYPE == CON_PATH(strbindvar_229902.bnd_TYC), 
**                           expose_INT > _200999 : 
***                             (CON_PATH(strbindvar_229902.bnd_TYC) =>
***                                CON_PATH(strbindvar_229902.bnd_sum_INT)) == 
***       +1   /TOTALNONRECUR\_201000
***       +1         (_201001 : CON_PATH(strbindvar_229902.bnd_TYC))
***       +1         : CON_PATH(strbindvar_229902.bnd_sum_INT) =
***       +1      UNROLL(CON_PATH(strbindvar_229902.bnd_TYC),CON_PATH(
***       +2   strbindvar_229902.bnd_sum_INT),_201001), 
**                           Con_b > _201002 : 
***                             ({CON_PATH(strbindvar_229902.phase_TYC) *
***                               CON_PATH(strbindvar_229902.conbnd_TYC)} =>
***                                CON_PATH(strbindvar_229902.bnd_TYC)) == 
***       +1   /TOTALNONRECUR\_201003
***       +1         (_201004 : {CON_PATH(strbindvar_229902.phase_TYC) *
***       +1                     CON_PATH(strbindvar_229902.conbnd_TYC)})
***       +1         : CON_PATH(strbindvar_229902.bnd_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.bnd_TYC),INJ(0, 
***       +2   CON_PATH(strbindvar_229902.bnd_sum_INT),_201004)), 
**                           Exp_b > _201005 : 
***                             ({CON_PATH(strbindvar_229902.var_TYC) *
***                               CON_PATH(strbindvar_229902.niltrace_TYC) *
***                               CON_PATH(strbindvar_229902.exp_TYC)} =>
***                                CON_PATH(strbindvar_229902.bnd_TYC)) == 
***       +1   /TOTALNONRECUR\_201006
***       +1         (_201007 : {CON_PATH(strbindvar_229902.var_TYC) *
***       +1                     CON_PATH(strbindvar_229902.niltrace_TYC) *
***       +1                     CON_PATH(strbindvar_229902.exp_TYC)})
***       +1         : CON_PATH(strbindvar_229902.bnd_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.bnd_TYC),INJ(1, 
***       +2   CON_PATH(strbindvar_229902.bnd_sum_INT),_201007)), 
**                           Fixclosure_b > _201008 : 
***                             ({_729 *
***                               CON_APP(CON_PATH(strbindvar_229902.sequence_TYC);
***                                  CON_PATH(strbindvar_229902.var_TYC),
***                                  {code_LAB = CON_PATH(strbindvar_229902.var_TYC),
***                                   tipe_LAB = CON_PATH(strbindvar_229902.con_TYC),
***                                   cenv_LAB = CON_PATH(strbindvar_229902.con_TYC),
***                                   venv_LAB = CON_PATH(strbindvar_229902.exp_TYC)})} =>
***                                CON_PATH(strbindvar_229902.bnd_TYC)) == /TOTALNONRECUR\_201009
***       +1             (_201010 : {_729 *
***       +1                         CON_APP(CON_PATH(strbindvar_229902.
***       +1   sequence_TYC);
***       +1                            CON_PATH(strbindvar_229902.
***       +1   var_TYC),
***       +1                            {code_LAB = CON_PATH(strbindvar_229902.
***       +1   var_TYC),
***       +1                             tipe_LAB = CON_PATH(strbindvar_229902.
***       +1   con_TYC),
***       +1                             cenv_LAB = CON_PATH(strbindvar_229902.
***       +1   con_TYC),
***       +1                             venv_LAB = CON_PATH(strbindvar_229902.
***       +1   exp_TYC)})})
***       +1             : CON_PATH(strbindvar_229902.bnd_TYC) =
***       +1          ROLL(CON_PATH(strbindvar_229902.bnd_TYC),INJ(2, 
***       +1   CON_PATH(strbindvar_229902.bnd_sum_INT),_201010)), 
**                           Fixcode_b > _201011 : 
***                             (CON_APP(CON_PATH(strbindvar_229902.sequence_TYC);
***                                 CON_PATH(strbindvar_229902.var_TYC),
***                                 CON_PATH(strbindvar_229902.function_TYC)) =>
***                                CON_PATH(strbindvar_229902.bnd_TYC)) == 
***       +1   /TOTALNONRECUR\_201012
***       +1         (_201013 : CON_APP(CON_PATH(strbindvar_229902.sequence_TYC);
***       +1                       CON_PATH(strbindvar_229902.var_TYC),
***       +1                       CON_PATH(strbindvar_229902.function_TYC)))
***       +1         : CON_PATH(strbindvar_229902.bnd_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.bnd_TYC),INJ(3, 
***       +2   CON_PATH(strbindvar_229902.bnd_sum_INT),_201013)), 
**                           Fixopen_b > _201014 : 
***                             (CON_APP(CON_PATH(strbindvar_229902.sequence_TYC);
***                                 CON_PATH(strbindvar_229902.var_TYC),
***                                 CON_PATH(strbindvar_229902.function_TYC)) =>
***                                CON_PATH(strbindvar_229902.bnd_TYC)) == 
***       +1   /TOTALNONRECUR\_201015
***       +1         (_201016 : CON_APP(CON_PATH(strbindvar_229902.sequence_TYC);
***       +1                       CON_PATH(strbindvar_229902.var_TYC),
***       +1                       CON_PATH(strbindvar_229902.function_TYC)))
***       +1         : CON_PATH(strbindvar_229902.bnd_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.bnd_TYC),INJ(4, 
***       +2   CON_PATH(strbindvar_229902.bnd_sum_INT),_201016))]
**               ), 
*          +O+Dcon_INT > _201017 : 
**            SIGS_SELF(strbindvar_229902.+O+Dcon_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [con_INT > _201018 : 
***                             TYPE == CON_PATH(strbindvar_229902.con_TYC), 
**                           expose_INT > _201019 : 
***                             (CON_PATH(strbindvar_229902.con_TYC) =>
***                                CON_PATH(strbindvar_229902.con_sum_INT)) == 
***       +1   /TOTALNONRECUR\_201020
***       +1         (_201021 : CON_PATH(strbindvar_229902.con_TYC))
***       +1         : CON_PATH(strbindvar_229902.con_sum_INT) =
***       +1      UNROLL(CON_PATH(strbindvar_229902.con_TYC),CON_PATH(
***       +2   strbindvar_229902.con_sum_INT),_201021), 
**                           AllArrow_c > _201022 : 
***                             ({openness_LAB = CON_PATH(strbindvar_229902.openness_TYC),
***                               effect_LAB = CON_PATH(strbindvar_229902.effect_TYC),
***                               body_type_LAB = CON_PATH(strbindvar_229902.con_TYC),
***                               eFormals_LAB = CON_APP(_742;
***                                                 {CON_APP(_785;
***                                                     CON_PATH(strbindvar_229902.var_TYC)) *
***                                                  CON_PATH(strbindvar_229902.con_TYC)}),
***                               fFormals_LAB = CON_PATH(strbindvar_229902.w32_TYC),
***                               tFormals_LAB = CON_APP(_742;
***                                                 {CON_PATH(strbindvar_229902.var_TYC) *
***                                                  CON_PATH(strbindvar_229902.kind_TYC)}),
***                               isDependent_LAB = _729} =>
***                                CON_PATH(strbindvar_229902.con_TYC)) == /TOTALNONRECUR\_201023
***       +1                      (_201024 : {openness_LAB = CON_PATH(
***       +1   strbindvar_229902.openness_TYC),
***       +1                                  effect_LAB = CON_PATH(
***       +1   strbindvar_229902.effect_TYC),
***       +1                                  body_type_LAB = CON_PATH(
***       +1   strbindvar_229902.con_TYC),
***       +1                                  eFormals_LAB = CON_APP(_742;
***       +1                                                    {
***       +1   CON_APP(_785;
***       +1      CON_PATH(strbindvar_229902.var_TYC)) *
***       +1                                                     
***       +1   CON_PATH(strbindvar_229902.con_TYC)}),
***       +1                                  fFormals_LAB = CON_PATH(
***       +1   strbindvar_229902.w32_TYC),
***       +1                                  tFormals_LAB = CON_APP(_742;
***       +1                                                    {
***       +1   CON_PATH(strbindvar_229902.var_TYC) *
***       +1                                                     
***       +1   CON_PATH(strbindvar_229902.kind_TYC)}),
***       +1                                  isDependent_LAB = _729})
***       +1                      : CON_PATH(strbindvar_229902.con_TYC) =
***       +1                   ROLL(CON_PATH(strbindvar_229902.con_TYC),
***       +1   INJ(0, CON_PATH(strbindvar_229902.con_sum_INT),_201024)), 
**                           Annotate_c > _201025 : 
***                             ({CON_APP(CON_PATH(strbindvar_229902.annotation_TYC);
***                                  CON_PATH(strbindvar_229902.kind_TYC)) *
***                               CON_PATH(strbindvar_229902.con_TYC)} =>
***                                CON_PATH(strbindvar_229902.con_TYC)) == /TOTALNONRECUR\_201026
***       +1             (_201027 : {CON_APP(CON_PATH(strbindvar_229902.
***       +1   annotation_TYC);
***       +1                            CON_PATH(strbindvar_229902.
***       +1   kind_TYC)) *
***       +1                         CON_PATH(strbindvar_229902.con_TYC)})
***       +1             : CON_PATH(strbindvar_229902.con_TYC) =
***       +1          ROLL(CON_PATH(strbindvar_229902.con_TYC),INJ(1, 
***       +1   CON_PATH(strbindvar_229902.con_sum_INT),_201027)), 
**                           App_c > _201028 : 
***                             ({CON_PATH(strbindvar_229902.con_TYC) *
***                               CON_APP(_742; CON_PATH(strbindvar_229902.con_TYC))} =>
***                                CON_PATH(strbindvar_229902.con_TYC)) == /TOTALNONRECUR\_201029
***       +1           (_201030 : {CON_PATH(strbindvar_229902.con_TYC) *
***       +1                       CON_APP(_742;
***       +1                          CON_PATH(strbindvar_229902.
***       +1   con_TYC))})
***       +1           : CON_PATH(strbindvar_229902.con_TYC) =
***       +1        ROLL(CON_PATH(strbindvar_229902.con_TYC),INJ(2, 
***       +1   CON_PATH(strbindvar_229902.con_sum_INT),_201030)), 
**                           Closure_c > _201031 : 
***                             ({CON_PATH(strbindvar_229902.con_TYC) *
***                               CON_PATH(strbindvar_229902.con_TYC)} =>
***                                CON_PATH(strbindvar_229902.con_TYC)) == 
***       +1   /TOTALNONRECUR\_201032
***       +1         (_201033 : {CON_PATH(strbindvar_229902.con_TYC) *
***       +1                     CON_PATH(strbindvar_229902.con_TYC)})
***       +1         : CON_PATH(strbindvar_229902.con_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.con_TYC),INJ(3, 
***       +2   CON_PATH(strbindvar_229902.con_sum_INT),_201033)), 
**                           Crecord_c > _201034 : 
***                             (CON_APP(_742; {CON_PATH(strbindvar_229902.label_TYC) *
***                                             CON_PATH(strbindvar_229902.con_TYC)}) =>
***                                CON_PATH(strbindvar_229902.con_TYC)) == /TOTALNONRECUR\_201035
***       +1              (_201036 : CON_APP(_742;
***       +1                            {CON_PATH(strbindvar_229902.
***       +1   label_TYC) *
***       +1                             CON_PATH(strbindvar_229902.
***       +1   con_TYC)}))
***       +1              : CON_PATH(strbindvar_229902.con_TYC) =
***       +1           ROLL(CON_PATH(strbindvar_229902.con_TYC),INJ(4, 
***       +1   CON_PATH(strbindvar_229902.con_sum_INT),_201036)), 
**                           ExternArrow_c > _201037 : 
***                             ({CON_APP(_742; CON_PATH(strbindvar_229902.con_TYC)) *
***                               CON_PATH(strbindvar_229902.con_TYC)} =>
***                                CON_PATH(strbindvar_229902.con_TYC)) == /TOTALNONRECUR\_201038
***       +1            (_201039 : {CON_APP(_742;
***       +1                           CON_PATH(strbindvar_229902.
***       +1   con_TYC)) *
***       +1                        CON_PATH(strbindvar_229902.con_TYC)})
***       +1            : CON_PATH(strbindvar_229902.con_TYC) =
***       +1         ROLL(CON_PATH(strbindvar_229902.con_TYC),INJ(5, 
***       +1   CON_PATH(strbindvar_229902.con_sum_INT),_201039)), 
**                           Let_c > _201040 : 
***                             ({CON_PATH(strbindvar_229902.letsort_TYC) *
***                               CON_APP(_742; CON_PATH(strbindvar_229902.conbnd_TYC)) *
***                               CON_PATH(strbindvar_229902.con_TYC)} =>
***                                CON_PATH(strbindvar_229902.con_TYC)) == /TOTALNONRECUR\_201041
***       +1               (_201042 : {CON_PATH(strbindvar_229902.
***       +1   letsort_TYC) *
***       +1                           CON_APP(_742;
***       +1                              CON_PATH(strbindvar_229902.
***       +1   conbnd_TYC)) *
***       +1                           CON_PATH(strbindvar_229902.
***       +1   con_TYC)})
***       +1               : CON_PATH(strbindvar_229902.con_TYC) =
***       +1            ROLL(CON_PATH(strbindvar_229902.con_TYC),
***       +1   INJ(6, CON_PATH(strbindvar_229902.con_sum_INT),_201042)), 
**                           Mu_c > _201043 : 
***                             ({_729 *
***                               CON_APP(CON_PATH(strbindvar_229902.sequence_TYC);
***                                  CON_PATH(strbindvar_229902.var_TYC),
***                                  CON_PATH(strbindvar_229902.con_TYC))} =>
***                                CON_PATH(strbindvar_229902.con_TYC)) == /TOTALNONRECUR\_201044
***       +1          (_201045 : {_729 *
***       +1                      CON_APP(CON_PATH(strbindvar_229902.
***       +1   sequence_TYC);
***       +1                         CON_PATH(strbindvar_229902.var_TYC),
***       +1                         CON_PATH(strbindvar_229902.con_TYC))})
***       +1          : CON_PATH(strbindvar_229902.con_TYC) =
***       +1       ROLL(CON_PATH(strbindvar_229902.con_TYC),INJ(7, 
***       +1   CON_PATH(strbindvar_229902.con_sum_INT),_201045)), 
**                           Prim_c > _201046 : 
***                             ({CON_PATH(strbindvar_229902.primcon_TYC) *
***                               CON_APP(_742; CON_PATH(strbindvar_229902.con_TYC))} =>
***                                CON_PATH(strbindvar_229902.con_TYC)) == /TOTALNONRECUR\_201047
***       +1           (_201048 : {CON_PATH(strbindvar_229902.primcon_TYC) *
***       +1                       CON_APP(_742;
***       +1                          CON_PATH(strbindvar_229902.
***       +1   con_TYC))})
***       +1           : CON_PATH(strbindvar_229902.con_TYC) =
***       +1        ROLL(CON_PATH(strbindvar_229902.con_TYC),INJ(8, 
***       +1   CON_PATH(strbindvar_229902.con_sum_INT),_201048)), 
**                           Proj_c > _201049 : 
***                             ({CON_PATH(strbindvar_229902.con_TYC) *
***                               CON_PATH(strbindvar_229902.label_TYC)} =>
***                                CON_PATH(strbindvar_229902.con_TYC)) == 
***       +1   /TOTALNONRECUR\_201050
***       +1         (_201051 : {CON_PATH(strbindvar_229902.con_TYC) *
***       +1                     CON_PATH(strbindvar_229902.label_TYC)})
***       +1         : CON_PATH(strbindvar_229902.con_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.con_TYC),INJ(9, 
***       +2   CON_PATH(strbindvar_229902.con_sum_INT),_201051)), 
**                           Typecase_c > _201052 : 
***                             ({arg_LAB = CON_PATH(strbindvar_229902.con_TYC),
***                               kind_LAB = CON_PATH(strbindvar_229902.kind_TYC),
***                               arms_LAB = CON_APP(_742;
***                                             {CON_PATH(strbindvar_229902.primcon_TYC) *
***                                              CON_APP(_742;
***                                                 {CON_PATH(strbindvar_229902.var_TYC) *
***                                                  CON_PATH(strbindvar_229902.kind_TYC)}) *
***                                              CON_PATH(strbindvar_229902.con_TYC)}),
***                               default_LAB = CON_PATH(strbindvar_229902.con_TYC)} =>
***                                CON_PATH(strbindvar_229902.con_TYC)) == /TOTALNONRECUR\_201053
***       +1                     (_201054 : {arg_LAB = CON_PATH(strbindvar_229902.
***       +1   con_TYC),
***       +1                                 kind_LAB = CON_PATH(
***       +1   strbindvar_229902.kind_TYC),
***       +1                                 arms_LAB = CON_APP(_742;
***       +1                                               {CON_PATH(
***       +1   strbindvar_229902.primcon_TYC) *
***       +1                                                CON_APP(_742;
***       +1                                                   {CON_PATH(
***       +1   strbindvar_229902.var_TYC) *
***       +1                                                    CON_PATH(
***       +1   strbindvar_229902.kind_TYC)}) *
***       +1                                                CON_PATH(
***       +1   strbindvar_229902.con_TYC)}),
***       +1                                 default_LAB = CON_PATH(
***       +1   strbindvar_229902.con_TYC)})
***       +1                     : CON_PATH(strbindvar_229902.con_TYC) =
***       +1                  ROLL(CON_PATH(strbindvar_229902.con_TYC),
***       +1   INJ(10, CON_PATH(strbindvar_229902.con_sum_INT),_201054)), 
**                           Typeof_c > _201055 : 
***                             (CON_PATH(strbindvar_229902.exp_TYC) =>
***                                CON_PATH(strbindvar_229902.con_TYC)) == 
***       +1   /TOTALNONRECUR\_201056
***       +1         (_201057 : CON_PATH(strbindvar_229902.exp_TYC))
***       +1         : CON_PATH(strbindvar_229902.con_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.con_TYC),INJ(11, 
***       +2   CON_PATH(strbindvar_229902.con_sum_INT),_201057)), 
**                           Var_c > _201058 : 
***                             (CON_PATH(strbindvar_229902.var_TYC) =>
***                                CON_PATH(strbindvar_229902.con_TYC)) == 
***       +1   /TOTALNONRECUR\_201059
***       +1         (_201060 : CON_PATH(strbindvar_229902.var_TYC))
***       +1         : CON_PATH(strbindvar_229902.con_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.con_TYC),INJ(12, 
***       +2   CON_PATH(strbindvar_229902.con_sum_INT),_201060))]
**               ), 
*          +O+Dconbnd_INT > _201061 : 
**            SIGS_SELF(strbindvar_229902.+O+Dconbnd_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [conbnd_INT > _201062 : 
***                             TYPE == CON_PATH(strbindvar_229902.conbnd_TYC), 
**                           expose_INT > _201063 : 
***                             (CON_PATH(strbindvar_229902.conbnd_TYC) =>
***                                CON_PATH(strbindvar_229902.conbnd_sum_INT)) == 
***       +1   /TOTALNONRECUR\_201064
***       +1         (_201065 : CON_PATH(strbindvar_229902.conbnd_TYC))
***       +1         : CON_PATH(strbindvar_229902.conbnd_sum_INT) =
***       +1      UNROLL(CON_PATH(strbindvar_229902.conbnd_TYC),CON_PATH(
***       +2   strbindvar_229902.conbnd_sum_INT),_201065), 
**                           Code_cb > _201066 : 
***                             ({CON_PATH(strbindvar_229902.var_TYC) *
***                               CON_APP(_742; {CON_PATH(strbindvar_229902.var_TYC) *
***                                              CON_PATH(strbindvar_229902.kind_TYC)}) *
***                               CON_PATH(strbindvar_229902.con_TYC)} =>
***                                CON_PATH(strbindvar_229902.conbnd_TYC)) == /TOTALNONRECUR\_201067
***       +1               (_201068 : {CON_PATH(strbindvar_229902.
***       +1   var_TYC) *
***       +1                           CON_APP(_742;
***       +1                              {CON_PATH(strbindvar_229902.
***       +1   var_TYC) *
***       +1                               CON_PATH(strbindvar_229902.
***       +1   kind_TYC)}) *
***       +1                           CON_PATH(strbindvar_229902.
***       +1   con_TYC)})
***       +1               : CON_PATH(strbindvar_229902.conbnd_TYC) =
***       +1            ROLL(CON_PATH(strbindvar_229902.conbnd_TYC),
***       +1   INJ(0, CON_PATH(strbindvar_229902.conbnd_sum_INT),_201068)), 
**                           Con_cb > _201069 : 
***                             ({CON_PATH(strbindvar_229902.var_TYC) *
***                               CON_PATH(strbindvar_229902.con_TYC)} =>
***                                CON_PATH(strbindvar_229902.conbnd_TYC)) == 
***       +1   /TOTALNONRECUR\_201070
***       +1         (_201071 : {CON_PATH(strbindvar_229902.var_TYC) *
***       +1                     CON_PATH(strbindvar_229902.con_TYC)})
***       +1         : CON_PATH(strbindvar_229902.conbnd_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.conbnd_TYC),INJ(1, 
***       +2   CON_PATH(strbindvar_229902.conbnd_sum_INT),_201071)), 
**                           Open_cb > _201072 : 
***                             ({CON_PATH(strbindvar_229902.var_TYC) *
***                               CON_APP(_742; {CON_PATH(strbindvar_229902.var_TYC) *
***                                              CON_PATH(strbindvar_229902.kind_TYC)}) *
***                               CON_PATH(strbindvar_229902.con_TYC)} =>
***                                CON_PATH(strbindvar_229902.conbnd_TYC)) == /TOTALNONRECUR\_201073
***       +1               (_201074 : {CON_PATH(strbindvar_229902.
***       +1   var_TYC) *
***       +1                           CON_APP(_742;
***       +1                              {CON_PATH(strbindvar_229902.
***       +1   var_TYC) *
***       +1                               CON_PATH(strbindvar_229902.
***       +1   kind_TYC)}) *
***       +1                           CON_PATH(strbindvar_229902.
***       +1   con_TYC)})
***       +1               : CON_PATH(strbindvar_229902.conbnd_TYC) =
***       +1            ROLL(CON_PATH(strbindvar_229902.conbnd_TYC),
***       +1   INJ(2, CON_PATH(strbindvar_229902.conbnd_sum_INT),_201074))]
**               ), 
*          +O+DconditionCode_INT > _201075 : 
**            SIGS_SELF(strbindvar_229902.+O+DconditionCode_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [conditionCode_INT > _201076 : 
***                             TYPE == CON_PATH(strbindvar_229902.conditionCode_TYC), 
**                           expose_INT > _201077 : 
***                             (CON_PATH(strbindvar_229902.conditionCode_TYC) =>
***                                CON_PATH(strbindvar_229902.conditionCode_sum_INT)) == 
***       +1   /TOTALNONRECUR\_201078
***       +1         (_201079 : CON_PATH(strbindvar_229902.conditionCode_TYC))
***       +1         : CON_PATH(strbindvar_229902.conditionCode_sum_INT) =
***       +1      UNROLL(CON_PATH(strbindvar_229902.conditionCode_TYC),
***       +2   CON_PATH(strbindvar_229902.conditionCode_sum_INT),_201079), 
**                           And_cc > _201080 : 
***                             ({CON_PATH(strbindvar_229902.conditionCode_TYC) *
***                               CON_PATH(strbindvar_229902.conditionCode_TYC)} =>
***                                CON_PATH(strbindvar_229902.conditionCode_TYC)) == 
***       +1   /TOTALNONRECUR\_201081
***       +1         (_201082 : {CON_PATH(strbindvar_229902.conditionCode_TYC) *
***       +1                     CON_PATH(strbindvar_229902.conditionCode_TYC)})
***       +1         : CON_PATH(strbindvar_229902.conditionCode_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.conditionCode_TYC),
***       +2   INJ(0, CON_PATH(strbindvar_229902.conditionCode_sum_INT),_201082)), 
**                           Exp_cc > _201083 : 
***                             (CON_PATH(strbindvar_229902.exp_TYC) =>
***                                CON_PATH(strbindvar_229902.conditionCode_TYC)) == 
***       +1   /TOTALNONRECUR\_201084
***       +1         (_201085 : CON_PATH(strbindvar_229902.exp_TYC))
***       +1         : CON_PATH(strbindvar_229902.conditionCode_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.conditionCode_TYC),
***       +2   INJ(1, CON_PATH(strbindvar_229902.conditionCode_sum_INT),_201085)), 
**                           Not_cc > _201086 : 
***                             (CON_PATH(strbindvar_229902.conditionCode_TYC) =>
***                                CON_PATH(strbindvar_229902.conditionCode_TYC)) == 
***       +1   /TOTALNONRECUR\_201087
***       +1         (_201088 : CON_PATH(strbindvar_229902.conditionCode_TYC))
***       +1         : CON_PATH(strbindvar_229902.conditionCode_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.conditionCode_TYC),
***       +2   INJ(2, CON_PATH(strbindvar_229902.conditionCode_sum_INT),_201088)), 
**                           Or_cc > _201089 : 
***                             ({CON_PATH(strbindvar_229902.conditionCode_TYC) *
***                               CON_PATH(strbindvar_229902.conditionCode_TYC)} =>
***                                CON_PATH(strbindvar_229902.conditionCode_TYC)) == 
***       +1   /TOTALNONRECUR\_201090
***       +1         (_201091 : {CON_PATH(strbindvar_229902.conditionCode_TYC) *
***       +1                     CON_PATH(strbindvar_229902.conditionCode_TYC)})
***       +1         : CON_PATH(strbindvar_229902.conditionCode_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.conditionCode_TYC),
***       +2   INJ(3, CON_PATH(strbindvar_229902.conditionCode_sum_INT),_201091))]
**               ), 
*          +O+Dexp_INT > _201092 : 
**            SIGS_SELF(strbindvar_229902.+O+Dexp_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [exp_INT > _201093 : 
***                             TYPE == CON_PATH(strbindvar_229902.exp_TYC), 
**                           expose_INT > _201094 : 
***                             (CON_PATH(strbindvar_229902.exp_TYC) =>
***                                CON_PATH(strbindvar_229902.exp_sum_INT)) == 
***       +1   /TOTALNONRECUR\_201095
***       +1         (_201096 : CON_PATH(strbindvar_229902.exp_TYC))
***       +1         : CON_PATH(strbindvar_229902.exp_sum_INT) =
***       +1      UNROLL(CON_PATH(strbindvar_229902.exp_TYC),CON_PATH(
***       +2   strbindvar_229902.exp_sum_INT),_201096), 
**                           App_e > _201097 : 
***                             ({CON_PATH(strbindvar_229902.openness_TYC) *
***                               CON_PATH(strbindvar_229902.exp_TYC) *
***                               CON_APP(_742; CON_PATH(strbindvar_229902.con_TYC)) *
***                               CON_APP(_742; CON_PATH(strbindvar_229902.exp_TYC)) *
***                               CON_APP(_742; CON_PATH(strbindvar_229902.exp_TYC))} =>
***                                CON_PATH(strbindvar_229902.exp_TYC)) == /TOTALNONRECUR\_201098
***       +1            (_201099 : {CON_PATH(strbindvar_229902.openness_TYC) *
***       +1                        CON_PATH(strbindvar_229902.exp_TYC) *
***       +1                        CON_APP(_742;
***       +1                           CON_PATH(strbindvar_229902.
***       +1   con_TYC)) *
***       +1                        CON_APP(_742;
***       +1                           CON_PATH(strbindvar_229902.
***       +1   exp_TYC)) *
***       +1                        CON_APP(_742;
***       +1                           CON_PATH(strbindvar_229902.
***       +1   exp_TYC))})
***       +1            : CON_PATH(strbindvar_229902.exp_TYC) =
***       +1         ROLL(CON_PATH(strbindvar_229902.exp_TYC),INJ(0, 
***       +1   CON_PATH(strbindvar_229902.exp_sum_INT),_201099)), 
**                           Const_e > _201100 : 
***                             (CON_APP(CON_PATH(_200145.value_TYC);
***                                 CON_PATH(strbindvar_229902.con_TYC),
***                                 CON_PATH(strbindvar_229902.exp_TYC)) =>
***                                CON_PATH(strbindvar_229902.exp_TYC)) == 
***       +1   /TOTALNONRECUR\_201101
***       +1         (_201102 : CON_APP(CON_PATH(_200145.value_TYC);
***       +1                       CON_PATH(strbindvar_229902.con_TYC),
***       +1                       CON_PATH(strbindvar_229902.exp_TYC)))
***       +1         : CON_PATH(strbindvar_229902.exp_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.exp_TYC),INJ(1, 
***       +2   CON_PATH(strbindvar_229902.exp_sum_INT),_201102)), 
**                           ExternApp_e > _201103 : 
***                             ({CON_PATH(strbindvar_229902.exp_TYC) *
***                               CON_APP(_742; CON_PATH(strbindvar_229902.exp_TYC))} =>
***                                CON_PATH(strbindvar_229902.exp_TYC)) == /TOTALNONRECUR\_201104
***       +1           (_201105 : {CON_PATH(strbindvar_229902.exp_TYC) *
***       +1                       CON_APP(_742;
***       +1                          CON_PATH(strbindvar_229902.
***       +1   exp_TYC))})
***       +1           : CON_PATH(strbindvar_229902.exp_TYC) =
***       +1        ROLL(CON_PATH(strbindvar_229902.exp_TYC),INJ(2, 
***       +1   CON_PATH(strbindvar_229902.exp_sum_INT),_201105)), 
**                           Handle_e > _201106 : 
***                             ({body_LAB = CON_PATH(strbindvar_229902.exp_TYC),
***                               result_type_LAB = CON_PATH(strbindvar_229902.con_TYC),
***                               bound_LAB = CON_PATH(strbindvar_229902.var_TYC),
***                               handler_LAB = CON_PATH(strbindvar_229902.exp_TYC)} =>
***                                CON_PATH(strbindvar_229902.exp_TYC)) == /TOTALNONRECUR\_201107
***       +1              (_201108 : {body_LAB = CON_PATH(strbindvar_229902.
***       +1   exp_TYC),
***       +1                          result_type_LAB = CON_PATH(
***       +1   strbindvar_229902.con_TYC),
***       +1                          bound_LAB = CON_PATH(strbindvar_229902.
***       +1   var_TYC),
***       +1                          handler_LAB = CON_PATH(strbindvar_229902.
***       +1   exp_TYC)})
***       +1              : CON_PATH(strbindvar_229902.exp_TYC) =
***       +1           ROLL(CON_PATH(strbindvar_229902.exp_TYC),INJ(3, 
***       +1   CON_PATH(strbindvar_229902.exp_sum_INT),_201108)), 
**                           Let_e > _201109 : 
***                             ({CON_PATH(strbindvar_229902.letsort_TYC) *
***                               CON_APP(_742; CON_PATH(strbindvar_229902.bnd_TYC)) *
***                               CON_PATH(strbindvar_229902.exp_TYC)} =>
***                                CON_PATH(strbindvar_229902.exp_TYC)) == /TOTALNONRECUR\_201110
***       +1            (_201111 : {CON_PATH(strbindvar_229902.letsort_TYC) *
***       +1                        CON_APP(_742;
***       +1                           CON_PATH(strbindvar_229902.
***       +1   bnd_TYC)) *
***       +1                        CON_PATH(strbindvar_229902.exp_TYC)})
***       +1            : CON_PATH(strbindvar_229902.exp_TYC) =
***       +1         ROLL(CON_PATH(strbindvar_229902.exp_TYC),INJ(4, 
***       +1   CON_PATH(strbindvar_229902.exp_sum_INT),_201111)), 
**                           Prim_e > _201112 : 
***                             ({CON_PATH(strbindvar_229902.allprim_TYC) *
***                               CON_APP(_742; CON_PATH(strbindvar_229902.con_TYC)) *
***                               CON_APP(_742; CON_PATH(strbindvar_229902.exp_TYC))} =>
***                                CON_PATH(strbindvar_229902.exp_TYC)) == /TOTALNONRECUR\_201113
***       +1            (_201114 : {CON_PATH(strbindvar_229902.allprim_TYC) *
***       +1                        CON_APP(_742;
***       +1                           CON_PATH(strbindvar_229902.
***       +1   con_TYC)) *
***       +1                        CON_APP(_742;
***       +1                           CON_PATH(strbindvar_229902.
***       +1   exp_TYC))})
***       +1            : CON_PATH(strbindvar_229902.exp_TYC) =
***       +1         ROLL(CON_PATH(strbindvar_229902.exp_TYC),INJ(5, 
***       +1   CON_PATH(strbindvar_229902.exp_sum_INT),_201114)), 
**                           Raise_e > _201115 : 
***                             ({CON_PATH(strbindvar_229902.exp_TYC) *
***                               CON_PATH(strbindvar_229902.con_TYC)} =>
***                                CON_PATH(strbindvar_229902.exp_TYC)) == 
***       +1   /TOTALNONRECUR\_201116
***       +1         (_201117 : {CON_PATH(strbindvar_229902.exp_TYC) *
***       +1                     CON_PATH(strbindvar_229902.con_TYC)})
***       +1         : CON_PATH(strbindvar_229902.exp_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.exp_TYC),INJ(6, 
***       +2   CON_PATH(strbindvar_229902.exp_sum_INT),_201117)), 
**                           Switch_e > _201118 : 
***                             (CON_PATH(strbindvar_229902.switch_TYC) =>
***                                CON_PATH(strbindvar_229902.exp_TYC)) == 
***       +1   /TOTALNONRECUR\_201119
***       +1         (_201120 : CON_PATH(strbindvar_229902.switch_TYC))
***       +1         : CON_PATH(strbindvar_229902.exp_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.exp_TYC),INJ(7, 
***       +2   CON_PATH(strbindvar_229902.exp_sum_INT),_201120)), 
**                           Var_e > _201121 : 
***                             (CON_PATH(strbindvar_229902.var_TYC) =>
***                                CON_PATH(strbindvar_229902.exp_TYC)) == 
***       +1   /TOTALNONRECUR\_201122
***       +1         (_201123 : CON_PATH(strbindvar_229902.var_TYC))
***       +1         : CON_PATH(strbindvar_229902.exp_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.exp_TYC),INJ(8, 
***       +2   CON_PATH(strbindvar_229902.exp_sum_INT),_201123))]
**               ), 
*          +O+Dfunction_INT > _201124 : 
**            SIGS_SELF(strbindvar_229902.+O+Dfunction_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [function_INT > _201125 : 
***                             TYPE == CON_PATH(strbindvar_229902.function_TYC), 
**                           expose_INT > _201126 : 
***                             (CON_PATH(strbindvar_229902.function_TYC) =>
***                                CON_PATH(strbindvar_229902.function_sum_INT)) == 
***       +1   /TOTALNONRECUR\_201127
***       +1         (_201128 : CON_PATH(strbindvar_229902.function_TYC))
***       +1         : CON_PATH(strbindvar_229902.function_sum_INT) =
***       +1      UNROLL(CON_PATH(strbindvar_229902.function_TYC),
***       +2   CON_PATH(strbindvar_229902.function_sum_INT),_201128), 
**                           Function > _201129 : 
***                             ({effect_LAB = CON_PATH(strbindvar_229902.effect_TYC),
***                               body_LAB = CON_PATH(strbindvar_229902.exp_TYC),
***                               recursive_LAB = CON_PATH(strbindvar_229902.recursive_TYC),
***                               body_type_LAB = CON_PATH(strbindvar_229902.con_TYC),
***                               eFormals_LAB = CON_APP(_742;
***                                                 {CON_PATH(strbindvar_229902.var_TYC) *
***                                                  CON_PATH(
***       +1   strbindvar_229902.niltrace_TYC) *
***                                                  CON_PATH(strbindvar_229902.con_TYC)}),
***                               fFormals_LAB = CON_APP(_742;
***                                                 CON_PATH(strbindvar_229902.var_TYC)),
***                               tFormals_LAB = CON_APP(_742;
***                                                 {CON_PATH(strbindvar_229902.var_TYC) *
***                                                  CON_PATH(strbindvar_229902.kind_TYC)}),
***                               isDependent_LAB = _729} =>
***                                CON_PATH(strbindvar_229902.function_TYC)) == /TOTALNONRECUR\_201130
***       +1                       (_201131 : {effect_LAB = CON_PATH(
***       +1   strbindvar_229902.effect_TYC),
***       +1                                   body_LAB = CON_PATH(
***       +1   strbindvar_229902.exp_TYC),
***       +1                                   recursive_LAB = CON_PATH(
***       +1   strbindvar_229902.recursive_TYC),
***       +1                                   body_type_LAB = CON_PATH(
***       +1   strbindvar_229902.con_TYC),
***       +1                                   eFormals_LAB = CON_APP(_742;
***       +1                                                     
***       +1   {CON_PATH(strbindvar_229902.var_TYC) *
***       +1    CON_PATH(strbindvar_229902.niltrace_TYC) *
***       +1    CON_PATH(strbindvar_229902.con_TYC)}),
***       +1                                   fFormals_LAB = CON_APP(_742;
***       +1                                                     
***       +1   CON_PATH(strbindvar_229902.var_TYC)),
***       +1                                   tFormals_LAB = CON_APP(_742;
***       +1                                                     
***       +1   {CON_PATH(strbindvar_229902.var_TYC) *
***       +1    CON_PATH(strbindvar_229902.kind_TYC)}),
***       +1                                   isDependent_LAB = _729})
***       +1                       : CON_PATH(strbindvar_229902.function_TYC) =
***       +1                    ROLL(CON_PATH(strbindvar_229902.function_TYC),
***       +1   INJ(0, CON_PATH(strbindvar_229902.function_sum_INT),_201131))]
**               ), 
*          +O+Dkind_INT > _201132 : 
**            SIGS_SELF(strbindvar_229902.+O+Dkind_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [kind_INT > _201133 : 
***                             TYPE == CON_PATH(strbindvar_229902.kind_TYC), 
**                           expose_INT > _201134 : 
***                             (CON_PATH(strbindvar_229902.kind_TYC) =>
***                                CON_PATH(strbindvar_229902.kind_sum_INT)) == 
***       +1   /TOTALNONRECUR\_201135
***       +1         (_201136 : CON_PATH(strbindvar_229902.kind_TYC))
***       +1         : CON_PATH(strbindvar_229902.kind_sum_INT) =
***       +1      UNROLL(CON_PATH(strbindvar_229902.kind_TYC),CON_PATH(
***       +2   strbindvar_229902.kind_sum_INT),_201136), 
**                           Type_k > _201137 : 
***                             CON_PATH(strbindvar_229902.kind_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.kind_TYC),INJ(0, CON_PATH(
***       +2   strbindvar_229902.kind_sum_INT))), 
**                           Arrow_k > _201138 : 
***                             ({CON_PATH(strbindvar_229902.openness_TYC) *
***                               CON_APP(_742; {CON_PATH(strbindvar_229902.var_TYC) *
***                                              CON_PATH(strbindvar_229902.kind_TYC)}) *
***                               CON_PATH(strbindvar_229902.kind_TYC)} =>
***                                CON_PATH(strbindvar_229902.kind_TYC)) == /TOTALNONRECUR\_201139
***       +1               (_201140 : {CON_PATH(strbindvar_229902.
***       +1   openness_TYC) *
***       +1                           CON_APP(_742;
***       +1                              {CON_PATH(strbindvar_229902.
***       +1   var_TYC) *
***       +1                               CON_PATH(strbindvar_229902.
***       +1   kind_TYC)}) *
***       +1                           CON_PATH(strbindvar_229902.
***       +1   kind_TYC)})
***       +1               : CON_PATH(strbindvar_229902.kind_TYC) =
***       +1            ROLL(CON_PATH(strbindvar_229902.kind_TYC),
***       +1   INJ(1, CON_PATH(strbindvar_229902.kind_sum_INT),_201140)), 
**                           Record_k > _201141 : 
***                             (CON_APP(CON_PATH(strbindvar_229902.sequence_TYC);
***                                 {CON_PATH(strbindvar_229902.label_TYC) *
***                                  CON_PATH(strbindvar_229902.var_TYC)},
***                                 CON_PATH(strbindvar_229902.kind_TYC)) =>
***                                CON_PATH(strbindvar_229902.kind_TYC)) == 
***       +1   /TOTALNONRECUR\_201142
***       +1         (_201143 : CON_APP(CON_PATH(strbindvar_229902.sequence_TYC);
***       +1                       {CON_PATH(strbindvar_229902.label_TYC) *
***       +1                        CON_PATH(strbindvar_229902.var_TYC)},
***       +1                       CON_PATH(strbindvar_229902.kind_TYC)))
***       +1         : CON_PATH(strbindvar_229902.kind_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.kind_TYC),INJ(2, 
***       +2   CON_PATH(strbindvar_229902.kind_sum_INT),_201143)), 
**                           SingleType_k > _201144 : 
***                             (CON_PATH(strbindvar_229902.con_TYC) =>
***                                CON_PATH(strbindvar_229902.kind_TYC)) == 
***       +1   /TOTALNONRECUR\_201145
***       +1         (_201146 : CON_PATH(strbindvar_229902.con_TYC))
***       +1         : CON_PATH(strbindvar_229902.kind_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.kind_TYC),INJ(3, 
***       +2   CON_PATH(strbindvar_229902.kind_sum_INT),_201146)), 
**                           Single_k > _201147 : 
***                             (CON_PATH(strbindvar_229902.con_TYC) =>
***                                CON_PATH(strbindvar_229902.kind_TYC)) == 
***       +1   /TOTALNONRECUR\_201148
***       +1         (_201149 : CON_PATH(strbindvar_229902.con_TYC))
***       +1         : CON_PATH(strbindvar_229902.kind_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.kind_TYC),INJ(4, 
***       +2   CON_PATH(strbindvar_229902.kind_sum_INT),_201149))]
**               ), 
*          +O+Dswitch_INT > _201150 : 
**            SIGS_SELF(strbindvar_229902.+O+Dswitch_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [switch_INT > _201151 : 
***                             TYPE == CON_PATH(strbindvar_229902.switch_TYC), 
**                           expose_INT > _201152 : 
***                             (CON_PATH(strbindvar_229902.switch_TYC) =>
***                                CON_PATH(strbindvar_229902.switch_sum_INT)) == 
***       +1   /TOTALNONRECUR\_201153
***       +1         (_201154 : CON_PATH(strbindvar_229902.switch_TYC))
***       +1         : CON_PATH(strbindvar_229902.switch_sum_INT) =
***       +1      UNROLL(CON_PATH(strbindvar_229902.switch_TYC),CON_PATH(
***       +2   strbindvar_229902.switch_sum_INT),_201154), 
**                           Exncase_e > _201155 : 
***                             ({arg_LAB = CON_PATH(strbindvar_229902.exp_TYC),
***                               result_type_LAB = CON_PATH(strbindvar_229902.con_TYC),
***                               bound_LAB = CON_PATH(strbindvar_229902.var_TYC),
***                               arms_LAB = CON_APP(_742;
***                                             {CON_PATH(strbindvar_229902.exp_TYC) *
***                                              CON_PATH(strbindvar_229902.niltrace_TYC) *
***                                              CON_PATH(strbindvar_229902.exp_TYC)}),
***                               default_LAB = CON_APP(_785;
***                                                CON_PATH(strbindvar_229902.exp_TYC))} =>
***                                CON_PATH(strbindvar_229902.switch_TYC)) == /TOTALNONRECUR\_201156
***       +1                   (_201157 : {arg_LAB = CON_PATH(strbindvar_229902.
***       +1   exp_TYC),
***       +1                               result_type_LAB = CON_PATH(
***       +1   strbindvar_229902.con_TYC),
***       +1                               bound_LAB = CON_PATH(strbindvar_229902.
***       +1   var_TYC),
***       +1                               arms_LAB = CON_APP(_742;
***       +1                                             {CON_PATH(
***       +1   strbindvar_229902.exp_TYC) *
***       +1                                              CON_PATH(
***       +1   strbindvar_229902.niltrace_TYC) *
***       +1                                              CON_PATH(
***       +1   strbindvar_229902.exp_TYC)}),
***       +1                               default_LAB = CON_APP(_785;
***       +1                                                CON_PATH(
***       +1   strbindvar_229902.exp_TYC))})
***       +1                   : CON_PATH(strbindvar_229902.switch_TYC) =
***       +1                ROLL(CON_PATH(strbindvar_229902.switch_TYC),
***       +1   INJ(0, CON_PATH(strbindvar_229902.switch_sum_INT),_201157)), 
**                           Ifthenelse_e > _201158 : 
***                             ({arg_LAB = CON_PATH(strbindvar_229902.conditionCode_TYC),
***                               elseArm_LAB = CON_PATH(strbindvar_229902.exp_TYC),
***                               result_type_LAB = CON_PATH(strbindvar_229902.con_TYC),
***                               thenArm_LAB = CON_PATH(strbindvar_229902.exp_TYC)} =>
***                                CON_PATH(strbindvar_229902.switch_TYC)) == /TOTALNONRECUR\_201159
***       +1                (_201160 : {arg_LAB = CON_PATH(strbindvar_229902.
***       +1   conditionCode_TYC),
***       +1                            elseArm_LAB = CON_PATH(strbindvar_229902.
***       +1   exp_TYC),
***       +1                            result_type_LAB = CON_PATH(
***       +1   strbindvar_229902.con_TYC),
***       +1                            thenArm_LAB = CON_PATH(strbindvar_229902.
***       +1   exp_TYC)})
***       +1                : CON_PATH(strbindvar_229902.switch_TYC) =
***       +1             ROLL(CON_PATH(strbindvar_229902.switch_TYC),
***       +1   INJ(1, CON_PATH(strbindvar_229902.switch_sum_INT),_201160)), 
**                           Intsw_e > _201161 : 
***                             ({arg_LAB = CON_PATH(strbindvar_229902.exp_TYC),
***                               size_LAB = CON_PATH(_200145.intsize_TYC),
***                               result_type_LAB = CON_PATH(strbindvar_229902.con_TYC),
***                               arms_LAB = CON_APP(_742;
***                                             {CON_PATH(strbindvar_229902.w32_TYC) *
***                                              CON_PATH(strbindvar_229902.exp_TYC)}),
***                               default_LAB = CON_APP(_785;
***                                                CON_PATH(strbindvar_229902.exp_TYC))} =>
***                                CON_PATH(strbindvar_229902.switch_TYC)) == /TOTALNONRECUR\_201162
***       +1              (_201163 : {arg_LAB = CON_PATH(strbindvar_229902.
***       +1   exp_TYC),
***       +1                          size_LAB = CON_PATH(_200145.
***       +1   intsize_TYC),
***       +1                          result_type_LAB = CON_PATH(
***       +1   strbindvar_229902.con_TYC),
***       +1                          arms_LAB = CON_APP(_742;
***       +1                                        {CON_PATH(strbindvar_229902.
***       +1   w32_TYC) *
***       +1                                         CON_PATH(strbindvar_229902.
***       +1   exp_TYC)}),
***       +1                          default_LAB = CON_APP(_785;
***       +1                                           CON_PATH(strbindvar_229902.
***       +1   exp_TYC))})
***       +1              : CON_PATH(strbindvar_229902.switch_TYC) =
***       +1           ROLL(CON_PATH(strbindvar_229902.switch_TYC),
***       +1   INJ(2, CON_PATH(strbindvar_229902.switch_sum_INT),_201163)), 
**                           Sumsw_e > _201164 : 
***                             ({arg_LAB = CON_PATH(strbindvar_229902.exp_TYC),
***                               result_type_LAB = CON_PATH(strbindvar_229902.con_TYC),
***                               sumtype_LAB = CON_PATH(strbindvar_229902.con_TYC),
***                               bound_LAB = CON_PATH(strbindvar_229902.var_TYC),
***                               arms_LAB = CON_APP(_742;
***                                             {CON_PATH(strbindvar_229902.w32_TYC) *
***                                              CON_PATH(strbindvar_229902.niltrace_TYC) *
***                                              CON_PATH(strbindvar_229902.exp_TYC)}),
***                               default_LAB = CON_APP(_785;
***                                                CON_PATH(strbindvar_229902.exp_TYC))} =>
***                                CON_PATH(strbindvar_229902.switch_TYC)) == /TOTALNONRECUR\_201165
***       +1                   (_201166 : {arg_LAB = CON_PATH(strbindvar_229902.
***       +1   exp_TYC),
***       +1                               result_type_LAB = CON_PATH(
***       +1   strbindvar_229902.con_TYC),
***       +1                               sumtype_LAB = CON_PATH(
***       +1   strbindvar_229902.con_TYC),
***       +1                               bound_LAB = CON_PATH(strbindvar_229902.
***       +1   var_TYC),
***       +1                               arms_LAB = CON_APP(_742;
***       +1                                             {CON_PATH(
***       +1   strbindvar_229902.w32_TYC) *
***       +1                                              CON_PATH(
***       +1   strbindvar_229902.niltrace_TYC) *
***       +1                                              CON_PATH(
***       +1   strbindvar_229902.exp_TYC)}),
***       +1                               default_LAB = CON_APP(_785;
***       +1                                                CON_PATH(
***       +1   strbindvar_229902.exp_TYC))})
***       +1                   : CON_PATH(strbindvar_229902.switch_TYC) =
***       +1                ROLL(CON_PATH(strbindvar_229902.switch_TYC),
***       +1   INJ(3, CON_PATH(strbindvar_229902.switch_sum_INT),_201166)), 
**                           Typecase_e > _201167 : 
***                             ({arg_LAB = CON_PATH(strbindvar_229902.con_TYC),
***                               result_type_LAB = CON_PATH(strbindvar_229902.con_TYC),
***                               arms_LAB = CON_APP(_742;
***                                             {CON_PATH(strbindvar_229902.primcon_TYC) *
***                                              CON_APP(_742;
***                                                 {CON_PATH(strbindvar_229902.var_TYC) *
***                                                  CON_PATH(strbindvar_229902.kind_TYC)}) *
***                                              CON_PATH(strbindvar_229902.exp_TYC)}),
***                               default_LAB = CON_PATH(strbindvar_229902.exp_TYC)} =>
***                                CON_PATH(strbindvar_229902.switch_TYC)) == /TOTALNONRECUR\_201168
***       +1                     (_201169 : {arg_LAB = CON_PATH(strbindvar_229902.
***       +1   con_TYC),
***       +1                                 result_type_LAB = CON_PATH(
***       +1   strbindvar_229902.con_TYC),
***       +1                                 arms_LAB = CON_APP(_742;
***       +1                                               {CON_PATH(
***       +1   strbindvar_229902.primcon_TYC) *
***       +1                                                CON_APP(_742;
***       +1                                                   {CON_PATH(
***       +1   strbindvar_229902.var_TYC) *
***       +1                                                    CON_PATH(
***       +1   strbindvar_229902.kind_TYC)}) *
***       +1                                                CON_PATH(
***       +1   strbindvar_229902.exp_TYC)}),
***       +1                                 default_LAB = CON_PATH(
***       +1   strbindvar_229902.exp_TYC)})
***       +1                     : CON_PATH(strbindvar_229902.switch_TYC) =
***       +1                  ROLL(CON_PATH(strbindvar_229902.switch_TYC),
***       +1   INJ(4, CON_PATH(strbindvar_229902.switch_sum_INT),_201169))]
**               ), 
*          import_entry_TYC > _201170 : 
**            TYPE = CON_MU(/-\(_201171)(SUM[
**                                          (ImportType, ImportValue);
**                                          0;
**                                          ({CON_PATH(strbindvar_229902.label_TYC) *
**                                            CON_PATH(strbindvar_229902.var_TYC) *
**                                            CON_PATH(strbindvar_229902.kind_TYC)},
**                                           {CON_PATH(strbindvar_229902.label_TYC) *
**                                            CON_PATH(strbindvar_229902.var_TYC) *
**                                            CON_PATH(strbindvar_229902.niltrace_TYC) *
**                                            CON_PATH(strbindvar_229902.con_TYC)})]))#0, 
*          import_entry_sumarg_INT > _201172 : 
**            KIND(2) = ({CON_PATH(strbindvar_229902.label_TYC) *
**                        CON_PATH(strbindvar_229902.var_TYC) *
**                        CON_PATH(strbindvar_229902.kind_TYC)},
**                       {CON_PATH(strbindvar_229902.label_TYC) *
**                        CON_PATH(strbindvar_229902.var_TYC) *
**                        CON_PATH(strbindvar_229902.niltrace_TYC) *
**                        CON_PATH(strbindvar_229902.con_TYC)}), 
*          import_entry_sum_INT > _201173 : 
**            TYPE = SUM[
**                      (ImportType, ImportValue);
**                      0;
**                      CON_PATH(strbindvar_229902.import_entry_sumarg_INT)], 
*          +O+Dimport_entry_INT > _201174 : 
**            SIGS_SELF(strbindvar_229902.+O+Dimport_entry_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [import_entry_INT > _201175 : 
***                             TYPE == CON_PATH(strbindvar_229902.import_entry_TYC), 
**                           expose_INT > _201176 : 
***                             (CON_PATH(strbindvar_229902.import_entry_TYC) =>
***                                CON_PATH(strbindvar_229902.import_entry_sum_INT)) == 
***       +1   /TOTALNONRECUR\_201177
***       +1         (_201178 : CON_PATH(strbindvar_229902.import_entry_TYC))
***       +1         : CON_PATH(strbindvar_229902.import_entry_sum_INT) =
***       +1      UNROLL(CON_PATH(strbindvar_229902.import_entry_TYC),
***       +2   CON_PATH(strbindvar_229902.import_entry_sum_INT),_201178), 
**                           ImportType > _201179 : 
***                             ({CON_PATH(strbindvar_229902.label_TYC) *
***                               CON_PATH(strbindvar_229902.var_TYC) *
***                               CON_PATH(strbindvar_229902.kind_TYC)} =>
***                                CON_PATH(strbindvar_229902.import_entry_TYC)) == 
***       +1   /TOTALNONRECUR\_201180
***       +1         (_201181 : {CON_PATH(strbindvar_229902.label_TYC) *
***       +1                     CON_PATH(strbindvar_229902.var_TYC) *
***       +1                     CON_PATH(strbindvar_229902.kind_TYC)})
***       +1         : CON_PATH(strbindvar_229902.import_entry_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.import_entry_TYC),
***       +2   INJ(0, CON_PATH(strbindvar_229902.import_entry_sum_INT),_201181)), 
**                           ImportValue > _201182 : 
***                             ({CON_PATH(strbindvar_229902.label_TYC) *
***                               CON_PATH(strbindvar_229902.var_TYC) *
***                               CON_PATH(strbindvar_229902.niltrace_TYC) *
***                               CON_PATH(strbindvar_229902.con_TYC)} =>
***                                CON_PATH(strbindvar_229902.import_entry_TYC)) == 
***       +1   /TOTALNONRECUR\_201183
***       +1         (_201184 : {CON_PATH(strbindvar_229902.label_TYC) *
***       +1                     CON_PATH(strbindvar_229902.var_TYC) *
***       +1                     CON_PATH(strbindvar_229902.niltrace_TYC) *
***       +1                     CON_PATH(strbindvar_229902.con_TYC)})
***       +1         : CON_PATH(strbindvar_229902.import_entry_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.import_entry_TYC),
***       +2   INJ(1, CON_PATH(strbindvar_229902.import_entry_sum_INT),_201184))]
**               ), 
*          export_entry_TYC > _201185 : 
**            TYPE = CON_MU(/-\(_201186)(SUM[
**                                          (ExportType, ExportValue);
**                                          0;
**                                          ({CON_PATH(strbindvar_229902.label_TYC) *
**                                            CON_PATH(strbindvar_229902.var_TYC)},
**                                           {CON_PATH(strbindvar_229902.label_TYC) *
**                                            CON_PATH(strbindvar_229902.var_TYC)})]))#0, 
*          export_entry_sumarg_INT > _201187 : 
**            KIND(2) = ({CON_PATH(strbindvar_229902.label_TYC) *
**                        CON_PATH(strbindvar_229902.var_TYC)},
**                       {CON_PATH(strbindvar_229902.label_TYC) *
**                        CON_PATH(strbindvar_229902.var_TYC)}), 
*          export_entry_sum_INT > _201188 : 
**            TYPE = SUM[
**                      (ExportType, ExportValue);
**                      0;
**                      CON_PATH(strbindvar_229902.export_entry_sumarg_INT)], 
*          +Eexport_entry_INT > _201189 : 
**            ({CON_PATH(strbindvar_229902.export_entry_TYC) *
**              CON_PATH(strbindvar_229902.export_entry_TYC)} ->
**               CON_MU(/-\(_200778)(SUM[ (false, true); 2; ()]))#0), 
*          +O+Dexport_entry_INT > _201190 : 
**            SIGS_SELF(strbindvar_229902.+O+Dexport_entry_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [export_entry_INT > _201191 : 
***                             TYPE == CON_PATH(strbindvar_229902.export_entry_TYC), 
**                           expose_INT > _201192 : 
***                             (CON_PATH(strbindvar_229902.export_entry_TYC) =>
***                                CON_PATH(strbindvar_229902.export_entry_sum_INT)) == 
***       +1   /TOTALNONRECUR\_201193
***       +1         (_201194 : CON_PATH(strbindvar_229902.export_entry_TYC))
***       +1         : CON_PATH(strbindvar_229902.export_entry_sum_INT) =
***       +1      UNROLL(CON_PATH(strbindvar_229902.export_entry_TYC),
***       +2   CON_PATH(strbindvar_229902.export_entry_sum_INT),_201194), 
**                           ExportType > _201195 : 
***                             ({CON_PATH(strbindvar_229902.label_TYC) *
***                               CON_PATH(strbindvar_229902.var_TYC)} =>
***                                CON_PATH(strbindvar_229902.export_entry_TYC)) == 
***       +1   /TOTALNONRECUR\_201196
***       +1         (_201197 : {CON_PATH(strbindvar_229902.label_TYC) *
***       +1                     CON_PATH(strbindvar_229902.var_TYC)})
***       +1         : CON_PATH(strbindvar_229902.export_entry_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.export_entry_TYC),
***       +2   INJ(0, CON_PATH(strbindvar_229902.export_entry_sum_INT),_201197)), 
**                           ExportValue > _201198 : 
***                             ({CON_PATH(strbindvar_229902.label_TYC) *
***                               CON_PATH(strbindvar_229902.var_TYC)} =>
***                                CON_PATH(strbindvar_229902.export_entry_TYC)) == 
***       +1   /TOTALNONRECUR\_201199
***       +1         (_201200 : {CON_PATH(strbindvar_229902.label_TYC) *
***       +1                     CON_PATH(strbindvar_229902.var_TYC)})
***       +1         : CON_PATH(strbindvar_229902.export_entry_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.export_entry_TYC),
***       +2   INJ(1, CON_PATH(strbindvar_229902.export_entry_sum_INT),_201200))]
**               ), 
*          module_TYC > _201201 : 
**            TYPE = CON_MU(/-\(_201202)(SUM[
**                                          (MODULE);
**                                          0;
**                                          {imports_LAB = CON_APP(_742;
**                                                            
**        +1   CON_PATH(strbindvar_229902.import_entry_TYC)),
**                                           exports_LAB = CON_APP(_742;
**                                                            
**        +1   CON_PATH(strbindvar_229902.export_entry_TYC)),
**                                           bnds_LAB = CON_APP(_742;
**                                                         CON_PATH(
**        +1   strbindvar_229902.bnd_TYC))}]))#0, 
*          module_sumarg_INT > _201203 : 
**            TYPE = {imports_LAB = CON_APP(_742;
**                                     CON_PATH(strbindvar_229902.import_entry_TYC)),
**                    exports_LAB = CON_APP(_742;
**                                     CON_PATH(strbindvar_229902.export_entry_TYC)),
**                    bnds_LAB = CON_APP(_742; CON_PATH(strbindvar_229902.bnd_TYC))}, 
*          module_sum_INT > _201204 : 
**            TYPE = SUM[ (MODULE); 0; CON_PATH(strbindvar_229902.module_sumarg_INT)], 
*          +O+Dmodule_INT > _201205 : 
**            SIGS_SELF(strbindvar_229902.+O+Dmodule_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [module_INT > _201206 : 
***                             TYPE == CON_PATH(strbindvar_229902.module_TYC), 
**                           expose_INT > _201207 : 
***                             (CON_PATH(strbindvar_229902.module_TYC) =>
***                                CON_PATH(strbindvar_229902.module_sum_INT)) == 
***       +1   /TOTALNONRECUR\_201208
***       +1         (_201209 : CON_PATH(strbindvar_229902.module_TYC))
***       +1         : CON_PATH(strbindvar_229902.module_sum_INT) =
***       +1      UNROLL(CON_PATH(strbindvar_229902.module_TYC),CON_PATH(
***       +2   strbindvar_229902.module_sum_INT),_201209), 
**                           MODULE > _201210 : 
***                             ({imports_LAB = CON_APP(_742;
***                                                CON_PATH(
***       +1   strbindvar_229902.import_entry_TYC)),
***                               exports_LAB = CON_APP(_742;
***                                                CON_PATH(
***       +1   strbindvar_229902.export_entry_TYC)),
***                               bnds_LAB = CON_APP(_742;
***                                             CON_PATH(strbindvar_229902.bnd_TYC))} =>
***                                CON_PATH(strbindvar_229902.module_TYC)) == /TOTALNONRECUR\_201211
***       +1                       (_201212 : {imports_LAB = CON_APP(_742;
***       +1                                                    CON_PATH(
***       +1   strbindvar_229902.import_entry_TYC)),
***       +1                                   exports_LAB = CON_APP(_742;
***       +1                                                    CON_PATH(
***       +1   strbindvar_229902.export_entry_TYC)),
***       +1                                   bnds_LAB = CON_APP(_742;
***       +1                                                 CON_PATH(
***       +1   strbindvar_229902.bnd_TYC))})
***       +1                       : CON_PATH(strbindvar_229902.module_TYC) =
***       +1                    ROLL(CON_PATH(strbindvar_229902.module_TYC),
***       +1   INJ(0, CON_PATH(strbindvar_229902.module_sum_INT),_201212))]
**               )]
signat' =           [var_TYC > _237605 : TYPE = CON_PATH(_237606.var_TYC), 
*          label_TYC > _237607 : TYPE = CON_PATH(_237606.label_TYC), 
*          w32_TYC > _237608 : TYPE = CON_PATH(_237609.word_TYC), 
*          prim_TYC > _237610 : TYPE = CON_PATH(_237611.prim_TYC), 
*          sequence_TYC > _237612 : 
**            KIND(2 -> TYPE) = /-\(_237613, _237614)CON_APP(
**        +1   CON_PATH(_237615.sequence_TYC);
**                                                      _237613, _237614), 
*          flattenThreshold > _237616 : REF(INT32), 
*          annotation_TYC > _237617 : KIND(1 -> TYPE) = CON_PATH(_237618.annotation_TYC), 
*          annotation_sumarg_INT > _237619 : 
**            KIND(2) = CON_PATH(_237618.annotation_sumarg_INT), 
*          annotation_sum_INT > _237620 : 
**            KIND(1 -> TYPE) = CON_PATH(_237618.annotation_sum_INT), 
*          +Eannotation_INT > _237621 : 
**             $POLY$ SIGS_SELF(_237622.+Eannotation_INT, 
**                       UNSELF_SIG = NONE
**                       SELF_SIG = SIGF(_237623, ['a_TYV > _237624 : TYPE, 
**                                                 +E'a_INT > _237625 : 
***                                                   ({_237624 *
***                                                     _237624} ->
***                                                      CON_MU(/-\(_237626)(SUM[
***                                                                             (false,
***                                                                              true);
***                                                                             2;
***                                                                             ()]))#0)] =>
**                                          [it_INT > _237627 : 
***                                             ({CON_APP(CON_PATH(
***       +1   _237618.hiddenThinModule_INT. annotation_TYC);
***                                                  CON_PATH(_237623.'a_TYV)) *
***                                               CON_APP(CON_PATH(
***       +1   _237618.hiddenThinModule_INT. annotation_TYC);
***                                                  CON_PATH(_237623.'a_TYV))} ->
***                                                CON_MU(/-\(_237628)(SUM[
***                                                                       (false, true);
***                                                                       2;
***                                                                       ()]))#0)])
**                       ), 
*          +O+Dannotation_INT > _237629 : 
**            SIGS_SELF(_237603.+O+Dannotation_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [annotation_INT > _237630 : 
***                             KIND(1 -> TYPE) == CON_PATH(_237618.hiddenThinModule_INT.
***                                                                 annotation_TYC), 
**                           expose_INT > _237631 : 
***                              $POLY$ SIGS_SELF(_237622.+O+Dannotation_INT. expose_INT, 
***                                        UNSELF_SIG = NONE
***                                        SELF_SIG = SIGF(_237623, ['a_TYV > _237632 : 
****                                                                    TYPE] =>
***                                                           
***       +1   [it_INT > _237633 : 
****      +1       (CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_TYC);
****      +1           CON_PATH(_237623.'a_TYV)) =>
****      +1          CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_sum_INT);
****      +1             CON_PATH(_237623.'a_TYV))) == 
****      +2   /TOTALNONRECUR\_237634
****      +2         (_237635 : CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_TYC);
****      +2                       CON_PATH(_237623.'a_TYV)))
****      +2         : CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_sum_INT);
****      +2              CON_PATH(_237623.'a_TYV)) =
****      +2      UNROLL(CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_TYC);
****      +2                CON_PATH(_237623.'a_TYV)),
****      +3   CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_sum_INT);
****      +3      CON_PATH(_237623.'a_TYV)),_237635)])
***                                        ), 
**                           SUBST_RESULT > _237636 : 
***                              $POLY$ SIGS_SELF(_237622.+O+Dannotation_INT. SUBST_RESULT, 
***                                        UNSELF_SIG = NONE
***                                        SELF_SIG = SIGF(_237623, ['a_TYV > _237632 : 
****                                                                    TYPE] =>
***                                                           
***       +1   [it_INT > _237637 : 
****      +1       CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_TYC);
****      +1          CON_PATH(_237623.'a_TYV)) == 
****      +2   ROLL(CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_TYC);
****      +2           CON_PATH(_237623.'a_TYV)),
****      +3   INJ(0, CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_sum_INT);
****      +3             CON_PATH(_237623.'a_TYV))))])
***                                        ), 
**                           FREE_VARS > _237638 : 
***                              $POLY$ SIGS_SELF(_237622.+O+Dannotation_INT. FREE_VARS, 
***                                        UNSELF_SIG = NONE
***                                        SELF_SIG = SIGF(_237623, ['a_TYV > _237632 : 
****                                                                    TYPE] =>
***                                                           
***       +1   [it_INT > _237639 : 
****      +1       ({con_vars_LAB = REF(CON_PATH(_237618.hiddenThinModule_INT.
****      +1                                             VarSet_STR.
****      +1                                             set_TYC)),
****      +1         exp_vars_LAB = REF(CON_PATH(_237618.hiddenThinModule_INT.
****      +1                                             VarSet_STR.
****      +1                                             set_TYC))} =>
****      +1          CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_TYC);
****      +1             CON_PATH(_237623.'a_TYV))) == 
****      +2   /TOTALNONRECUR\_237640
****      +2         (_237641 : {con_vars_LAB = REF(CON_PATH(_237618.hiddenThinModule_INT.
****      +2                                                         VarSet_STR.
****      +2                                                         set_TYC)),
****      +2                     exp_vars_LAB = REF(CON_PATH(_237618.hiddenThinModule_INT.
****      +2                                                         VarSet_STR.
****      +2                                                         set_TYC))})
****      +2         : CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_TYC);
****      +2              CON_PATH(_237623.'a_TYV)) =
****      +2      ROLL(CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_TYC);
****      +2              CON_PATH(_237623.'a_TYV)),
****      +3   INJ(1, CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_sum_INT);
****      +3             CON_PATH(_237623.'a_TYV))
****      +4   ,_237641))])
***                                        ), 
**                           TYPECHECKED > _237642 : 
***                              $POLY$ SIGS_SELF(_237622.+O+Dannotation_INT. TYPECHECKED, 
***                                        UNSELF_SIG = NONE
***                                        SELF_SIG = SIGF(_237623, ['a_TYV > _237632 : 
****                                                                    TYPE] =>
***                                                           
***       +1   [it_INT > _237643 : 
****      +1       (CON_PATH(_237623.'a_TYV) =>
****      +1          CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_TYC);
****      +1             CON_PATH(_237623.'a_TYV))) == 
****      +2   /TOTALNONRECUR\_237644
****      +2         (_237645 : CON_PATH(_237623.'a_TYV))
****      +2         : CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_TYC);
****      +2              CON_PATH(_237623.'a_TYV)) =
****      +2      ROLL(CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_TYC);
****      +2              CON_PATH(_237623.'a_TYV)),
****      +3   INJ(2, CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_sum_INT);
****      +3             CON_PATH(_237623.'a_TYV))
****      +4   ,_237645))])
***                                        )]
**               ), 
*          openness_TYC > _237646 : 
**            TYPE = CON_MU(/-\(_237647)(SUM[ (Closure, Code, Open); 3; ()]))#0, 
*          openness_sumarg_INT > _237648 : KIND(0) = (), 
*          openness_sum_INT > _237649 : 
**            TYPE = SUM[ (Closure, Code, Open); 3; CON_PATH(_237603.openness_sumarg_INT)], 
*          +Eopenness_INT > _237650 : 
**            ({CON_PATH(_237603.openness_TYC) *
**              CON_PATH(_237603.openness_TYC)} ->
**               CON_MU(/-\(_237651)(SUM[ (false, true); 2; ()]))#0), 
*          +O+Dopenness_INT > _237652 : 
**            SIGS_SELF(_237603.+O+Dopenness_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [openness_INT > _237653 : 
***                             TYPE == CON_PATH(_237603.openness_TYC), 
**                           expose_INT > _237654 : 
***                             (CON_PATH(_237603.openness_TYC) =>
***                                CON_PATH(_237603.openness_sum_INT)) == 
***       +1   /TOTALNONRECUR\_237655
***       +1         (_237656 : CON_PATH(_237603.openness_TYC))
***       +1         : CON_PATH(_237603.openness_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.openness_TYC),CON_PATH(_237603.openness_sum_INT),_237656), 
**                           Closure > _237657 : 
***                             CON_PATH(_237603.openness_TYC) == 
***       +1   ROLL(CON_PATH(_237603.openness_TYC),INJ(0, CON_PATH(_237603.openness_sum_INT))), 
**                           Code > _237658 : 
***                             CON_PATH(_237603.openness_TYC) == 
***       +1   ROLL(CON_PATH(_237603.openness_TYC),INJ(1, CON_PATH(_237603.openness_sum_INT))), 
**                           Open > _237659 : 
***                             CON_PATH(_237603.openness_TYC) == 
***       +1   ROLL(CON_PATH(_237603.openness_TYC),INJ(2, CON_PATH(_237603.openness_sum_INT)))]
**               ), 
*          effect_TYC > _237660 : 
**            TYPE = CON_MU(/-\(_237661)(SUM[ (Partial, Total); 2; ()]))#0, 
*          effect_sumarg_INT > _237662 : KIND(0) = (), 
*          effect_sum_INT > _237663 : 
**            TYPE = SUM[ (Partial, Total); 2; CON_PATH(_237603.effect_sumarg_INT)], 
*          +Eeffect_INT > _237664 : 
**            ({CON_PATH(_237603.effect_TYC) *
**              CON_PATH(_237603.effect_TYC)} ->
**               CON_MU(/-\(_237651)(SUM[ (false, true); 2; ()]))#0), 
*          +O+Deffect_INT > _237665 : 
**            SIGS_SELF(_237603.+O+Deffect_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [effect_INT > _237666 : TYPE == CON_PATH(_237603.effect_TYC), 
**                           expose_INT > _237667 : 
***                             (CON_PATH(_237603.effect_TYC) =>
***                                CON_PATH(_237603.effect_sum_INT)) == 
***       +1   /TOTALNONRECUR\_237668
***       +1         (_237669 : CON_PATH(_237603.effect_TYC))
***       +1         : CON_PATH(_237603.effect_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.effect_TYC),CON_PATH(_237603.effect_sum_INT),_237669), 
**                           Partial > _237670 : 
***                             CON_PATH(_237603.effect_TYC) == 
***       +1   ROLL(CON_PATH(_237603.effect_TYC),INJ(0, CON_PATH(_237603.effect_sum_INT))), 
**                           Total > _237671 : 
***                             CON_PATH(_237603.effect_TYC) == 
***       +1   ROLL(CON_PATH(_237603.effect_TYC),INJ(1, CON_PATH(_237603.effect_sum_INT)))]
**               ), 
*          recursive_TYC > _237672 : 
**            TYPE = CON_MU(/-\(_237673)(SUM[ (Arbitrary, Leaf, NonRecursive); 3; ()]))#0, 
*          recursive_sumarg_INT > _237674 : KIND(0) = (), 
*          recursive_sum_INT > _237675 : 
**            TYPE = SUM[
**                      (Arbitrary, Leaf, NonRecursive);
**                      3;
**                      CON_PATH(_237603.recursive_sumarg_INT)], 
*          +Erecursive_INT > _237676 : 
**            ({CON_PATH(_237603.recursive_TYC) *
**              CON_PATH(_237603.recursive_TYC)} ->
**               CON_MU(/-\(_237651)(SUM[ (false, true); 2; ()]))#0), 
*          +O+Drecursive_INT > _237677 : 
**            SIGS_SELF(_237603.+O+Drecursive_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [recursive_INT > _237678 : 
***                             TYPE == CON_PATH(_237603.recursive_TYC), 
**                           expose_INT > _237679 : 
***                             (CON_PATH(_237603.recursive_TYC) =>
***                                CON_PATH(_237603.recursive_sum_INT)) == 
***       +1   /TOTALNONRECUR\_237680
***       +1         (_237681 : CON_PATH(_237603.recursive_TYC))
***       +1         : CON_PATH(_237603.recursive_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.recursive_TYC),CON_PATH(_237603.recursive_sum_INT),_237681), 
**                           Arbitrary > _237682 : 
***                             CON_PATH(_237603.recursive_TYC) == 
***       +1   ROLL(CON_PATH(_237603.recursive_TYC),INJ(0, CON_PATH(_237603.recursive_sum_INT))), 
**                           Leaf > _237683 : 
***                             CON_PATH(_237603.recursive_TYC) == 
***       +1   ROLL(CON_PATH(_237603.recursive_TYC),INJ(1, CON_PATH(_237603.recursive_sum_INT))), 
**                           NonRecursive > _237684 : 
***                             CON_PATH(_237603.recursive_TYC) == 
***       +1   ROLL(CON_PATH(_237603.recursive_TYC),INJ(2, CON_PATH(_237603.recursive_sum_INT)))]
**               ), 
*          niltrace_TYC > _237685 : 
**            TYPE = CON_MU(/-\(_237686)(SUM[
**                                          (TraceUnknown, TraceCompute, TraceKnown);
**                                          1;
**                                          (CON_PATH(_237603.var_TYC),
**                                           CON_PATH(_237687.traceinfo_TYC))]))#0, 
*          niltrace_sumarg_INT > _237688 : 
**            KIND(2) = (CON_PATH(_237603.var_TYC), CON_PATH(_237687.traceinfo_TYC)), 
*          niltrace_sum_INT > _237689 : 
**            TYPE = SUM[
**                      (TraceUnknown, TraceCompute, TraceKnown);
**                      1;
**                      CON_PATH(_237603.niltrace_sumarg_INT)], 
*          +Eniltrace_INT > _237690 : 
**            ({CON_PATH(_237603.niltrace_TYC) *
**              CON_PATH(_237603.niltrace_TYC)} ->
**               CON_MU(/-\(_237651)(SUM[ (false, true); 2; ()]))#0), 
*          +O+Dniltrace_INT > _237691 : 
**            SIGS_SELF(_237603.+O+Dniltrace_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [niltrace_INT > _237692 : 
***                             TYPE == CON_PATH(_237603.niltrace_TYC), 
**                           expose_INT > _237693 : 
***                             (CON_PATH(_237603.niltrace_TYC) =>
***                                CON_PATH(_237603.niltrace_sum_INT)) == 
***       +1   /TOTALNONRECUR\_237694
***       +1         (_237695 : CON_PATH(_237603.niltrace_TYC))
***       +1         : CON_PATH(_237603.niltrace_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.niltrace_TYC),CON_PATH(_237603.niltrace_sum_INT),_237695), 
**                           TraceUnknown > _237696 : 
***                             CON_PATH(_237603.niltrace_TYC) == 
***       +1   ROLL(CON_PATH(_237603.niltrace_TYC),INJ(0, CON_PATH(_237603.niltrace_sum_INT))), 
**                           TraceCompute > _237697 : 
***                             (CON_PATH(_237603.var_TYC) =>
***                                CON_PATH(_237603.niltrace_TYC)) == 
***       +1   /TOTALNONRECUR\_237698
***       +1         (_237699 : CON_PATH(_237603.var_TYC))
***       +1         : CON_PATH(_237603.niltrace_TYC) =
***       +1      ROLL(CON_PATH(_237603.niltrace_TYC),INJ(1, CON_PATH(_237603.niltrace_sum_INT),_237699)), 
**                           TraceKnown > _237700 : 
***                             (CON_PATH(_237687.traceinfo_TYC) =>
***                                CON_PATH(_237603.niltrace_TYC)) == 
***       +1   /TOTALNONRECUR\_237701
***       +1         (_237702 : CON_PATH(_237687.traceinfo_TYC))
***       +1         : CON_PATH(_237603.niltrace_TYC) =
***       +1      ROLL(CON_PATH(_237603.niltrace_TYC),INJ(2, CON_PATH(_237603.niltrace_sum_INT),_237702))]
**               ), 
*          letsort_TYC > _237703 : 
**            TYPE = CON_MU(/-\(_237704)(SUM[ (Parallel, Sequential); 2; ()]))#0, 
*          letsort_sumarg_INT > _237705 : KIND(0) = (), 
*          letsort_sum_INT > _237706 : 
**            TYPE = SUM[ (Parallel, Sequential); 2; CON_PATH(_237603.letsort_sumarg_INT)], 
*          +Eletsort_INT > _237707 : 
**            ({CON_PATH(_237603.letsort_TYC) *
**              CON_PATH(_237603.letsort_TYC)} ->
**               CON_MU(/-\(_237651)(SUM[ (false, true); 2; ()]))#0), 
*          +O+Dletsort_INT > _237708 : 
**            SIGS_SELF(_237603.+O+Dletsort_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [letsort_INT > _237709 : TYPE == CON_PATH(_237603.letsort_TYC), 
**                           expose_INT > _237710 : 
***                             (CON_PATH(_237603.letsort_TYC) =>
***                                CON_PATH(_237603.letsort_sum_INT)) == 
***       +1   /TOTALNONRECUR\_237711
***       +1         (_237712 : CON_PATH(_237603.letsort_TYC))
***       +1         : CON_PATH(_237603.letsort_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.letsort_TYC),CON_PATH(_237603.letsort_sum_INT),_237712), 
**                           Parallel > _237713 : 
***                             CON_PATH(_237603.letsort_TYC) == 
***       +1   ROLL(CON_PATH(_237603.letsort_TYC),INJ(0, CON_PATH(_237603.letsort_sum_INT))), 
**                           Sequential > _237714 : 
***                             CON_PATH(_237603.letsort_TYC) == 
***       +1   ROLL(CON_PATH(_237603.letsort_TYC),INJ(1, CON_PATH(_237603.letsort_sum_INT)))]
**               ), 
*          phase_TYC > _237715 : 
**            TYPE = CON_MU(/-\(_237716)(SUM[ (Compiletime, Runtime); 2; ()]))#0, 
*          phase_sumarg_INT > _237717 : KIND(0) = (), 
*          phase_sum_INT > _237718 : 
**            TYPE = SUM[ (Compiletime, Runtime); 2; CON_PATH(_237603.phase_sumarg_INT)], 
*          +Ephase_INT > _237719 : 
**            ({CON_PATH(_237603.phase_TYC) *
**              CON_PATH(_237603.phase_TYC)} ->
**               CON_MU(/-\(_237651)(SUM[ (false, true); 2; ()]))#0), 
*          +O+Dphase_INT > _237720 : 
**            SIGS_SELF(_237603.+O+Dphase_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [phase_INT > _237721 : TYPE == CON_PATH(_237603.phase_TYC), 
**                           expose_INT > _237722 : 
***                             (CON_PATH(_237603.phase_TYC) =>
***                                CON_PATH(_237603.phase_sum_INT)) == 
***       +1   /TOTALNONRECUR\_237723
***       +1         (_237724 : CON_PATH(_237603.phase_TYC))
***       +1         : CON_PATH(_237603.phase_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.phase_TYC),CON_PATH(_237603.phase_sum_INT),_237724), 
**                           Compiletime > _237725 : 
***                             CON_PATH(_237603.phase_TYC) == 
***       +1   ROLL(CON_PATH(_237603.phase_TYC),INJ(0, CON_PATH(_237603.phase_sum_INT))), 
**                           Runtime > _237726 : 
***                             CON_PATH(_237603.phase_TYC) == 
***       +1   ROLL(CON_PATH(_237603.phase_TYC),INJ(1, CON_PATH(_237603.phase_sum_INT)))]
**               ), 
*          primcon_TYC > _237727 : 
**            TYPE = CON_MU(/-\(_237728)(SUM[
**                                          (Array_c,
**                                           Exn_c,
**                                           Exntag_c,
**                                           Loc_c,
**                                           Vector_c,
**                                           BoxFloat_c,
**                                           Float_c,
**                                           Int_c,
**                                           Record_c,
**                                           Sum_c,
**                                           Vararg_c);
**                                          5;
**                                          (CON_PATH(_237611.floatsize_TYC),
**                                           CON_PATH(_237611.floatsize_TYC),
**                                           CON_PATH(_237611.intsize_TYC),
**                                           {CON_APP(_237729;
**                                               CON_PATH(_237603.label_TYC)) *
**                                            CON_APP(_237730;
**                                               CON_APP(_237729;
**                                                  CON_PATH(_237603.var_TYC)))},
**                                           {totalcount_LAB = CON_PATH(_237603.w32_TYC),
**                                            tagcount_LAB = CON_PATH(_237603.w32_TYC),
**                                            known_LAB = CON_APP(_237730;
**                                                           CON_PATH(_237603.w32_TYC))},
**                                           {CON_PATH(_237603.openness_TYC) *
**                                            CON_PATH(_237603.effect_TYC)})]))#0, 
*          primcon_sumarg_INT > _237731 : 
**            KIND(6) = (CON_PATH(_237611.floatsize_TYC),
**                       CON_PATH(_237611.floatsize_TYC),
**                       CON_PATH(_237611.intsize_TYC),
**                       {CON_APP(_237729; CON_PATH(_237603.label_TYC)) *
**                        CON_APP(_237730; CON_APP(_237729; CON_PATH(_237603.var_TYC)))},
**                       {totalcount_LAB = CON_PATH(_237603.w32_TYC),
**                        tagcount_LAB = CON_PATH(_237603.w32_TYC),
**                        known_LAB = CON_APP(_237730; CON_PATH(_237603.w32_TYC))},
**                       {CON_PATH(_237603.openness_TYC) *
**                        CON_PATH(_237603.effect_TYC)}), 
*          primcon_sum_INT > _237732 : 
**            TYPE = SUM[
**                      (Array_c,
**                       Exn_c,
**                       Exntag_c,
**                       Loc_c,
**                       Vector_c,
**                       BoxFloat_c,
**                       Float_c,
**                       Int_c,
**                       Record_c,
**                       Sum_c,
**                       Vararg_c);
**                      5;
**                      CON_PATH(_237603.primcon_sumarg_INT)], 
*          +Eprimcon_INT > _237733 : 
**            ({CON_PATH(_237603.primcon_TYC) *
**              CON_PATH(_237603.primcon_TYC)} ->
**               CON_MU(/-\(_237651)(SUM[ (false, true); 2; ()]))#0), 
*          +O+Dprimcon_INT > _237734 : 
**            SIGS_SELF(_237603.+O+Dprimcon_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [primcon_INT > _237735 : TYPE == CON_PATH(_237603.primcon_TYC), 
**                           expose_INT > _237736 : 
***                             (CON_PATH(_237603.primcon_TYC) =>
***                                CON_PATH(_237603.primcon_sum_INT)) == 
***       +1   /TOTALNONRECUR\_237737
***       +1         (_237738 : CON_PATH(_237603.primcon_TYC))
***       +1         : CON_PATH(_237603.primcon_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.primcon_TYC),CON_PATH(_237603.primcon_sum_INT),_237738), 
**                           Array_c > _237739 : 
***                             CON_PATH(_237603.primcon_TYC) == 
***       +1   ROLL(CON_PATH(_237603.primcon_TYC),INJ(0, CON_PATH(_237603.primcon_sum_INT))), 
**                           Exn_c > _237740 : 
***                             CON_PATH(_237603.primcon_TYC) == 
***       +1   ROLL(CON_PATH(_237603.primcon_TYC),INJ(1, CON_PATH(_237603.primcon_sum_INT))), 
**                           Exntag_c > _237741 : 
***                             CON_PATH(_237603.primcon_TYC) == 
***       +1   ROLL(CON_PATH(_237603.primcon_TYC),INJ(2, CON_PATH(_237603.primcon_sum_INT))), 
**                           Loc_c > _237742 : 
***                             CON_PATH(_237603.primcon_TYC) == 
***       +1   ROLL(CON_PATH(_237603.primcon_TYC),INJ(3, CON_PATH(_237603.primcon_sum_INT))), 
**                           Vector_c > _237743 : 
***                             CON_PATH(_237603.primcon_TYC) == 
***       +1   ROLL(CON_PATH(_237603.primcon_TYC),INJ(4, CON_PATH(_237603.primcon_sum_INT))), 
**                           BoxFloat_c > _237744 : 
***                             (CON_PATH(_237611.floatsize_TYC) =>
***                                CON_PATH(_237603.primcon_TYC)) == 
***       +1   /TOTALNONRECUR\_237745
***       +1         (_237746 : CON_PATH(_237611.floatsize_TYC))
***       +1         : CON_PATH(_237603.primcon_TYC) =
***       +1      ROLL(CON_PATH(_237603.primcon_TYC),INJ(5, CON_PATH(_237603.primcon_sum_INT)
***       +2   ,_237746)), 
**                           Float_c > _237747 : 
***                             (CON_PATH(_237611.floatsize_TYC) =>
***                                CON_PATH(_237603.primcon_TYC)) == 
***       +1   /TOTALNONRECUR\_237748
***       +1         (_237749 : CON_PATH(_237611.floatsize_TYC))
***       +1         : CON_PATH(_237603.primcon_TYC) =
***       +1      ROLL(CON_PATH(_237603.primcon_TYC),INJ(6, CON_PATH(_237603.primcon_sum_INT)
***       +2   ,_237749)), 
**                           Int_c > _237750 : 
***                             (CON_PATH(_237611.intsize_TYC) =>
***                                CON_PATH(_237603.primcon_TYC)) == 
***       +1   /TOTALNONRECUR\_237751
***       +1         (_237752 : CON_PATH(_237611.intsize_TYC))
***       +1         : CON_PATH(_237603.primcon_TYC) =
***       +1      ROLL(CON_PATH(_237603.primcon_TYC),INJ(7, CON_PATH(_237603.primcon_sum_INT)
***       +2   ,_237752)), 
**                           Record_c > _237753 : 
***                             ({CON_APP(_237729; CON_PATH(_237603.label_TYC)) *
***                               CON_APP(_237730;
***                                  CON_APP(_237729; CON_PATH(_237603.var_TYC)))} =>
***                                CON_PATH(_237603.primcon_TYC)) == 
***       +1   /TOTALNONRECUR\_237754
***       +1         (_237755 : {CON_APP(_237729; CON_PATH(_237603.label_TYC)) *
***       +1                     CON_APP(_237730; CON_APP(_237729; CON_PATH(_237603.var_TYC)))})
***       +1         : CON_PATH(_237603.primcon_TYC) =
***       +1      ROLL(CON_PATH(_237603.primcon_TYC),INJ(8, CON_PATH(_237603.primcon_sum_INT)
***       +2   ,_237755)), 
**                           Sum_c > _237756 : 
***                             ({totalcount_LAB = CON_PATH(_237603.w32_TYC),
***                               tagcount_LAB = CON_PATH(_237603.w32_TYC),
***                               known_LAB = CON_APP(_237730; CON_PATH(_237603.w32_TYC))} =>
***                                CON_PATH(_237603.primcon_TYC)) == /TOTALNONRECUR\_237757
***       +1                (_237758 : {totalcount_LAB = CON_PATH(
***       +1   _237603.w32_TYC),
***       +1                            tagcount_LAB = CON_PATH(_237603.
***       +1   w32_TYC),
***       +1                            known_LAB = CON_APP(_237730;
***       +1                                           CON_PATH(_237603.
***       +1   w32_TYC))})
***       +1                : CON_PATH(_237603.primcon_TYC) =
***       +1             ROLL(CON_PATH(_237603.primcon_TYC),INJ(9, 
***       +1   CON_PATH(_237603.primcon_sum_INT),_237758)), 
**                           Vararg_c > _237759 : 
***                             ({CON_PATH(_237603.openness_TYC) *
***                               CON_PATH(_237603.effect_TYC)} =>
***                                CON_PATH(_237603.primcon_TYC)) == 
***       +1   /TOTALNONRECUR\_237760
***       +1         (_237761 : {CON_PATH(_237603.openness_TYC) *
***       +1                     CON_PATH(_237603.effect_TYC)})
***       +1         : CON_PATH(_237603.primcon_TYC) =
***       +1      ROLL(CON_PATH(_237603.primcon_TYC),INJ(10, CON_PATH(_237603.primcon_sum_INT)
***       +2   ,_237761))]
**               ), 
*          nilprim_TYC > _237762 : 
**            TYPE = CON_MU(/-\(_237763)(SUM[
**                                          (make_exntag,
**                                           peq,
**                                           roll,
**                                           unroll,
**                                           box_float,
**                                           inj_exn,
**                                           inject,
**                                           inject_known,
**                                           inject_known_record,
**                                           make_onearg,
**                                           make_vararg,
**                                           partialRecord,
**                                           project,
**                                           project_known,
**                                           project_known_record,
**                                           record,
**                                           select,
**                                           unbox_float);
**                                          4;
**                                          (CON_PATH(_237611.floatsize_TYC),
**                                           _237764,
**                                           CON_PATH(_237765.word_TYC),
**                                           CON_PATH(_237765.word_TYC),
**                                           CON_PATH(_237765.word_TYC),
**                                           {CON_PATH(_237603.openness_TYC) *
**                                            CON_PATH(_237603.effect_TYC)},
**                                           {CON_PATH(_237603.openness_TYC) *
**                                            CON_PATH(_237603.effect_TYC)},
**                                           {CON_APP(_237729;
**                                               CON_PATH(_237603.label_TYC)) *
**                                            INT32},
**                                           CON_PATH(_237765.word_TYC),
**                                           CON_PATH(_237765.word_TYC),
**                                           {CON_PATH(_237765.word_TYC) *
**                                            CON_PATH(_237603.label_TYC)},
**                                           CON_APP(_237729; CON_PATH(_237603.label_TYC)),
**                                           CON_PATH(_237603.label_TYC),
**                                           CON_PATH(_237611.floatsize_TYC))]))#0, 
*          nilprim_sumarg_INT > _237766 : 
**            KIND(14) = (CON_PATH(_237611.floatsize_TYC),
**                        _237764,
**                        CON_PATH(_237765.word_TYC),
**                        CON_PATH(_237765.word_TYC),
**                        CON_PATH(_237765.word_TYC),
**                        {CON_PATH(_237603.openness_TYC) *
**                         CON_PATH(_237603.effect_TYC)},
**                        {CON_PATH(_237603.openness_TYC) *
**                         CON_PATH(_237603.effect_TYC)},
**                        {CON_APP(_237729; CON_PATH(_237603.label_TYC)) *
**                         INT32},
**                        CON_PATH(_237765.word_TYC),
**                        CON_PATH(_237765.word_TYC),
**                        {CON_PATH(_237765.word_TYC) *
**                         CON_PATH(_237603.label_TYC)},
**                        CON_APP(_237729; CON_PATH(_237603.label_TYC)),
**                        CON_PATH(_237603.label_TYC),
**                        CON_PATH(_237611.floatsize_TYC)), 
*          nilprim_sum_INT > _237767 : 
**            TYPE = SUM[
**                      (make_exntag,
**                       peq,
**                       roll,
**                       unroll,
**                       box_float,
**                       inj_exn,
**                       inject,
**                       inject_known,
**                       inject_known_record,
**                       make_onearg,
**                       make_vararg,
**                       partialRecord,
**                       project,
**                       project_known,
**                       project_known_record,
**                       record,
**                       select,
**                       unbox_float);
**                      4;
**                      CON_PATH(_237603.nilprim_sumarg_INT)], 
*          +Enilprim_INT > _237768 : 
**            ({CON_PATH(_237603.nilprim_TYC) *
**              CON_PATH(_237603.nilprim_TYC)} ->
**               CON_MU(/-\(_237651)(SUM[ (false, true); 2; ()]))#0), 
*          +O+Dnilprim_INT > _237769 : 
**            SIGS_SELF(_237603.+O+Dnilprim_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [nilprim_INT > _237770 : TYPE == CON_PATH(_237603.nilprim_TYC), 
**                           expose_INT > _237771 : 
***                             (CON_PATH(_237603.nilprim_TYC) =>
***                                CON_PATH(_237603.nilprim_sum_INT)) == 
***       +1   /TOTALNONRECUR\_237772
***       +1         (_237773 : CON_PATH(_237603.nilprim_TYC))
***       +1         : CON_PATH(_237603.nilprim_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.nilprim_TYC),CON_PATH(_237603.nilprim_sum_INT),_237773), 
**                           make_exntag > _237774 : 
***                             CON_PATH(_237603.nilprim_TYC) == 
***       +1   ROLL(CON_PATH(_237603.nilprim_TYC),INJ(0, CON_PATH(_237603.nilprim_sum_INT))), 
**                           peq > _237775 : 
***                             CON_PATH(_237603.nilprim_TYC) == 
***       +1   ROLL(CON_PATH(_237603.nilprim_TYC),INJ(1, CON_PATH(_237603.nilprim_sum_INT))), 
**                           roll > _237776 : 
***                             CON_PATH(_237603.nilprim_TYC) == 
***       +1   ROLL(CON_PATH(_237603.nilprim_TYC),INJ(2, CON_PATH(_237603.nilprim_sum_INT))), 
**                           unroll > _237777 : 
***                             CON_PATH(_237603.nilprim_TYC) == 
***       +1   ROLL(CON_PATH(_237603.nilprim_TYC),INJ(3, CON_PATH(_237603.nilprim_sum_INT))), 
**                           box_float > _237778 : 
***                             (CON_PATH(_237611.floatsize_TYC) =>
***                                CON_PATH(_237603.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237779
***       +1         (_237780 : CON_PATH(_237611.floatsize_TYC))
***       +1         : CON_PATH(_237603.nilprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.nilprim_TYC),INJ(4, CON_PATH(_237603.nilprim_sum_INT)
***       +2   ,_237780)), 
**                           inj_exn > _237781 : 
***                             (_237764 => CON_PATH(_237603.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237782
***       +1         (_237783 : _237764)
***       +1         : CON_PATH(_237603.nilprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.nilprim_TYC),INJ(5, CON_PATH(_237603.nilprim_sum_INT)
***       +2   ,_237783)), 
**                           inject > _237784 : 
***                             (CON_PATH(_237765.word_TYC) =>
***                                CON_PATH(_237603.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237785
***       +1         (_237786 : CON_PATH(_237765.word_TYC))
***       +1         : CON_PATH(_237603.nilprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.nilprim_TYC),INJ(6, CON_PATH(_237603.nilprim_sum_INT)
***       +2   ,_237786)), 
**                           inject_known > _237787 : 
***                             (CON_PATH(_237765.word_TYC) =>
***                                CON_PATH(_237603.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237788
***       +1         (_237789 : CON_PATH(_237765.word_TYC))
***       +1         : CON_PATH(_237603.nilprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.nilprim_TYC),INJ(7, CON_PATH(_237603.nilprim_sum_INT)
***       +2   ,_237789)), 
**                           inject_known_record > _237790 : 
***                             (CON_PATH(_237765.word_TYC) =>
***                                CON_PATH(_237603.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237791
***       +1         (_237792 : CON_PATH(_237765.word_TYC))
***       +1         : CON_PATH(_237603.nilprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.nilprim_TYC),INJ(8, CON_PATH(_237603.nilprim_sum_INT)
***       +2   ,_237792)), 
**                           make_onearg > _237793 : 
***                             ({CON_PATH(_237603.openness_TYC) *
***                               CON_PATH(_237603.effect_TYC)} =>
***                                CON_PATH(_237603.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237794
***       +1         (_237795 : {CON_PATH(_237603.openness_TYC) *
***       +1                     CON_PATH(_237603.effect_TYC)})
***       +1         : CON_PATH(_237603.nilprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.nilprim_TYC),INJ(9, CON_PATH(_237603.nilprim_sum_INT)
***       +2   ,_237795)), 
**                           make_vararg > _237796 : 
***                             ({CON_PATH(_237603.openness_TYC) *
***                               CON_PATH(_237603.effect_TYC)} =>
***                                CON_PATH(_237603.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237797
***       +1         (_237798 : {CON_PATH(_237603.openness_TYC) *
***       +1                     CON_PATH(_237603.effect_TYC)})
***       +1         : CON_PATH(_237603.nilprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.nilprim_TYC),INJ(10, CON_PATH(_237603.nilprim_sum_INT)
***       +2   ,_237798)), 
**                           partialRecord > _237799 : 
***                             ({CON_APP(_237729; CON_PATH(_237603.label_TYC)) *
***                               INT32} =>
***                                CON_PATH(_237603.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237800
***       +1         (_237801 : {CON_APP(_237729; CON_PATH(_237603.label_TYC)) *
***       +1                     INT32})
***       +1         : CON_PATH(_237603.nilprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.nilprim_TYC),INJ(11, CON_PATH(_237603.nilprim_sum_INT)
***       +2   ,_237801)), 
**                           project > _237802 : 
***                             (CON_PATH(_237765.word_TYC) =>
***                                CON_PATH(_237603.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237803
***       +1         (_237804 : CON_PATH(_237765.word_TYC))
***       +1         : CON_PATH(_237603.nilprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.nilprim_TYC),INJ(12, CON_PATH(_237603.nilprim_sum_INT)
***       +2   ,_237804)), 
**                           project_known > _237805 : 
***                             (CON_PATH(_237765.word_TYC) =>
***                                CON_PATH(_237603.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237806
***       +1         (_237807 : CON_PATH(_237765.word_TYC))
***       +1         : CON_PATH(_237603.nilprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.nilprim_TYC),INJ(13, CON_PATH(_237603.nilprim_sum_INT)
***       +2   ,_237807)), 
**                           project_known_record > _237808 : 
***                             ({CON_PATH(_237765.word_TYC) *
***                               CON_PATH(_237603.label_TYC)} =>
***                                CON_PATH(_237603.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237809
***       +1         (_237810 : {CON_PATH(_237765.word_TYC) *
***       +1                     CON_PATH(_237603.label_TYC)})
***       +1         : CON_PATH(_237603.nilprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.nilprim_TYC),INJ(14, CON_PATH(_237603.nilprim_sum_INT)
***       +2   ,_237810)), 
**                           record > _237811 : 
***                             (CON_APP(_237729; CON_PATH(_237603.label_TYC)) =>
***                                CON_PATH(_237603.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237812
***       +1         (_237813 : CON_APP(_237729; CON_PATH(_237603.label_TYC)))
***       +1         : CON_PATH(_237603.nilprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.nilprim_TYC),INJ(15, CON_PATH(_237603.nilprim_sum_INT)
***       +2   ,_237813)), 
**                           select > _237814 : 
***                             (CON_PATH(_237603.label_TYC) =>
***                                CON_PATH(_237603.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237815
***       +1         (_237816 : CON_PATH(_237603.label_TYC))
***       +1         : CON_PATH(_237603.nilprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.nilprim_TYC),INJ(16, CON_PATH(_237603.nilprim_sum_INT)
***       +2   ,_237816)), 
**                           unbox_float > _237817 : 
***                             (CON_PATH(_237611.floatsize_TYC) =>
***                                CON_PATH(_237603.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237818
***       +1         (_237819 : CON_PATH(_237611.floatsize_TYC))
***       +1         : CON_PATH(_237603.nilprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.nilprim_TYC),INJ(17, CON_PATH(_237603.nilprim_sum_INT)
***       +2   ,_237819))]
**               ), 
*          allprim_TYC > _237820 : 
**            TYPE = CON_MU(/-\(_237821)(SUM[
**                                          (NilPrimOp, PrimOp);
**                                          0;
**                                          (CON_PATH(_237603.nilprim_TYC),
**                                           CON_PATH(_237603.prim_TYC))]))#0, 
*          allprim_sumarg_INT > _237822 : 
**            KIND(2) = (CON_PATH(_237603.nilprim_TYC), CON_PATH(_237603.prim_TYC)), 
*          allprim_sum_INT > _237823 : 
**            TYPE = SUM[ (NilPrimOp, PrimOp); 0; CON_PATH(_237603.allprim_sumarg_INT)], 
*          +Eallprim_INT > _237824 : 
**            ({CON_PATH(_237603.allprim_TYC) *
**              CON_PATH(_237603.allprim_TYC)} ->
**               CON_MU(/-\(_237651)(SUM[ (false, true); 2; ()]))#0), 
*          +O+Dallprim_INT > _237825 : 
**            SIGS_SELF(_237603.+O+Dallprim_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [allprim_INT > _237826 : TYPE == CON_PATH(_237603.allprim_TYC), 
**                           expose_INT > _237827 : 
***                             (CON_PATH(_237603.allprim_TYC) =>
***                                CON_PATH(_237603.allprim_sum_INT)) == 
***       +1   /TOTALNONRECUR\_237828
***       +1         (_237829 : CON_PATH(_237603.allprim_TYC))
***       +1         : CON_PATH(_237603.allprim_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.allprim_TYC),CON_PATH(_237603.allprim_sum_INT),_237829), 
**                           NilPrimOp > _237830 : 
***                             (CON_PATH(_237603.nilprim_TYC) =>
***                                CON_PATH(_237603.allprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237831
***       +1         (_237832 : CON_PATH(_237603.nilprim_TYC))
***       +1         : CON_PATH(_237603.allprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.allprim_TYC),INJ(0, CON_PATH(_237603.allprim_sum_INT)
***       +2   ,_237832)), 
**                           PrimOp > _237833 : 
***                             (CON_PATH(_237603.prim_TYC) =>
***                                CON_PATH(_237603.allprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237834
***       +1         (_237835 : CON_PATH(_237603.prim_TYC))
***       +1         : CON_PATH(_237603.allprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.allprim_TYC),INJ(1, CON_PATH(_237603.allprim_sum_INT)
***       +2   ,_237835))]
**               ), 
*          +Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT > _237836 : 
**            KIND(8) = CON_MU(/-\(_237837,
**                                 _237838,
**                                 _237839,
**                                 _237840,
**                                 _237841,
**                                 _237842,
**                                 _237843,
**                                 _237844)(SUM[
**                                             (Con_b,
**                                              Exp_b,
**                                              Fixclosure_b,
**                                              Fixcode_b,
**                                              Fixopen_b);
**                                             0;
**                                             ({CON_PATH(_237603.phase_TYC) *
**                                               _237839},
**                                              {CON_PATH(_237603.var_TYC) *
**                                               CON_PATH(_237603.niltrace_TYC) *
**                                               _237841},
**                                              {_237845 *
**                                               CON_APP(CON_PATH(_237603.sequence_TYC);
**                                                  CON_PATH(_237603.var_TYC),
**                                                  {code_LAB = CON_PATH(_237603.var_TYC),
**                                                   tipe_LAB = _237838,
**                                                   cenv_LAB = _237838,
**                                                   venv_LAB = _237841})},
**                                              CON_APP(CON_PATH(_237603.sequence_TYC);
**                                                 CON_PATH(_237603.var_TYC), _237842),
**                                              CON_APP(CON_PATH(_237603.sequence_TYC);
**                                                 CON_PATH(_237603.var_TYC), _237842))],
**                                          SUM[
**                                             (AllArrow_c,
**                                              Annotate_c,
**                                              App_c,
**                                              Closure_c,
**                                              Crecord_c,
**                                              ExternArrow_c,
**                                              Let_c,
**                                              Mu_c,
**                                              Prim_c,
**                                              Proj_c,
**                                              Typecase_c,
**                                              Typeof_c,
**                                              Var_c);
**                                             0;
**                                             ({openness_LAB = 
**        +1   CON_PATH(_237603.openness_TYC),
**                                               effect_LAB = CON_PATH(_237603.effect_TYC),
**                                               body_type_LAB = _237838,
**                                               eFormals_LAB = 
**        +1   CON_APP(_237729;
**        +1      {CON_APP(_237730; CON_PATH(_237603.var_TYC)) *
**        +1       _237838}),
**                                               fFormals_LAB = CON_PATH(_237603.w32_TYC),
**                                               tFormals_LAB = 
**        +1   CON_APP(_237729;
**        +1      {CON_PATH(_237603.var_TYC) *
**        +1       _237843}),
**                                               isDependent_LAB = _237845},
**                                              {CON_APP(CON_PATH(_237603.annotation_TYC);
**                                                  _237843) *
**                                               _237838},
**                                              {_237838 *
**                                               CON_APP(_237729; _237838)},
**                                              {_237838 *
**                                               _237838},
**                                              CON_APP(_237729;
**                                                 {CON_PATH(_237603.label_TYC) *
**                                                  _237838}),
**                                              {CON_APP(_237729; _237838) *
**                                               _237838},
**                                              {CON_PATH(_237603.letsort_TYC) *
**                                               CON_APP(_237729; _237839) *
**                                               _237838},
**                                              {_237845 *
**                                               CON_APP(CON_PATH(_237603.sequence_TYC);
**                                                  CON_PATH(_237603.var_TYC), _237838)},
**                                              {CON_PATH(_237603.primcon_TYC) *
**                                               CON_APP(_237729; _237838)},
**                                              {_237838 *
**                                               CON_PATH(_237603.label_TYC)},
**                                              {arg_LAB = _237838,
**                                               kind_LAB = _237843,
**                                               arms_LAB = 
**        +1   CON_APP(_237729;
**        +1      {CON_PATH(_237603.primcon_TYC) *
**        +1       CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
**        +1                         _237843}) *
**        +1       _237838}),
**                                               default_LAB = _237838},
**                                              _237841,
**                                              CON_PATH(_237603.var_TYC))],
**                                          SUM[
**                                             (Code_cb, Con_cb, Open_cb);
**                                             0;
**                                             ({CON_PATH(_237603.var_TYC) *
**                                               CON_APP(_237729;
**                                                  {CON_PATH(_237603.var_TYC) *
**                                                   _237843}) *
**                                               _237838},
**                                              {CON_PATH(_237603.var_TYC) *
**                                               _237838},
**                                              {CON_PATH(_237603.var_TYC) *
**                                               CON_APP(_237729;
**                                                  {CON_PATH(_237603.var_TYC) *
**                                                   _237843}) *
**                                               _237838})],
**                                          SUM[
**                                             (And_cc, Exp_cc, Not_cc, Or_cc);
**                                             0;
**                                             ({_237840 *
**                                               _237840}, _237841, _237840, {_237840 *
**                                                                             _237840})],
**                                          SUM[
**                                             (App_e,
**                                              Const_e,
**                                              ExternApp_e,
**                                              Handle_e,
**                                              Let_e,
**                                              Prim_e,
**                                              Raise_e,
**                                              Switch_e,
**                                              Var_e);
**                                             0;
**                                             ({CON_PATH(_237603.openness_TYC) *
**                                               _237841 *
**                                               CON_APP(_237729; _237838) *
**                                               CON_APP(_237729; _237841) *
**                                               CON_APP(_237729; _237841)},
**                                              CON_APP(CON_PATH(_237611.value_TYC);
**                                                 _237838, _237841),
**                                              {_237841 *
**                                               CON_APP(_237729; _237841)},
**                                              {body_LAB = _237841,
**                                               result_type_LAB = _237838,
**                                               bound_LAB = CON_PATH(_237603.var_TYC),
**                                               handler_LAB = _237841},
**                                              {CON_PATH(_237603.letsort_TYC) *
**                                               CON_APP(_237729; _237837) *
**                                               _237841},
**                                              {CON_PATH(_237603.allprim_TYC) *
**                                               CON_APP(_237729; _237838) *
**                                               CON_APP(_237729; _237841)},
**                                              {_237841 *
**                                               _237838},
**                                              _237844,
**                                              CON_PATH(_237603.var_TYC))],
**                                          SUM[
**                                             (Function);
**                                             0;
**                                             {effect_LAB = CON_PATH(_237603.effect_TYC),
**                                              body_LAB = _237841,
**                                              recursive_LAB = 
**        +1   CON_PATH(_237603.recursive_TYC),
**                                              body_type_LAB = _237838,
**                                              eFormals_LAB = 
**        +1   CON_APP(_237729;
**        +1      {CON_PATH(_237603.var_TYC) *
**        +1       CON_PATH(_237603.niltrace_TYC) *
**        +1       _237838}),
**                                              fFormals_LAB = 
**        +1   CON_APP(_237729;
**        +1      CON_PATH(_237603.var_TYC)),
**                                              tFormals_LAB = 
**        +1   CON_APP(_237729;
**        +1      {CON_PATH(_237603.var_TYC) *
**        +1       _237843}),
**                                              isDependent_LAB = _237845}],
**                                          SUM[
**                                             (Type_k,
**                                              Arrow_k,
**                                              Record_k,
**                                              SingleType_k,
**                                              Single_k);
**                                             1;
**                                             ({CON_PATH(_237603.openness_TYC) *
**                                               CON_APP(_237729;
**                                                  {CON_PATH(_237603.var_TYC) *
**                                                   _237843}) *
**                                               _237843},
**                                              CON_APP(CON_PATH(_237603.sequence_TYC);
**                                                 {CON_PATH(_237603.label_TYC) *
**                                                  CON_PATH(_237603.var_TYC)}, _237843),
**                                              _237838,
**                                              _237838)],
**                                          SUM[
**                                             (Exncase_e,
**                                              Ifthenelse_e,
**                                              Intsw_e,
**                                              Sumsw_e,
**                                              Typecase_e);
**                                             0;
**                                             ({arg_LAB = _237841,
**                                               result_type_LAB = _237838,
**                                               bound_LAB = CON_PATH(_237603.var_TYC),
**                                               arms_LAB = 
**        +1   CON_APP(_237729;
**        +1      {_237841 *
**        +1       CON_PATH(_237603.niltrace_TYC) *
**        +1       _237841}),
**                                               default_LAB = CON_APP(_237730; _237841)},
**                                              {arg_LAB = _237840,
**                                               elseArm_LAB = _237841,
**                                               result_type_LAB = _237838,
**                                               thenArm_LAB = _237841},
**                                              {arg_LAB = _237841,
**                                               size_LAB = CON_PATH(_237611.intsize_TYC),
**                                               result_type_LAB = _237838,
**                                               arms_LAB = 
**        +1   CON_APP(_237729;
**        +1      {CON_PATH(_237603.w32_TYC) *
**        +1       _237841}),
**                                               default_LAB = CON_APP(_237730; _237841)},
**                                              {arg_LAB = _237841,
**                                               result_type_LAB = _237838,
**                                               sumtype_LAB = _237838,
**                                               bound_LAB = CON_PATH(_237603.var_TYC),
**                                               arms_LAB = 
**        +1   CON_APP(_237729;
**        +1      {CON_PATH(_237603.w32_TYC) *
**        +1       CON_PATH(_237603.niltrace_TYC) *
**        +1       _237841}),
**                                               default_LAB = CON_APP(_237730; _237841)},
**                                              {arg_LAB = _237838,
**                                               result_type_LAB = _237838,
**                                               arms_LAB = 
**        +1   CON_APP(_237729;
**        +1      {CON_PATH(_237603.primcon_TYC) *
**        +1       CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
**        +1                         _237843}) *
**        +1       _237841}),
**                                               default_LAB = _237841})])), 
*          bnd_TYC > _237846 : 
**            TYPE = CON_PATH(_237603.+Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#0, 
*          con_TYC > _237847 : 
**            TYPE = CON_PATH(_237603.+Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#1, 
*          conbnd_TYC > _237848 : 
**            TYPE = CON_PATH(_237603.+Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#2, 
*          conditionCode_TYC > _237849 : 
**            TYPE = CON_PATH(_237603.+Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#3, 
*          exp_TYC > _237850 : 
**            TYPE = CON_PATH(_237603.+Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#4, 
*          function_TYC > _237851 : 
**            TYPE = CON_PATH(_237603.+Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#5, 
*          kind_TYC > _237852 : 
**            TYPE = CON_PATH(_237603.+Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#6, 
*          switch_TYC > _237853 : 
**            TYPE = CON_PATH(_237603.+Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#7, 
*          bnd_sumarg_INT > _237854 : 
**            KIND(5) = ({CON_PATH(_237603.phase_TYC) *
**                        CON_PATH(_237603.conbnd_TYC)},
**                       {CON_PATH(_237603.var_TYC) *
**                        CON_PATH(_237603.niltrace_TYC) *
**                        CON_PATH(_237603.exp_TYC)},
**                       {_237845 *
**                        CON_APP(CON_PATH(_237603.sequence_TYC);
**                           CON_PATH(_237603.var_TYC),
**                           {code_LAB = CON_PATH(_237603.var_TYC),
**                            tipe_LAB = CON_PATH(_237603.con_TYC),
**                            cenv_LAB = CON_PATH(_237603.con_TYC),
**                            venv_LAB = CON_PATH(_237603.exp_TYC)})},
**                       CON_APP(CON_PATH(_237603.sequence_TYC);
**                          CON_PATH(_237603.var_TYC), CON_PATH(_237603.function_TYC)),
**                       CON_APP(CON_PATH(_237603.sequence_TYC);
**                          CON_PATH(_237603.var_TYC), CON_PATH(_237603.function_TYC))), 
*          con_sumarg_INT > _237855 : 
**            KIND(13) = ({openness_LAB = CON_PATH(_237603.openness_TYC),
**                         effect_LAB = CON_PATH(_237603.effect_TYC),
**                         body_type_LAB = CON_PATH(_237603.con_TYC),
**                         eFormals_LAB = CON_APP(_237729;
**                                           {CON_APP(_237730; CON_PATH(_237603.var_TYC)) *
**                                            CON_PATH(_237603.con_TYC)}),
**                         fFormals_LAB = CON_PATH(_237603.w32_TYC),
**                         tFormals_LAB = CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
**                                                          CON_PATH(_237603.kind_TYC)}),
**                         isDependent_LAB = _237845},
**                        {CON_APP(CON_PATH(_237603.annotation_TYC);
**                            CON_PATH(_237603.kind_TYC)) *
**                         CON_PATH(_237603.con_TYC)},
**                        {CON_PATH(_237603.con_TYC) *
**                         CON_APP(_237729; CON_PATH(_237603.con_TYC))},
**                        {CON_PATH(_237603.con_TYC) *
**                         CON_PATH(_237603.con_TYC)},
**                        CON_APP(_237729; {CON_PATH(_237603.label_TYC) *
**                                          CON_PATH(_237603.con_TYC)}),
**                        {CON_APP(_237729; CON_PATH(_237603.con_TYC)) *
**                         CON_PATH(_237603.con_TYC)},
**                        {CON_PATH(_237603.letsort_TYC) *
**                         CON_APP(_237729; CON_PATH(_237603.conbnd_TYC)) *
**                         CON_PATH(_237603.con_TYC)},
**                        {_237845 *
**                         CON_APP(CON_PATH(_237603.sequence_TYC);
**                            CON_PATH(_237603.var_TYC), CON_PATH(_237603.con_TYC))},
**                        {CON_PATH(_237603.primcon_TYC) *
**                         CON_APP(_237729; CON_PATH(_237603.con_TYC))},
**                        {CON_PATH(_237603.con_TYC) *
**                         CON_PATH(_237603.label_TYC)},
**                        {arg_LAB = CON_PATH(_237603.con_TYC),
**                         kind_LAB = CON_PATH(_237603.kind_TYC),
**                         arms_LAB = CON_APP(_237729;
**                                       {CON_PATH(_237603.primcon_TYC) *
**                                        CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
**                                                          CON_PATH(_237603.kind_TYC)}) *
**                                        CON_PATH(_237603.con_TYC)}),
**                         default_LAB = CON_PATH(_237603.con_TYC)},
**                        CON_PATH(_237603.exp_TYC),
**                        CON_PATH(_237603.var_TYC)), 
*          conbnd_sumarg_INT > _237856 : 
**            KIND(3) = ({CON_PATH(_237603.var_TYC) *
**                        CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
**                                          CON_PATH(_237603.kind_TYC)}) *
**                        CON_PATH(_237603.con_TYC)},
**                       {CON_PATH(_237603.var_TYC) *
**                        CON_PATH(_237603.con_TYC)},
**                       {CON_PATH(_237603.var_TYC) *
**                        CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
**                                          CON_PATH(_237603.kind_TYC)}) *
**                        CON_PATH(_237603.con_TYC)}), 
*          conditionCode_sumarg_INT > _237857 : 
**            KIND(4) = ({CON_PATH(_237603.conditionCode_TYC) *
**                        CON_PATH(_237603.conditionCode_TYC)},
**                       CON_PATH(_237603.exp_TYC),
**                       CON_PATH(_237603.conditionCode_TYC),
**                       {CON_PATH(_237603.conditionCode_TYC) *
**                        CON_PATH(_237603.conditionCode_TYC)}), 
*          exp_sumarg_INT > _237858 : 
**            KIND(9) = ({CON_PATH(_237603.openness_TYC) *
**                        CON_PATH(_237603.exp_TYC) *
**                        CON_APP(_237729; CON_PATH(_237603.con_TYC)) *
**                        CON_APP(_237729; CON_PATH(_237603.exp_TYC)) *
**                        CON_APP(_237729; CON_PATH(_237603.exp_TYC))},
**                       CON_APP(CON_PATH(_237611.value_TYC);
**                          CON_PATH(_237603.con_TYC), CON_PATH(_237603.exp_TYC)),
**                       {CON_PATH(_237603.exp_TYC) *
**                        CON_APP(_237729; CON_PATH(_237603.exp_TYC))},
**                       {body_LAB = CON_PATH(_237603.exp_TYC),
**                        result_type_LAB = CON_PATH(_237603.con_TYC),
**                        bound_LAB = CON_PATH(_237603.var_TYC),
**                        handler_LAB = CON_PATH(_237603.exp_TYC)},
**                       {CON_PATH(_237603.letsort_TYC) *
**                        CON_APP(_237729; CON_PATH(_237603.bnd_TYC)) *
**                        CON_PATH(_237603.exp_TYC)},
**                       {CON_PATH(_237603.allprim_TYC) *
**                        CON_APP(_237729; CON_PATH(_237603.con_TYC)) *
**                        CON_APP(_237729; CON_PATH(_237603.exp_TYC))},
**                       {CON_PATH(_237603.exp_TYC) *
**                        CON_PATH(_237603.con_TYC)},
**                       CON_PATH(_237603.switch_TYC),
**                       CON_PATH(_237603.var_TYC)), 
*          function_sumarg_INT > _237859 : 
**            TYPE = {effect_LAB = CON_PATH(_237603.effect_TYC),
**                    body_LAB = CON_PATH(_237603.exp_TYC),
**                    recursive_LAB = CON_PATH(_237603.recursive_TYC),
**                    body_type_LAB = CON_PATH(_237603.con_TYC),
**                    eFormals_LAB = CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
**                                                     CON_PATH(_237603.niltrace_TYC) *
**                                                     CON_PATH(_237603.con_TYC)}),
**                    fFormals_LAB = CON_APP(_237729; CON_PATH(_237603.var_TYC)),
**                    tFormals_LAB = CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
**                                                     CON_PATH(_237603.kind_TYC)}),
**                    isDependent_LAB = _237845}, 
*          kind_sumarg_INT > _237860 : 
**            KIND(4) = ({CON_PATH(_237603.openness_TYC) *
**                        CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
**                                          CON_PATH(_237603.kind_TYC)}) *
**                        CON_PATH(_237603.kind_TYC)},
**                       CON_APP(CON_PATH(_237603.sequence_TYC);
**                          {CON_PATH(_237603.label_TYC) *
**                           CON_PATH(_237603.var_TYC)}, CON_PATH(_237603.kind_TYC)),
**                       CON_PATH(_237603.con_TYC),
**                       CON_PATH(_237603.con_TYC)), 
*          switch_sumarg_INT > _237861 : 
**            KIND(5) = ({arg_LAB = CON_PATH(_237603.exp_TYC),
**                        result_type_LAB = CON_PATH(_237603.con_TYC),
**                        bound_LAB = CON_PATH(_237603.var_TYC),
**                        arms_LAB = CON_APP(_237729; {CON_PATH(_237603.exp_TYC) *
**                                                     CON_PATH(_237603.niltrace_TYC) *
**                                                     CON_PATH(_237603.exp_TYC)}),
**                        default_LAB = CON_APP(_237730; CON_PATH(_237603.exp_TYC))},
**                       {arg_LAB = CON_PATH(_237603.conditionCode_TYC),
**                        elseArm_LAB = CON_PATH(_237603.exp_TYC),
**                        result_type_LAB = CON_PATH(_237603.con_TYC),
**                        thenArm_LAB = CON_PATH(_237603.exp_TYC)},
**                       {arg_LAB = CON_PATH(_237603.exp_TYC),
**                        size_LAB = CON_PATH(_237611.intsize_TYC),
**                        result_type_LAB = CON_PATH(_237603.con_TYC),
**                        arms_LAB = CON_APP(_237729; {CON_PATH(_237603.w32_TYC) *
**                                                     CON_PATH(_237603.exp_TYC)}),
**                        default_LAB = CON_APP(_237730; CON_PATH(_237603.exp_TYC))},
**                       {arg_LAB = CON_PATH(_237603.exp_TYC),
**                        result_type_LAB = CON_PATH(_237603.con_TYC),
**                        sumtype_LAB = CON_PATH(_237603.con_TYC),
**                        bound_LAB = CON_PATH(_237603.var_TYC),
**                        arms_LAB = CON_APP(_237729; {CON_PATH(_237603.w32_TYC) *
**                                                     CON_PATH(_237603.niltrace_TYC) *
**                                                     CON_PATH(_237603.exp_TYC)}),
**                        default_LAB = CON_APP(_237730; CON_PATH(_237603.exp_TYC))},
**                       {arg_LAB = CON_PATH(_237603.con_TYC),
**                        result_type_LAB = CON_PATH(_237603.con_TYC),
**                        arms_LAB = CON_APP(_237729;
**                                      {CON_PATH(_237603.primcon_TYC) *
**                                       CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
**                                                         CON_PATH(_237603.kind_TYC)}) *
**                                       CON_PATH(_237603.exp_TYC)}),
**                        default_LAB = CON_PATH(_237603.exp_TYC)}), 
*          bnd_sum_INT > _237862 : 
**            TYPE = SUM[
**                      (Con_b, Exp_b, Fixclosure_b, Fixcode_b, Fixopen_b);
**                      0;
**                      CON_PATH(_237603.bnd_sumarg_INT)], 
*          con_sum_INT > _237863 : 
**            TYPE = SUM[
**                      (AllArrow_c,
**                       Annotate_c,
**                       App_c,
**                       Closure_c,
**                       Crecord_c,
**                       ExternArrow_c,
**                       Let_c,
**                       Mu_c,
**                       Prim_c,
**                       Proj_c,
**                       Typecase_c,
**                       Typeof_c,
**                       Var_c);
**                      0;
**                      CON_PATH(_237603.con_sumarg_INT)], 
*          conbnd_sum_INT > _237864 : 
**            TYPE = SUM[
**                      (Code_cb, Con_cb, Open_cb);
**                      0;
**                      CON_PATH(_237603.conbnd_sumarg_INT)], 
*          conditionCode_sum_INT > _237865 : 
**            TYPE = SUM[
**                      (And_cc, Exp_cc, Not_cc, Or_cc);
**                      0;
**                      CON_PATH(_237603.conditionCode_sumarg_INT)], 
*          exp_sum_INT > _237866 : 
**            TYPE = SUM[
**                      (App_e,
**                       Const_e,
**                       ExternApp_e,
**                       Handle_e,
**                       Let_e,
**                       Prim_e,
**                       Raise_e,
**                       Switch_e,
**                       Var_e);
**                      0;
**                      CON_PATH(_237603.exp_sumarg_INT)], 
*          function_sum_INT > _237867 : 
**            TYPE = SUM[ (Function); 0; CON_PATH(_237603.function_sumarg_INT)], 
*          kind_sum_INT > _237868 : 
**            TYPE = SUM[
**                      (Type_k, Arrow_k, Record_k, SingleType_k, Single_k);
**                      1;
**                      CON_PATH(_237603.kind_sumarg_INT)], 
*          switch_sum_INT > _237869 : 
**            TYPE = SUM[
**                      (Exncase_e, Ifthenelse_e, Intsw_e, Sumsw_e, Typecase_e);
**                      0;
**                      CON_PATH(_237603.switch_sumarg_INT)], 
*          +O+Dbnd_INT > _237870 : 
**            SIGS_SELF(_237603.+O+Dbnd_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [bnd_INT > _237871 : TYPE == CON_PATH(_237603.bnd_TYC), 
**                           expose_INT > _237872 : 
***                             (CON_PATH(_237603.bnd_TYC) =>
***                                CON_PATH(_237603.bnd_sum_INT)) == 
***       +1   /TOTALNONRECUR\_237873
***       +1         (_237874 : CON_PATH(_237603.bnd_TYC))
***       +1         : CON_PATH(_237603.bnd_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.bnd_TYC),CON_PATH(_237603.bnd_sum_INT),_237874), 
**                           Con_b > _237875 : 
***                             ({CON_PATH(_237603.phase_TYC) *
***                               CON_PATH(_237603.conbnd_TYC)} =>
***                                CON_PATH(_237603.bnd_TYC)) == 
***       +1   /TOTALNONRECUR\_237876
***       +1         (_237877 : {CON_PATH(_237603.phase_TYC) *
***       +1                     CON_PATH(_237603.conbnd_TYC)})
***       +1         : CON_PATH(_237603.bnd_TYC) =
***       +1      ROLL(CON_PATH(_237603.bnd_TYC),INJ(0, CON_PATH(_237603.bnd_sum_INT),_237877)), 
**                           Exp_b > _237878 : 
***                             ({CON_PATH(_237603.var_TYC) *
***                               CON_PATH(_237603.niltrace_TYC) *
***                               CON_PATH(_237603.exp_TYC)} =>
***                                CON_PATH(_237603.bnd_TYC)) == 
***       +1   /TOTALNONRECUR\_237879
***       +1         (_237880 : {CON_PATH(_237603.var_TYC) *
***       +1                     CON_PATH(_237603.niltrace_TYC) *
***       +1                     CON_PATH(_237603.exp_TYC)})
***       +1         : CON_PATH(_237603.bnd_TYC) =
***       +1      ROLL(CON_PATH(_237603.bnd_TYC),INJ(1, CON_PATH(_237603.bnd_sum_INT),_237880)), 
**                           Fixclosure_b > _237881 : 
***                             ({_237845 *
***                               CON_APP(CON_PATH(_237603.sequence_TYC);
***                                  CON_PATH(_237603.var_TYC),
***                                  {code_LAB = CON_PATH(_237603.var_TYC),
***                                   tipe_LAB = CON_PATH(_237603.con_TYC),
***                                   cenv_LAB = CON_PATH(_237603.con_TYC),
***                                   venv_LAB = CON_PATH(_237603.exp_TYC)})} =>
***                                CON_PATH(_237603.bnd_TYC)) == 
***       +1   /TOTALNONRECUR\_237882
***       +1         (_237883 : {_237845 *
***       +1                     CON_APP(CON_PATH(_237603.sequence_TYC);
***       +1                        CON_PATH(_237603.var_TYC),
***       +1                        {code_LAB = CON_PATH(_237603.var_TYC),
***       +1                         tipe_LAB = CON_PATH(_237603.con_TYC),
***       +1                         cenv_LAB = CON_PATH(_237603.con_TYC),
***       +1                         venv_LAB = CON_PATH(_237603.exp_TYC)})})
***       +1         : CON_PATH(_237603.bnd_TYC) =
***       +1      ROLL(CON_PATH(_237603.bnd_TYC),INJ(2, CON_PATH(_237603.bnd_sum_INT),_237883)), 
**                           Fixcode_b > _237884 : 
***                             (CON_APP(CON_PATH(_237603.sequence_TYC);
***                                 CON_PATH(_237603.var_TYC),
***                                 CON_PATH(_237603.function_TYC)) =>
***                                CON_PATH(_237603.bnd_TYC)) == 
***       +1   /TOTALNONRECUR\_237885
***       +1         (_237886 : CON_APP(CON_PATH(_237603.sequence_TYC);
***       +1                       CON_PATH(_237603.var_TYC), CON_PATH(_237603.function_TYC)))
***       +1         : CON_PATH(_237603.bnd_TYC) =
***       +1      ROLL(CON_PATH(_237603.bnd_TYC),INJ(3, CON_PATH(_237603.bnd_sum_INT),_237886)), 
**                           Fixopen_b > _237887 : 
***                             (CON_APP(CON_PATH(_237603.sequence_TYC);
***                                 CON_PATH(_237603.var_TYC),
***                                 CON_PATH(_237603.function_TYC)) =>
***                                CON_PATH(_237603.bnd_TYC)) == 
***       +1   /TOTALNONRECUR\_237888
***       +1         (_237889 : CON_APP(CON_PATH(_237603.sequence_TYC);
***       +1                       CON_PATH(_237603.var_TYC), CON_PATH(_237603.function_TYC)))
***       +1         : CON_PATH(_237603.bnd_TYC) =
***       +1      ROLL(CON_PATH(_237603.bnd_TYC),INJ(4, CON_PATH(_237603.bnd_sum_INT),_237889))]
**               ), 
*          +O+Dcon_INT > _237890 : 
**            SIGS_SELF(_237603.+O+Dcon_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [con_INT > _237891 : TYPE == CON_PATH(_237603.con_TYC), 
**                           expose_INT > _237892 : 
***                             (CON_PATH(_237603.con_TYC) =>
***                                CON_PATH(_237603.con_sum_INT)) == 
***       +1   /TOTALNONRECUR\_237893
***       +1         (_237894 : CON_PATH(_237603.con_TYC))
***       +1         : CON_PATH(_237603.con_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.con_TYC),CON_PATH(_237603.con_sum_INT),_237894), 
**                           AllArrow_c > _237895 : 
***                             ({openness_LAB = CON_PATH(_237603.openness_TYC),
***                               effect_LAB = CON_PATH(_237603.effect_TYC),
***                               body_type_LAB = CON_PATH(_237603.con_TYC),
***                               eFormals_LAB = CON_APP(_237729;
***                                                 {CON_APP(_237730;
***                                                     CON_PATH(_237603.var_TYC)) *
***                                                  CON_PATH(_237603.con_TYC)}),
***                               fFormals_LAB = CON_PATH(_237603.w32_TYC),
***                               tFormals_LAB = CON_APP(_237729;
***                                                 {CON_PATH(_237603.var_TYC) *
***                                                  CON_PATH(_237603.kind_TYC)}),
***                               isDependent_LAB = _237845} =>
***                                CON_PATH(_237603.con_TYC)) == /TOTALNONRECUR\_237896
***       +1            (_237897 : {openness_LAB = CON_PATH(_237603.
***       +1   openness_TYC),
***       +1                        effect_LAB = CON_PATH(_237603.
***       +1   effect_TYC),
***       +1                        body_type_LAB = CON_PATH(_237603.
***       +1   con_TYC),
***       +1                        eFormals_LAB = CON_APP(_237729;
***       +1                                          {CON_APP(_237730;
***       +1                                              CON_PATH(
***       +1   _237603.var_TYC)) *
***       +1                                           CON_PATH(_237603.
***       +1   con_TYC)}),
***       +1                        fFormals_LAB = CON_PATH(_237603.
***       +1   w32_TYC),
***       +1                        tFormals_LAB = CON_APP(_237729;
***       +1                                          {CON_PATH(_237603.
***       +1   var_TYC) *
***       +1                                           CON_PATH(_237603.
***       +1   kind_TYC)}),
***       +1                        isDependent_LAB = _237845})
***       +1            : CON_PATH(_237603.con_TYC) =
***       +1         ROLL(CON_PATH(_237603.con_TYC),INJ(0, CON_PATH(
***       +1   _237603.con_sum_INT)
***       +1   ,_237897)), 
**                           Annotate_c > _237898 : 
***                             ({CON_APP(CON_PATH(_237603.annotation_TYC);
***                                  CON_PATH(_237603.kind_TYC)) *
***                               CON_PATH(_237603.con_TYC)} =>
***                                CON_PATH(_237603.con_TYC)) == 
***       +1   /TOTALNONRECUR\_237899
***       +1         (_237900 : {CON_APP(CON_PATH(_237603.annotation_TYC);
***       +1                        CON_PATH(_237603.kind_TYC)) *
***       +1                     CON_PATH(_237603.con_TYC)})
***       +1         : CON_PATH(_237603.con_TYC) =
***       +1      ROLL(CON_PATH(_237603.con_TYC),INJ(1, CON_PATH(_237603.con_sum_INT),_237900)), 
**                           App_c > _237901 : 
***                             ({CON_PATH(_237603.con_TYC) *
***                               CON_APP(_237729; CON_PATH(_237603.con_TYC))} =>
***                                CON_PATH(_237603.con_TYC)) == 
***       +1   /TOTALNONRECUR\_237902
***       +1         (_237903 : {CON_PATH(_237603.con_TYC) *
***       +1                     CON_APP(_237729; CON_PATH(_237603.con_TYC))})
***       +1         : CON_PATH(_237603.con_TYC) =
***       +1      ROLL(CON_PATH(_237603.con_TYC),INJ(2, CON_PATH(_237603.con_sum_INT),_237903)), 
**                           Closure_c > _237904 : 
***                             ({CON_PATH(_237603.con_TYC) *
***                               CON_PATH(_237603.con_TYC)} =>
***                                CON_PATH(_237603.con_TYC)) == 
***       +1   /TOTALNONRECUR\_237905
***       +1         (_237906 : {CON_PATH(_237603.con_TYC) *
***       +1                     CON_PATH(_237603.con_TYC)})
***       +1         : CON_PATH(_237603.con_TYC) =
***       +1      ROLL(CON_PATH(_237603.con_TYC),INJ(3, CON_PATH(_237603.con_sum_INT),_237906)), 
**                           Crecord_c > _237907 : 
***                             (CON_APP(_237729; {CON_PATH(_237603.label_TYC) *
***                                                CON_PATH(_237603.con_TYC)}) =>
***                                CON_PATH(_237603.con_TYC)) == 
***       +1   /TOTALNONRECUR\_237908
***       +1         (_237909 : CON_APP(_237729; {CON_PATH(_237603.label_TYC) *
***       +1                                      CON_PATH(_237603.con_TYC)}))
***       +1         : CON_PATH(_237603.con_TYC) =
***       +1      ROLL(CON_PATH(_237603.con_TYC),INJ(4, CON_PATH(_237603.con_sum_INT),_237909)), 
**                           ExternArrow_c > _237910 : 
***                             ({CON_APP(_237729; CON_PATH(_237603.con_TYC)) *
***                               CON_PATH(_237603.con_TYC)} =>
***                                CON_PATH(_237603.con_TYC)) == 
***       +1   /TOTALNONRECUR\_237911
***       +1         (_237912 : {CON_APP(_237729; CON_PATH(_237603.con_TYC)) *
***       +1                     CON_PATH(_237603.con_TYC)})
***       +1         : CON_PATH(_237603.con_TYC) =
***       +1      ROLL(CON_PATH(_237603.con_TYC),INJ(5, CON_PATH(_237603.con_sum_INT),_237912)), 
**                           Let_c > _237913 : 
***                             ({CON_PATH(_237603.letsort_TYC) *
***                               CON_APP(_237729; CON_PATH(_237603.conbnd_TYC)) *
***                               CON_PATH(_237603.con_TYC)} =>
***                                CON_PATH(_237603.con_TYC)) == 
***       +1   /TOTALNONRECUR\_237914
***       +1         (_237915 : {CON_PATH(_237603.letsort_TYC) *
***       +1                     CON_APP(_237729; CON_PATH(_237603.conbnd_TYC)) *
***       +1                     CON_PATH(_237603.con_TYC)})
***       +1         : CON_PATH(_237603.con_TYC) =
***       +1      ROLL(CON_PATH(_237603.con_TYC),INJ(6, CON_PATH(_237603.con_sum_INT),_237915)), 
**                           Mu_c > _237916 : 
***                             ({_237845 *
***                               CON_APP(CON_PATH(_237603.sequence_TYC);
***                                  CON_PATH(_237603.var_TYC), CON_PATH(_237603.con_TYC))} =>
***                                CON_PATH(_237603.con_TYC)) == /TOTALNONRECUR\_237917
***       +1                 (_237918 : {_237845 *
***       +1                             CON_APP(CON_PATH(_237603.
***       +1   sequence_TYC);
***       +1                                CON_PATH(_237603.var_TYC),
***       +1                                CON_PATH(_237603.con_TYC))})
***       +1                 : CON_PATH(_237603.con_TYC) =
***       +1              ROLL(CON_PATH(_237603.con_TYC),INJ(7, CON_PATH(
***       +1   _237603.con_sum_INT)
***       +1   ,_237918)), 
**                           Prim_c > _237919 : 
***                             ({CON_PATH(_237603.primcon_TYC) *
***                               CON_APP(_237729; CON_PATH(_237603.con_TYC))} =>
***                                CON_PATH(_237603.con_TYC)) == 
***       +1   /TOTALNONRECUR\_237920
***       +1         (_237921 : {CON_PATH(_237603.primcon_TYC) *
***       +1                     CON_APP(_237729; CON_PATH(_237603.con_TYC))})
***       +1         : CON_PATH(_237603.con_TYC) =
***       +1      ROLL(CON_PATH(_237603.con_TYC),INJ(8, CON_PATH(_237603.con_sum_INT),_237921)), 
**                           Proj_c > _237922 : 
***                             ({CON_PATH(_237603.con_TYC) *
***                               CON_PATH(_237603.label_TYC)} =>
***                                CON_PATH(_237603.con_TYC)) == 
***       +1   /TOTALNONRECUR\_237923
***       +1         (_237924 : {CON_PATH(_237603.con_TYC) *
***       +1                     CON_PATH(_237603.label_TYC)})
***       +1         : CON_PATH(_237603.con_TYC) =
***       +1      ROLL(CON_PATH(_237603.con_TYC),INJ(9, CON_PATH(_237603.con_sum_INT),_237924)), 
**                           Typecase_c > _237925 : 
***                             ({arg_LAB = CON_PATH(_237603.con_TYC),
***                               kind_LAB = CON_PATH(_237603.kind_TYC),
***                               arms_LAB = CON_APP(_237729;
***                                             {CON_PATH(_237603.primcon_TYC) *
***                                              CON_APP(_237729;
***                                                 {CON_PATH(_237603.var_TYC) *
***                                                  CON_PATH(_237603.kind_TYC)}) *
***                                              CON_PATH(_237603.con_TYC)}),
***                               default_LAB = CON_PATH(_237603.con_TYC)} =>
***                                CON_PATH(_237603.con_TYC)) == /TOTALNONRECUR\_237926
***       +1           (_237927 : {arg_LAB = CON_PATH(_237603.con_TYC),
***       +1                       kind_LAB = CON_PATH(_237603.kind_TYC),
***       +1                       arms_LAB = CON_APP(_237729;
***       +1                                     {CON_PATH(_237603.
***       +1   primcon_TYC) *
***       +1                                      CON_APP(_237729;
***       +1                                         {CON_PATH(_237603.
***       +1   var_TYC) *
***       +1                                          CON_PATH(_237603.
***       +1   kind_TYC)}) *
***       +1                                      CON_PATH(_237603.
***       +1   con_TYC)}),
***       +1                       default_LAB = CON_PATH(_237603.
***       +1   con_TYC)})
***       +1           : CON_PATH(_237603.con_TYC) =
***       +1        ROLL(CON_PATH(_237603.con_TYC),INJ(10, CON_PATH(
***       +1   _237603.con_sum_INT)
***       +1   ,_237927)), 
**                           Typeof_c > _237928 : 
***                             (CON_PATH(_237603.exp_TYC) => CON_PATH(_237603.con_TYC)) == /TOTALNONRECUR\_237929
***       +1           (_237930 : CON_PATH(_237603.exp_TYC))
***       +1           : CON_PATH(_237603.con_TYC) =
***       +1        ROLL(CON_PATH(_237603.con_TYC),INJ(11, CON_PATH(
***       +1   _237603.con_sum_INT)
***       +1   ,_237930)), 
**                           Var_c > _237931 : 
***                             (CON_PATH(_237603.var_TYC) => CON_PATH(_237603.con_TYC)) == /TOTALNONRECUR\_237932
***       +1           (_237933 : CON_PATH(_237603.var_TYC))
***       +1           : CON_PATH(_237603.con_TYC) =
***       +1        ROLL(CON_PATH(_237603.con_TYC),INJ(12, CON_PATH(
***       +1   _237603.con_sum_INT)
***       +1   ,_237933))]
**               ), 
*          +O+Dconbnd_INT > _237934 : 
**            SIGS_SELF(_237603.+O+Dconbnd_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [conbnd_INT > _237935 : TYPE == CON_PATH(_237603.conbnd_TYC), 
**                           expose_INT > _237936 : 
***                             (CON_PATH(_237603.conbnd_TYC) =>
***                                CON_PATH(_237603.conbnd_sum_INT)) == 
***       +1   /TOTALNONRECUR\_237937
***       +1         (_237938 : CON_PATH(_237603.conbnd_TYC))
***       +1         : CON_PATH(_237603.conbnd_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.conbnd_TYC),CON_PATH(_237603.conbnd_sum_INT),_237938), 
**                           Code_cb > _237939 : 
***                             ({CON_PATH(_237603.var_TYC) *
***                               CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
***                                                 CON_PATH(_237603.kind_TYC)}) *
***                               CON_PATH(_237603.con_TYC)} =>
***                                CON_PATH(_237603.conbnd_TYC)) == 
***       +1   /TOTALNONRECUR\_237940
***       +1         (_237941 : {CON_PATH(_237603.var_TYC) *
***       +1                     CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
***       +1                                       CON_PATH(_237603.kind_TYC)}) *
***       +1                     CON_PATH(_237603.con_TYC)})
***       +1         : CON_PATH(_237603.conbnd_TYC) =
***       +1      ROLL(CON_PATH(_237603.conbnd_TYC),INJ(0, CON_PATH(_237603.conbnd_sum_INT)
***       +2   ,_237941)), 
**                           Con_cb > _237942 : 
***                             ({CON_PATH(_237603.var_TYC) *
***                               CON_PATH(_237603.con_TYC)} =>
***                                CON_PATH(_237603.conbnd_TYC)) == 
***       +1   /TOTALNONRECUR\_237943
***       +1         (_237944 : {CON_PATH(_237603.var_TYC) *
***       +1                     CON_PATH(_237603.con_TYC)})
***       +1         : CON_PATH(_237603.conbnd_TYC) =
***       +1      ROLL(CON_PATH(_237603.conbnd_TYC),INJ(1, CON_PATH(_237603.conbnd_sum_INT)
***       +2   ,_237944)), 
**                           Open_cb > _237945 : 
***                             ({CON_PATH(_237603.var_TYC) *
***                               CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
***                                                 CON_PATH(_237603.kind_TYC)}) *
***                               CON_PATH(_237603.con_TYC)} =>
***                                CON_PATH(_237603.conbnd_TYC)) == 
***       +1   /TOTALNONRECUR\_237946
***       +1         (_237947 : {CON_PATH(_237603.var_TYC) *
***       +1                     CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
***       +1                                       CON_PATH(_237603.kind_TYC)}) *
***       +1                     CON_PATH(_237603.con_TYC)})
***       +1         : CON_PATH(_237603.conbnd_TYC) =
***       +1      ROLL(CON_PATH(_237603.conbnd_TYC),INJ(2, CON_PATH(_237603.conbnd_sum_INT)
***       +2   ,_237947))]
**               ), 
*          +O+DconditionCode_INT > _237948 : 
**            SIGS_SELF(_237603.+O+DconditionCode_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [conditionCode_INT > _237949 : 
***                             TYPE == CON_PATH(_237603.conditionCode_TYC), 
**                           expose_INT > _237950 : 
***                             (CON_PATH(_237603.conditionCode_TYC) =>
***                                CON_PATH(_237603.conditionCode_sum_INT)) == 
***       +1   /TOTALNONRECUR\_237951
***       +1         (_237952 : CON_PATH(_237603.conditionCode_TYC))
***       +1         : CON_PATH(_237603.conditionCode_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.conditionCode_TYC),CON_PATH(
***       +2   _237603.conditionCode_sum_INT),_237952), 
**                           And_cc > _237953 : 
***                             ({CON_PATH(_237603.conditionCode_TYC) *
***                               CON_PATH(_237603.conditionCode_TYC)} =>
***                                CON_PATH(_237603.conditionCode_TYC)) == 
***       +1   /TOTALNONRECUR\_237954
***       +1         (_237955 : {CON_PATH(_237603.conditionCode_TYC) *
***       +1                     CON_PATH(_237603.conditionCode_TYC)})
***       +1         : CON_PATH(_237603.conditionCode_TYC) =
***       +1      ROLL(CON_PATH(_237603.conditionCode_TYC),INJ(0, 
***       +2   CON_PATH(_237603.conditionCode_sum_INT),_237955)), 
**                           Exp_cc > _237956 : 
***                             (CON_PATH(_237603.exp_TYC) =>
***                                CON_PATH(_237603.conditionCode_TYC)) == 
***       +1   /TOTALNONRECUR\_237957
***       +1         (_237958 : CON_PATH(_237603.exp_TYC))
***       +1         : CON_PATH(_237603.conditionCode_TYC) =
***       +1      ROLL(CON_PATH(_237603.conditionCode_TYC),INJ(1, 
***       +2   CON_PATH(_237603.conditionCode_sum_INT),_237958)), 
**                           Not_cc > _237959 : 
***                             (CON_PATH(_237603.conditionCode_TYC) =>
***                                CON_PATH(_237603.conditionCode_TYC)) == 
***       +1   /TOTALNONRECUR\_237960
***       +1         (_237961 : CON_PATH(_237603.conditionCode_TYC))
***       +1         : CON_PATH(_237603.conditionCode_TYC) =
***       +1      ROLL(CON_PATH(_237603.conditionCode_TYC),INJ(2, 
***       +2   CON_PATH(_237603.conditionCode_sum_INT),_237961)), 
**                           Or_cc > _237962 : 
***                             ({CON_PATH(_237603.conditionCode_TYC) *
***                               CON_PATH(_237603.conditionCode_TYC)} =>
***                                CON_PATH(_237603.conditionCode_TYC)) == 
***       +1   /TOTALNONRECUR\_237963
***       +1         (_237964 : {CON_PATH(_237603.conditionCode_TYC) *
***       +1                     CON_PATH(_237603.conditionCode_TYC)})
***       +1         : CON_PATH(_237603.conditionCode_TYC) =
***       +1      ROLL(CON_PATH(_237603.conditionCode_TYC),INJ(3, 
***       +2   CON_PATH(_237603.conditionCode_sum_INT),_237964))]
**               ), 
*          +O+Dexp_INT > _237965 : 
**            SIGS_SELF(_237603.+O+Dexp_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [exp_INT > _237966 : TYPE == CON_PATH(_237603.exp_TYC), 
**                           expose_INT > _237967 : 
***                             (CON_PATH(_237603.exp_TYC) =>
***                                CON_PATH(_237603.exp_sum_INT)) == 
***       +1   /TOTALNONRECUR\_237968
***       +1         (_237969 : CON_PATH(_237603.exp_TYC))
***       +1         : CON_PATH(_237603.exp_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.exp_TYC),CON_PATH(_237603.exp_sum_INT),_237969), 
**                           App_e > _237970 : 
***                             ({CON_PATH(_237603.openness_TYC) *
***                               CON_PATH(_237603.exp_TYC) *
***                               CON_APP(_237729; CON_PATH(_237603.con_TYC)) *
***                               CON_APP(_237729; CON_PATH(_237603.exp_TYC)) *
***                               CON_APP(_237729; CON_PATH(_237603.exp_TYC))} =>
***                                CON_PATH(_237603.exp_TYC)) == 
***       +1   /TOTALNONRECUR\_237971
***       +1         (_237972 : {CON_PATH(_237603.openness_TYC) *
***       +1                     CON_PATH(_237603.exp_TYC) *
***       +1                     CON_APP(_237729; CON_PATH(_237603.con_TYC)) *
***       +1                     CON_APP(_237729; CON_PATH(_237603.exp_TYC)) *
***       +1                     CON_APP(_237729; CON_PATH(_237603.exp_TYC))})
***       +1         : CON_PATH(_237603.exp_TYC) =
***       +1      ROLL(CON_PATH(_237603.exp_TYC),INJ(0, CON_PATH(_237603.exp_sum_INT),_237972)), 
**                           Const_e > _237973 : 
***                             (CON_APP(CON_PATH(_237611.value_TYC);
***                                 CON_PATH(_237603.con_TYC), CON_PATH(_237603.exp_TYC)) =>
***                                CON_PATH(_237603.exp_TYC)) == /TOTALNONRECUR\_237974
***       +1               (_237975 : CON_APP(CON_PATH(_237611.value_TYC);
***       +1                             CON_PATH(_237603.con_TYC),
***       +1                             CON_PATH(_237603.exp_TYC)))
***       +1               : CON_PATH(_237603.exp_TYC) =
***       +1            ROLL(CON_PATH(_237603.exp_TYC),INJ(1, CON_PATH(
***       +1   _237603.exp_sum_INT)
***       +1   ,_237975)), 
**                           ExternApp_e > _237976 : 
***                             ({CON_PATH(_237603.exp_TYC) *
***                               CON_APP(_237729; CON_PATH(_237603.exp_TYC))} =>
***                                CON_PATH(_237603.exp_TYC)) == 
***       +1   /TOTALNONRECUR\_237977
***       +1         (_237978 : {CON_PATH(_237603.exp_TYC) *
***       +1                     CON_APP(_237729; CON_PATH(_237603.exp_TYC))})
***       +1         : CON_PATH(_237603.exp_TYC) =
***       +1      ROLL(CON_PATH(_237603.exp_TYC),INJ(2, CON_PATH(_237603.exp_sum_INT),_237978)), 
**                           Handle_e > _237979 : 
***                             ({body_LAB = CON_PATH(_237603.exp_TYC),
***                               result_type_LAB = CON_PATH(_237603.con_TYC),
***                               bound_LAB = CON_PATH(_237603.var_TYC),
***                               handler_LAB = CON_PATH(_237603.exp_TYC)} =>
***                                CON_PATH(_237603.exp_TYC)) == 
***       +1   /TOTALNONRECUR\_237980
***       +1         (_237981 : {body_LAB = CON_PATH(_237603.exp_TYC),
***       +1                     result_type_LAB = CON_PATH(_237603.con_TYC),
***       +1                     bound_LAB = CON_PATH(_237603.var_TYC),
***       +1                     handler_LAB = CON_PATH(_237603.exp_TYC)})
***       +1         : CON_PATH(_237603.exp_TYC) =
***       +1      ROLL(CON_PATH(_237603.exp_TYC),INJ(3, CON_PATH(_237603.exp_sum_INT),_237981)), 
**                           Let_e > _237982 : 
***                             ({CON_PATH(_237603.letsort_TYC) *
***                               CON_APP(_237729; CON_PATH(_237603.bnd_TYC)) *
***                               CON_PATH(_237603.exp_TYC)} =>
***                                CON_PATH(_237603.exp_TYC)) == 
***       +1   /TOTALNONRECUR\_237983
***       +1         (_237984 : {CON_PATH(_237603.letsort_TYC) *
***       +1                     CON_APP(_237729; CON_PATH(_237603.bnd_TYC)) *
***       +1                     CON_PATH(_237603.exp_TYC)})
***       +1         : CON_PATH(_237603.exp_TYC) =
***       +1      ROLL(CON_PATH(_237603.exp_TYC),INJ(4, CON_PATH(_237603.exp_sum_INT),_237984)), 
**                           Prim_e > _237985 : 
***                             ({CON_PATH(_237603.allprim_TYC) *
***                               CON_APP(_237729; CON_PATH(_237603.con_TYC)) *
***                               CON_APP(_237729; CON_PATH(_237603.exp_TYC))} =>
***                                CON_PATH(_237603.exp_TYC)) == 
***       +1   /TOTALNONRECUR\_237986
***       +1         (_237987 : {CON_PATH(_237603.allprim_TYC) *
***       +1                     CON_APP(_237729; CON_PATH(_237603.con_TYC)) *
***       +1                     CON_APP(_237729; CON_PATH(_237603.exp_TYC))})
***       +1         : CON_PATH(_237603.exp_TYC) =
***       +1      ROLL(CON_PATH(_237603.exp_TYC),INJ(5, CON_PATH(_237603.exp_sum_INT),_237987)), 
**                           Raise_e > _237988 : 
***                             ({CON_PATH(_237603.exp_TYC) *
***                               CON_PATH(_237603.con_TYC)} =>
***                                CON_PATH(_237603.exp_TYC)) == 
***       +1   /TOTALNONRECUR\_237989
***       +1         (_237990 : {CON_PATH(_237603.exp_TYC) *
***       +1                     CON_PATH(_237603.con_TYC)})
***       +1         : CON_PATH(_237603.exp_TYC) =
***       +1      ROLL(CON_PATH(_237603.exp_TYC),INJ(6, CON_PATH(_237603.exp_sum_INT),_237990)), 
**                           Switch_e > _237991 : 
***                             (CON_PATH(_237603.switch_TYC) =>
***                                CON_PATH(_237603.exp_TYC)) == 
***       +1   /TOTALNONRECUR\_237992
***       +1         (_237993 : CON_PATH(_237603.switch_TYC))
***       +1         : CON_PATH(_237603.exp_TYC) =
***       +1      ROLL(CON_PATH(_237603.exp_TYC),INJ(7, CON_PATH(_237603.exp_sum_INT),_237993)), 
**                           Var_e > _237994 : 
***                             (CON_PATH(_237603.var_TYC) => CON_PATH(_237603.exp_TYC)) == /TOTALNONRECUR\_237995
***       +1           (_237996 : CON_PATH(_237603.var_TYC))
***       +1           : CON_PATH(_237603.exp_TYC) =
***       +1        ROLL(CON_PATH(_237603.exp_TYC),INJ(8, CON_PATH(
***       +1   _237603.exp_sum_INT)
***       +1   ,_237996))]
**               ), 
*          +O+Dfunction_INT > _237997 : 
**            SIGS_SELF(_237603.+O+Dfunction_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [function_INT > _237998 : 
***                             TYPE == CON_PATH(_237603.function_TYC), 
**                           expose_INT > _237999 : 
***                             (CON_PATH(_237603.function_TYC) =>
***                                CON_PATH(_237603.function_sum_INT)) == 
***       +1   /TOTALNONRECUR\_238000
***       +1         (_238001 : CON_PATH(_237603.function_TYC))
***       +1         : CON_PATH(_237603.function_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.function_TYC),CON_PATH(_237603.function_sum_INT),_238001), 
**                           Function > _238002 : 
***                             ({effect_LAB = CON_PATH(_237603.effect_TYC),
***                               body_LAB = CON_PATH(_237603.exp_TYC),
***                               recursive_LAB = CON_PATH(_237603.recursive_TYC),
***                               body_type_LAB = CON_PATH(_237603.con_TYC),
***                               eFormals_LAB = CON_APP(_237729;
***                                                 {CON_PATH(_237603.var_TYC) *
***                                                  CON_PATH(_237603.niltrace_TYC) *
***                                                  CON_PATH(_237603.con_TYC)}),
***                               fFormals_LAB = CON_APP(_237729;
***                                                 CON_PATH(_237603.var_TYC)),
***                               tFormals_LAB = CON_APP(_237729;
***                                                 {CON_PATH(_237603.var_TYC) *
***                                                  CON_PATH(_237603.kind_TYC)}),
***                               isDependent_LAB = _237845} =>
***                                CON_PATH(_237603.function_TYC)) == /TOTALNONRECUR\_238003
***       +1             (_238004 : {effect_LAB = CON_PATH(_237603.
***       +1   effect_TYC),
***       +1                         body_LAB = CON_PATH(_237603.
***       +1   exp_TYC),
***       +1                         recursive_LAB = CON_PATH(_237603.
***       +1   recursive_TYC),
***       +1                         body_type_LAB = CON_PATH(_237603.
***       +1   con_TYC),
***       +1                         eFormals_LAB = CON_APP(_237729;
***       +1                                           {CON_PATH(
***       +1   _237603.var_TYC) *
***       +1                                            CON_PATH(
***       +1   _237603.niltrace_TYC) *
***       +1                                            CON_PATH(
***       +1   _237603.con_TYC)}),
***       +1                         fFormals_LAB = CON_APP(_237729;
***       +1                                           CON_PATH(_237603.
***       +1   var_TYC)),
***       +1                         tFormals_LAB = CON_APP(_237729;
***       +1                                           {CON_PATH(
***       +1   _237603.var_TYC) *
***       +1                                            CON_PATH(
***       +1   _237603.kind_TYC)}),
***       +1                         isDependent_LAB = _237845})
***       +1             : CON_PATH(_237603.function_TYC) =
***       +1          ROLL(CON_PATH(_237603.function_TYC),INJ(0, 
***       +1   CON_PATH(_237603.function_sum_INT),_238004))]
**               ), 
*          +O+Dkind_INT > _238005 : 
**            SIGS_SELF(_237603.+O+Dkind_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [kind_INT > _238006 : TYPE == CON_PATH(_237603.kind_TYC), 
**                           expose_INT > _238007 : 
***                             (CON_PATH(_237603.kind_TYC) =>
***                                CON_PATH(_237603.kind_sum_INT)) == 
***       +1   /TOTALNONRECUR\_238008
***       +1         (_238009 : CON_PATH(_237603.kind_TYC))
***       +1         : CON_PATH(_237603.kind_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.kind_TYC),CON_PATH(_237603.kind_sum_INT),_238009), 
**                           Type_k > _238010 : 
***                             CON_PATH(_237603.kind_TYC) == 
***       +1   ROLL(CON_PATH(_237603.kind_TYC),INJ(0, CON_PATH(_237603.kind_sum_INT))), 
**                           Arrow_k > _238011 : 
***                             ({CON_PATH(_237603.openness_TYC) *
***                               CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
***                                                 CON_PATH(_237603.kind_TYC)}) *
***                               CON_PATH(_237603.kind_TYC)} =>
***                                CON_PATH(_237603.kind_TYC)) == 
***       +1   /TOTALNONRECUR\_238012
***       +1         (_238013 : {CON_PATH(_237603.openness_TYC) *
***       +1                     CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
***       +1                                       CON_PATH(_237603.kind_TYC)}) *
***       +1                     CON_PATH(_237603.kind_TYC)})
***       +1         : CON_PATH(_237603.kind_TYC) =
***       +1      ROLL(CON_PATH(_237603.kind_TYC),INJ(1, CON_PATH(_237603.kind_sum_INT),_238013)), 
**                           Record_k > _238014 : 
***                             (CON_APP(CON_PATH(_237603.sequence_TYC);
***                                 {CON_PATH(_237603.label_TYC) *
***                                  CON_PATH(_237603.var_TYC)},
***                                 CON_PATH(_237603.kind_TYC)) =>
***                                CON_PATH(_237603.kind_TYC)) == 
***       +1   /TOTALNONRECUR\_238015
***       +1         (_238016 : CON_APP(CON_PATH(_237603.sequence_TYC);
***       +1                       {CON_PATH(_237603.label_TYC) *
***       +1                        CON_PATH(_237603.var_TYC)}, CON_PATH(_237603.kind_TYC)))
***       +1         : CON_PATH(_237603.kind_TYC) =
***       +1      ROLL(CON_PATH(_237603.kind_TYC),INJ(2, CON_PATH(_237603.kind_sum_INT),_238016)), 
**                           SingleType_k > _238017 : 
***                             (CON_PATH(_237603.con_TYC) => CON_PATH(_237603.kind_TYC)) == /TOTALNONRECUR\_238018
***       +1            (_238019 : CON_PATH(_237603.con_TYC))
***       +1            : CON_PATH(_237603.kind_TYC) =
***       +1         ROLL(CON_PATH(_237603.kind_TYC),INJ(3, CON_PATH(
***       +1   _237603.kind_sum_INT)
***       +1   ,_238019)), 
**                           Single_k > _238020 : 
***                             (CON_PATH(_237603.con_TYC) => CON_PATH(_237603.kind_TYC)) == /TOTALNONRECUR\_238021
***       +1            (_238022 : CON_PATH(_237603.con_TYC))
***       +1            : CON_PATH(_237603.kind_TYC) =
***       +1         ROLL(CON_PATH(_237603.kind_TYC),INJ(4, CON_PATH(
***       +1   _237603.kind_sum_INT)
***       +1   ,_238022))]
**               ), 
*          +O+Dswitch_INT > _238023 : 
**            SIGS_SELF(_237603.+O+Dswitch_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [switch_INT > _238024 : TYPE == CON_PATH(_237603.switch_TYC), 
**                           expose_INT > _238025 : 
***                             (CON_PATH(_237603.switch_TYC) =>
***                                CON_PATH(_237603.switch_sum_INT)) == 
***       +1   /TOTALNONRECUR\_238026
***       +1         (_238027 : CON_PATH(_237603.switch_TYC))
***       +1         : CON_PATH(_237603.switch_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.switch_TYC),CON_PATH(_237603.switch_sum_INT),_238027), 
**                           Exncase_e > _238028 : 
***                             ({arg_LAB = CON_PATH(_237603.exp_TYC),
***                               result_type_LAB = CON_PATH(_237603.con_TYC),
***                               bound_LAB = CON_PATH(_237603.var_TYC),
***                               arms_LAB = CON_APP(_237729;
***                                             {CON_PATH(_237603.exp_TYC) *
***                                              CON_PATH(_237603.niltrace_TYC) *
***                                              CON_PATH(_237603.exp_TYC)}),
***                               default_LAB = CON_APP(_237730;
***                                                CON_PATH(_237603.exp_TYC))} =>
***                                CON_PATH(_237603.switch_TYC)) == /TOTALNONRECUR\_238029
***       +1         (_238030 : {arg_LAB = CON_PATH(_237603.exp_TYC),
***       +1                     result_type_LAB = CON_PATH(_237603.
***       +1   con_TYC),
***       +1                     bound_LAB = CON_PATH(_237603.var_TYC),
***       +1                     arms_LAB = CON_APP(_237729;
***       +1                                   {CON_PATH(_237603.
***       +1   exp_TYC) *
***       +1                                    CON_PATH(_237603.
***       +1   niltrace_TYC) *
***       +1                                    CON_PATH(_237603.
***       +1   exp_TYC)}),
***       +1                     default_LAB = CON_APP(_237730;
***       +1                                      CON_PATH(_237603.
***       +1   exp_TYC))})
***       +1         : CON_PATH(_237603.switch_TYC) =
***       +1      ROLL(CON_PATH(_237603.switch_TYC),INJ(0, CON_PATH(
***       +1   _237603.switch_sum_INT)
***       +1   ,_238030)), 
**                           Ifthenelse_e > _238031 : 
***                             ({arg_LAB = CON_PATH(_237603.conditionCode_TYC),
***                               elseArm_LAB = CON_PATH(_237603.exp_TYC),
***                               result_type_LAB = CON_PATH(_237603.con_TYC),
***                               thenArm_LAB = CON_PATH(_237603.exp_TYC)} =>
***                                CON_PATH(_237603.switch_TYC)) == 
***       +1   /TOTALNONRECUR\_238032
***       +1         (_238033 : {arg_LAB = CON_PATH(_237603.conditionCode_TYC),
***       +1                     elseArm_LAB = CON_PATH(_237603.exp_TYC),
***       +1                     result_type_LAB = CON_PATH(_237603.con_TYC),
***       +1                     thenArm_LAB = CON_PATH(_237603.exp_TYC)})
***       +1         : CON_PATH(_237603.switch_TYC) =
***       +1      ROLL(CON_PATH(_237603.switch_TYC),INJ(1, CON_PATH(_237603.switch_sum_INT)
***       +2   ,_238033)), 
**                           Intsw_e > _238034 : 
***                             ({arg_LAB = CON_PATH(_237603.exp_TYC),
***                               size_LAB = CON_PATH(_237611.intsize_TYC),
***                               result_type_LAB = CON_PATH(_237603.con_TYC),
***                               arms_LAB = CON_APP(_237729;
***                                             {CON_PATH(_237603.w32_TYC) *
***                                              CON_PATH(_237603.exp_TYC)}),
***                               default_LAB = CON_APP(_237730;
***                                                CON_PATH(_237603.exp_TYC))} =>
***                                CON_PATH(_237603.switch_TYC)) == 
***       +1   /TOTALNONRECUR\_238035
***       +1         (_238036 : {arg_LAB = CON_PATH(_237603.exp_TYC),
***       +1                     size_LAB = CON_PATH(_237611.intsize_TYC),
***       +1                     result_type_LAB = CON_PATH(_237603.con_TYC),
***       +1                     arms_LAB = CON_APP(_237729; {CON_PATH(_237603.w32_TYC) *
***       +1                                                  CON_PATH(_237603.exp_TYC)}),
***       +1                     default_LAB = CON_APP(_237730; CON_PATH(_237603.exp_TYC))})
***       +1         : CON_PATH(_237603.switch_TYC) =
***       +1      ROLL(CON_PATH(_237603.switch_TYC),INJ(2, CON_PATH(_237603.switch_sum_INT)
***       +2   ,_238036)), 
**                           Sumsw_e > _238037 : 
***                             ({arg_LAB = CON_PATH(_237603.exp_TYC),
***                               result_type_LAB = CON_PATH(_237603.con_TYC),
***                               sumtype_LAB = CON_PATH(_237603.con_TYC),
***                               bound_LAB = CON_PATH(_237603.var_TYC),
***                               arms_LAB = CON_APP(_237729;
***                                             {CON_PATH(_237603.w32_TYC) *
***                                              CON_PATH(_237603.niltrace_TYC) *
***                                              CON_PATH(_237603.exp_TYC)}),
***                               default_LAB = CON_APP(_237730;
***                                                CON_PATH(_237603.exp_TYC))} =>
***                                CON_PATH(_237603.switch_TYC)) == /TOTALNONRECUR\_238038
***       +1         (_238039 : {arg_LAB = CON_PATH(_237603.exp_TYC),
***       +1                     result_type_LAB = CON_PATH(_237603.
***       +1   con_TYC),
***       +1                     sumtype_LAB = CON_PATH(_237603.con_TYC),
***       +1                     bound_LAB = CON_PATH(_237603.var_TYC),
***       +1                     arms_LAB = CON_APP(_237729;
***       +1                                   {CON_PATH(_237603.
***       +1   w32_TYC) *
***       +1                                    CON_PATH(_237603.
***       +1   niltrace_TYC) *
***       +1                                    CON_PATH(_237603.
***       +1   exp_TYC)}),
***       +1                     default_LAB = CON_APP(_237730;
***       +1                                      CON_PATH(_237603.
***       +1   exp_TYC))})
***       +1         : CON_PATH(_237603.switch_TYC) =
***       +1      ROLL(CON_PATH(_237603.switch_TYC),INJ(3, CON_PATH(
***       +1   _237603.switch_sum_INT)
***       +1   ,_238039)), 
**                           Typecase_e > _238040 : 
***                             ({arg_LAB = CON_PATH(_237603.con_TYC),
***                               result_type_LAB = CON_PATH(_237603.con_TYC),
***                               arms_LAB = CON_APP(_237729;
***                                             {CON_PATH(_237603.primcon_TYC) *
***                                              CON_APP(_237729;
***                                                 {CON_PATH(_237603.var_TYC) *
***                                                  CON_PATH(_237603.kind_TYC)}) *
***                                              CON_PATH(_237603.exp_TYC)}),
***                               default_LAB = CON_PATH(_237603.exp_TYC)} =>
***                                CON_PATH(_237603.switch_TYC)) == /TOTALNONRECUR\_238041
***       +1           (_238042 : {arg_LAB = CON_PATH(_237603.con_TYC),
***       +1                       result_type_LAB = CON_PATH(_237603.
***       +1   con_TYC),
***       +1                       arms_LAB = CON_APP(_237729;
***       +1                                     {CON_PATH(_237603.
***       +1   primcon_TYC) *
***       +1                                      CON_APP(_237729;
***       +1                                         {CON_PATH(_237603.
***       +1   var_TYC) *
***       +1                                          CON_PATH(_237603.
***       +1   kind_TYC)}) *
***       +1                                      CON_PATH(_237603.
***       +1   exp_TYC)}),
***       +1                       default_LAB = CON_PATH(_237603.
***       +1   exp_TYC)})
***       +1           : CON_PATH(_237603.switch_TYC) =
***       +1        ROLL(CON_PATH(_237603.switch_TYC),INJ(4, CON_PATH(
***       +1   _237603.switch_sum_INT)
***       +1   ,_238042))]
**               ), 
*          import_entry_TYC > _238043 : 
**            TYPE = CON_MU(/-\(_238044)(SUM[
**                                          (ImportType, ImportValue);
**                                          0;
**                                          ({CON_PATH(_237603.label_TYC) *
**                                            CON_PATH(_237603.var_TYC) *
**                                            CON_PATH(_237603.kind_TYC)},
**                                           {CON_PATH(_237603.label_TYC) *
**                                            CON_PATH(_237603.var_TYC) *
**                                            CON_PATH(_237603.niltrace_TYC) *
**                                            CON_PATH(_237603.con_TYC)})]))#0, 
*          import_entry_sumarg_INT > _238045 : 
**            KIND(2) = ({CON_PATH(_237603.label_TYC) *
**                        CON_PATH(_237603.var_TYC) *
**                        CON_PATH(_237603.kind_TYC)},
**                       {CON_PATH(_237603.label_TYC) *
**                        CON_PATH(_237603.var_TYC) *
**                        CON_PATH(_237603.niltrace_TYC) *
**                        CON_PATH(_237603.con_TYC)}), 
*          import_entry_sum_INT > _238046 : 
**            TYPE = SUM[
**                      (ImportType, ImportValue);
**                      0;
**                      CON_PATH(_237603.import_entry_sumarg_INT)], 
*          +O+Dimport_entry_INT > _238047 : 
**            SIGS_SELF(_237603.+O+Dimport_entry_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [import_entry_INT > _238048 : 
***                             TYPE == CON_PATH(_237603.import_entry_TYC), 
**                           expose_INT > _238049 : 
***                             (CON_PATH(_237603.import_entry_TYC) =>
***                                CON_PATH(_237603.import_entry_sum_INT)) == 
***       +1   /TOTALNONRECUR\_238050
***       +1         (_238051 : CON_PATH(_237603.import_entry_TYC))
***       +1         : CON_PATH(_237603.import_entry_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.import_entry_TYC),CON_PATH(
***       +2   _237603.import_entry_sum_INT),_238051), 
**                           ImportType > _238052 : 
***                             ({CON_PATH(_237603.label_TYC) *
***                               CON_PATH(_237603.var_TYC) *
***                               CON_PATH(_237603.kind_TYC)} =>
***                                CON_PATH(_237603.import_entry_TYC)) == 
***       +1   /TOTALNONRECUR\_238053
***       +1         (_238054 : {CON_PATH(_237603.label_TYC) *
***       +1                     CON_PATH(_237603.var_TYC) *
***       +1                     CON_PATH(_237603.kind_TYC)})
***       +1         : CON_PATH(_237603.import_entry_TYC) =
***       +1      ROLL(CON_PATH(_237603.import_entry_TYC),INJ(0, 
***       +2   CON_PATH(_237603.import_entry_sum_INT),_238054)), 
**                           ImportValue > _238055 : 
***                             ({CON_PATH(_237603.label_TYC) *
***                               CON_PATH(_237603.var_TYC) *
***                               CON_PATH(_237603.niltrace_TYC) *
***                               CON_PATH(_237603.con_TYC)} =>
***                                CON_PATH(_237603.import_entry_TYC)) == 
***       +1   /TOTALNONRECUR\_238056
***       +1         (_238057 : {CON_PATH(_237603.label_TYC) *
***       +1                     CON_PATH(_237603.var_TYC) *
***       +1                     CON_PATH(_237603.niltrace_TYC) *
***       +1                     CON_PATH(_237603.con_TYC)})
***       +1         : CON_PATH(_237603.import_entry_TYC) =
***       +1      ROLL(CON_PATH(_237603.import_entry_TYC),INJ(1, 
***       +2   CON_PATH(_237603.import_entry_sum_INT),_238057))]
**               ), 
*          export_entry_TYC > _238058 : 
**            TYPE = CON_MU(/-\(_238059)(SUM[
**                                          (ExportType, ExportValue);
**                                          0;
**                                          ({CON_PATH(_237603.label_TYC) *
**                                            CON_PATH(_237603.var_TYC)},
**                                           {CON_PATH(_237603.label_TYC) *
**                                            CON_PATH(_237603.var_TYC)})]))#0, 
*          export_entry_sumarg_INT > _238060 : 
**            KIND(2) = ({CON_PATH(_237603.label_TYC) *
**                        CON_PATH(_237603.var_TYC)}, {CON_PATH(_237603.label_TYC) *
**                                                        CON_PATH(_237603.var_TYC)}), 
*          export_entry_sum_INT > _238061 : 
**            TYPE = SUM[
**                      (ExportType, ExportValue);
**                      0;
**                      CON_PATH(_237603.export_entry_sumarg_INT)], 
*          +Eexport_entry_INT > _238062 : 
**            ({CON_PATH(_237603.export_entry_TYC) *
**              CON_PATH(_237603.export_entry_TYC)} ->
**               CON_MU(/-\(_237651)(SUM[ (false, true); 2; ()]))#0), 
*          +O+Dexport_entry_INT > _238063 : 
**            SIGS_SELF(_237603.+O+Dexport_entry_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [export_entry_INT > _238064 : 
***                             TYPE == CON_PATH(_237603.export_entry_TYC), 
**                           expose_INT > _238065 : 
***                             (CON_PATH(_237603.export_entry_TYC) =>
***                                CON_PATH(_237603.export_entry_sum_INT)) == 
***       +1   /TOTALNONRECUR\_238066
***       +1         (_238067 : CON_PATH(_237603.export_entry_TYC))
***       +1         : CON_PATH(_237603.export_entry_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.export_entry_TYC),CON_PATH(
***       +2   _237603.export_entry_sum_INT),_238067), 
**                           ExportType > _238068 : 
***                             ({CON_PATH(_237603.label_TYC) *
***                               CON_PATH(_237603.var_TYC)} =>
***                                CON_PATH(_237603.export_entry_TYC)) == 
***       +1   /TOTALNONRECUR\_238069
***       +1         (_238070 : {CON_PATH(_237603.label_TYC) *
***       +1                     CON_PATH(_237603.var_TYC)})
***       +1         : CON_PATH(_237603.export_entry_TYC) =
***       +1      ROLL(CON_PATH(_237603.export_entry_TYC),INJ(0, 
***       +2   CON_PATH(_237603.export_entry_sum_INT),_238070)), 
**                           ExportValue > _238071 : 
***                             ({CON_PATH(_237603.label_TYC) *
***                               CON_PATH(_237603.var_TYC)} =>
***                                CON_PATH(_237603.export_entry_TYC)) == 
***       +1   /TOTALNONRECUR\_238072
***       +1         (_238073 : {CON_PATH(_237603.label_TYC) *
***       +1                     CON_PATH(_237603.var_TYC)})
***       +1         : CON_PATH(_237603.export_entry_TYC) =
***       +1      ROLL(CON_PATH(_237603.export_entry_TYC),INJ(1, 
***       +2   CON_PATH(_237603.export_entry_sum_INT),_238073))]
**               ), 
*          module_TYC > _238074 : 
**            TYPE = CON_MU(/-\(_238075)(SUM[
**                                          (MODULE);
**                                          0;
**                                          {imports_LAB = CON_APP(_237729;
**                                                            
**        +1   CON_PATH(_237603.import_entry_TYC)),
**                                           exports_LAB = CON_APP(_237729;
**                                                            
**        +1   CON_PATH(_237603.export_entry_TYC)),
**                                           bnds_LAB = CON_APP(_237729;
**                                                         CON_PATH(_237603.bnd_TYC))}]))#0, 
*          module_sumarg_INT > _238076 : 
**            TYPE = {imports_LAB = CON_APP(_237729; CON_PATH(_237603.import_entry_TYC)),
**                    exports_LAB = CON_APP(_237729; CON_PATH(_237603.export_entry_TYC)),
**                    bnds_LAB = CON_APP(_237729; CON_PATH(_237603.bnd_TYC))}, 
*          module_sum_INT > _238077 : 
**            TYPE = SUM[ (MODULE); 0; CON_PATH(_237603.module_sumarg_INT)], 
*          +O+Dmodule_INT > _238078 : 
**            SIGS_SELF(_237603.+O+Dmodule_INT, 
**               UNSELF_SIG = NONE
**               SELF_SIG = [module_INT > _238079 : TYPE == CON_PATH(_237603.module_TYC), 
**                           expose_INT > _238080 : 
***                             (CON_PATH(_237603.module_TYC) =>
***                                CON_PATH(_237603.module_sum_INT)) == 
***       +1   /TOTALNONRECUR\_238081
***       +1         (_238082 : CON_PATH(_237603.module_TYC))
***       +1         : CON_PATH(_237603.module_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.module_TYC),CON_PATH(_237603.module_sum_INT),_238082), 
**                           MODULE > _238083 : 
***                             ({imports_LAB = CON_APP(_237729;
***                                                CON_PATH(_237603.import_entry_TYC)),
***                               exports_LAB = CON_APP(_237729;
***                                                CON_PATH(_237603.export_entry_TYC)),
***                               bnds_LAB = CON_APP(_237729; CON_PATH(_237603.bnd_TYC))} =>
***                                CON_PATH(_237603.module_TYC)) == /TOTALNONRECUR\_238084
***       +1               (_238085 : {imports_LAB = CON_APP(_237729;
***       +1                                            CON_PATH(
***       +1   _237603.import_entry_TYC)),
***       +1                           exports_LAB = CON_APP(_237729;
***       +1                                            CON_PATH(
***       +1   _237603.export_entry_TYC)),
***       +1                           bnds_LAB = CON_APP(_237729;
***       +1                                         CON_PATH(_237603.
***       +1   bnd_TYC))})
***       +1               : CON_PATH(_237603.module_TYC) =
***       +1            ROLL(CON_PATH(_237603.module_TYC),INJ(0, 
***       +1   CON_PATH(_237603.module_sum_INT),_238085))]
**               )]
XXX eq_signat false - 
signat =           SIGS_SELF(strbindvar_229902, 
*            UNSELF_SIG = _200732
*            SELF_SIG = [var_TYC > _200733 : TYPE = CON_PATH(_170053.var_TYC), 
*                        label_TYC > _200735 : TYPE = CON_PATH(_170053.label_TYC), 
*                        w32_TYC > _200736 : TYPE = CON_PATH(_29216.word_TYC), 
*                        prim_TYC > _200738 : TYPE = CON_PATH(_200145.prim_TYC), 
*                        sequence_TYC > _200740 : 
**                          KIND(2 -> TYPE) = /-\(_200741, _200742)
**        +1   CON_APP(CON_PATH(_200623.sequence_TYC);
**        +1      _200741, _200742), 
*                        flattenThreshold > _200744 : REF(INT32), 
*                        annotation_TYC > _200745 : 
**                          KIND(1 -> TYPE) = CON_PATH(_199656.annotation_TYC), 
*                        annotation_sumarg_INT > _200747 : 
**                          KIND(2) = CON_PATH(_199656.annotation_sumarg_INT), 
*                        annotation_sum_INT > _200748 : 
**                          KIND(1 -> TYPE) = CON_PATH(_199656.annotation_sum_INT), 
*                        +Eannotation_INT > _200749 : 
**                           $POLY$ SIGS_SELF(_200746.+Eannotation_INT, 
**                                     UNSELF_SIG = NONE
**                                     SELF_SIG = SIGF(_200750, 
**        +1   ['a_TYV > _200751 : TYPE, 
**        +1    +E'a_INT > _200752 : 
***       +1       ({_200751 *
***       +1         _200751} -> CON_MU(/-\(_200753)(SUM[ (false, true); 2; ()]))#0)] =>
**                                                        [it_INT > _200754 : 
***                                                           
***       +1   ({CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_TYC);
***       +1        CON_PATH(_200750.'a_TYV)) *
***       +1     CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_TYC);
***       +1        CON_PATH(_200750.'a_TYV))} ->
***       +1      CON_MU(/-\(_200755)(SUM[ (false, true); 2; ()]))#0)])
**                                     ), 
*                        +O+Dannotation_INT > _200756 : 
**                          SIGS_SELF(strbindvar_229902.+O+Dannotation_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [annotation_INT > _200757 : 
***                                           KIND(1 -> TYPE) == 
***       +1   CON_PATH(_199656.hiddenThinModule_INT. annotation_TYC), 
**                                         expose_INT > _200758 : 
***                                            $POLY$ SIGS_SELF(
***       +1   _200746.+O+Dannotation_INT. expose_INT, 
***                                                      UNSELF_SIG = NONE
***                                                      SELF_SIG = 
***       +1   SIGF(_200750, ['a_TYV > _200759 : TYPE] =>
***       +1           [it_INT > _200760 : 
****      +1               (CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_TYC);
****      +1                   CON_PATH(_200750.'a_TYV)) =>
****      +1                  CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_sum_INT);
****      +1                     CON_PATH(_200750.'a_TYV))) == /TOTALNONRECUR\_200761
****      +2                (_200762 : CON_APP(CON_PATH(_199656.hiddenThinModule_INT.
****      +2                                                    annotation_TYC);
****      +2                              CON_PATH(_200750.'a_TYV)))
****      +2                : CON_APP(CON_PATH(_199656.hiddenThinModule_INT.
****      +2                                           annotation_sum_INT);
****      +2                     CON_PATH(_200750.'a_TYV)) =
****      +2             UNROLL(CON_APP(CON_PATH(_199656.hiddenThinModule_INT.
****      +2                                             annotation_TYC);
****      +2                       CON_PATH(_200750.'a_TYV)),
****      +2   CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_sum_INT);
****      +2      CON_PATH(_200750.'a_TYV)),_200762)])
***                                                      ), 
**                                         SUBST_RESULT > _200763 : 
***                                            $POLY$ SIGS_SELF(
***       +1   _200746.+O+Dannotation_INT. SUBST_RESULT, 
***                                                      UNSELF_SIG = NONE
***                                                      SELF_SIG = 
***       +1   SIGF(_200750, ['a_TYV > _200759 : TYPE] =>
***       +1           [it_INT > _200764 : 
****      +1               CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_TYC);
****      +1                  CON_PATH(_200750.'a_TYV)) == 
****      +2   ROLL(CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_TYC);
****      +2           CON_PATH(_200750.'a_TYV)),
****      +3   INJ(0, CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_sum_INT);
****      +3             CON_PATH(_200750.'a_TYV))))])
***                                                      ), 
**                                         FREE_VARS > _200765 : 
***                                            $POLY$ SIGS_SELF(
***       +1   _200746.+O+Dannotation_INT. FREE_VARS, 
***                                                      UNSELF_SIG = NONE
***                                                      SELF_SIG = 
***       +1   SIGF(_200750, ['a_TYV > _200759 : TYPE] =>
***       +1           [it_INT > _200766 : 
****      +1               ({con_vars_LAB = REF(CON_PATH(_199656.hiddenThinModule_INT.
****      +1                                                     VarSet_STR.
****      +1                                                     set_TYC)),
****      +1                 exp_vars_LAB = REF(CON_PATH(_199656.hiddenThinModule_INT.
****      +1                                                     VarSet_STR.
****      +1                                                     set_TYC))} =>
****      +1                  CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_TYC);
****      +1                     CON_PATH(_200750.'a_TYV))) == /TOTALNONRECUR\_200767
****      +2            (_200768 : {con_vars_LAB = REF(CON_PATH(_199656.
****      +2   hiddenThinModule_INT.
****      +2   VarSet_STR.
****      +2   set_TYC)),
****      +2                        exp_vars_LAB = REF(CON_PATH(_199656.
****      +2   hiddenThinModule_INT.
****      +2   VarSet_STR.
****      +2   set_TYC))})
****      +2            : CON_APP(CON_PATH(_199656.hiddenThinModule_INT.
****      +2                                       annotation_TYC);
****      +2                 CON_PATH(_200750.'a_TYV)) =
****      +2         ROLL(CON_APP(CON_PATH(_199656.hiddenThinModule_INT.
****      +2                                       annotation_TYC);
****      +2                 CON_PATH(_200750.'a_TYV)),
****      +2   INJ(1, CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_sum_INT);
****      +2             CON_PATH(_200750.'a_TYV))
****      +3   ,_200768))])
***                                                      ), 
**                                         TYPECHECKED > _200769 : 
***                                            $POLY$ SIGS_SELF(
***       +1   _200746.+O+Dannotation_INT. TYPECHECKED, 
***                                                      UNSELF_SIG = NONE
***                                                      SELF_SIG = 
***       +1   SIGF(_200750, ['a_TYV > _200759 : TYPE] =>
***       +1           [it_INT > _200770 : 
****      +1               (CON_PATH(_200750.'a_TYV) =>
****      +1                  CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_TYC);
****      +1                     CON_PATH(_200750.'a_TYV))) == /TOTALNONRECUR\_200771
****      +2            (_200772 : CON_PATH(_200750.'a_TYV))
****      +2            : CON_APP(CON_PATH(_199656.hiddenThinModule_INT.
****      +2                                       annotation_TYC);
****      +2                 CON_PATH(_200750.'a_TYV)) =
****      +2         ROLL(CON_APP(CON_PATH(_199656.hiddenThinModule_INT.
****      +2                                       annotation_TYC);
****      +2                 CON_PATH(_200750.'a_TYV)),
****      +2   INJ(2, CON_APP(CON_PATH(_199656.hiddenThinModule_INT. annotation_sum_INT);
****      +2             CON_PATH(_200750.'a_TYV))
****      +3   ,_200772))])
***                                                      )]
**                             ), 
*                        openness_TYC > _200773 : 
**                          TYPE = CON_MU(/-\(_200774)(SUM[ (Closure, Code, Open); 3; ()]))#0, 
*                        openness_sumarg_INT > _200775 : KIND(0) = (), 
*                        openness_sum_INT > _200776 : 
**                          TYPE = SUM[
**                                    (Closure, Code, Open);
**                                    3;
**                                    CON_PATH(strbindvar_229902.openness_sumarg_INT)], 
*                        +Eopenness_INT > _200777 : 
**                          ({CON_PATH(strbindvar_229902.openness_TYC) *
**                            CON_PATH(strbindvar_229902.openness_TYC)} ->
**                             CON_MU(/-\(_200778)(SUM[ (false, true); 2; ()]))#0), 
*                        +O+Dopenness_INT > _200779 : 
**                          SIGS_SELF(strbindvar_229902.+O+Dopenness_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [openness_INT > _200780 : 
***                                           TYPE == CON_PATH(
***       +1   strbindvar_229902.openness_TYC), 
**                                         expose_INT > _200781 : 
***                                           (CON_PATH(strbindvar_229902.openness_TYC) =>
***                                              CON_PATH(strbindvar_229902.
***       +1   openness_sum_INT)) == /TOTALNONRECUR\_200782
***       +1                 (_200783 : CON_PATH(strbindvar_229902.
***       +1   openness_TYC))
***       +1                 : CON_PATH(strbindvar_229902.openness_sum_INT) =
***       +1              UNROLL(CON_PATH(strbindvar_229902.openness_TYC),
***       +1   CON_PATH(strbindvar_229902.openness_sum_INT),_200783), 
**                                         Closure > _200784 : 
***                                           CON_PATH(strbindvar_229902.openness_TYC) == ROLL(CON_PATH(strbindvar_229902.openness_TYC),INJ(0, 
***       +1   CON_PATH(strbindvar_229902.openness_sum_INT))), 
**                                         Code > _200785 : 
***                                           CON_PATH(strbindvar_229902.openness_TYC) == ROLL(CON_PATH(strbindvar_229902.openness_TYC),INJ(1, 
***       +1   CON_PATH(strbindvar_229902.openness_sum_INT))), 
**                                         Open > _200786 : 
***                                           CON_PATH(strbindvar_229902.openness_TYC) == ROLL(CON_PATH(strbindvar_229902.openness_TYC),INJ(2, 
***       +1   CON_PATH(strbindvar_229902.openness_sum_INT)))]
**                             ), 
*                        effect_TYC > _200787 : 
**                          TYPE = CON_MU(/-\(_200788)(SUM[ (Partial, Total); 2; ()]))#0, 
*                        effect_sumarg_INT > _200789 : KIND(0) = (), 
*                        effect_sum_INT > _200790 : 
**                          TYPE = SUM[
**                                    (Partial, Total);
**                                    2;
**                                    CON_PATH(strbindvar_229902.effect_sumarg_INT)], 
*                        +Eeffect_INT > _200791 : 
**                          ({CON_PATH(strbindvar_229902.effect_TYC) *
**                            CON_PATH(strbindvar_229902.effect_TYC)} ->
**                             CON_MU(/-\(_200778)(SUM[ (false, true); 2; ()]))#0), 
*                        +O+Deffect_INT > _200792 : 
**                          SIGS_SELF(strbindvar_229902.+O+Deffect_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [effect_INT > _200793 : 
***                                           TYPE == CON_PATH(
***       +1   strbindvar_229902.effect_TYC), 
**                                         expose_INT > _200794 : 
***                                           (CON_PATH(strbindvar_229902.effect_TYC) =>
***                                              CON_PATH(strbindvar_229902.effect_sum_INT)) == /TOTALNONRECUR\_200795
***       +1               (_200796 : CON_PATH(strbindvar_229902.
***       +1   effect_TYC))
***       +1               : CON_PATH(strbindvar_229902.effect_sum_INT) =
***       +1            UNROLL(CON_PATH(strbindvar_229902.effect_TYC),
***       +1   CON_PATH(strbindvar_229902.effect_sum_INT),_200796), 
**                                         Partial > _200797 : 
***                                           CON_PATH(strbindvar_229902.effect_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.effect_TYC),INJ(0, 
***       +2   CON_PATH(strbindvar_229902.effect_sum_INT))), 
**                                         Total > _200798 : 
***                                           CON_PATH(strbindvar_229902.effect_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.effect_TYC),INJ(1, 
***       +2   CON_PATH(strbindvar_229902.effect_sum_INT)))]
**                             ), 
*                        recursive_TYC > _200799 : 
**                          TYPE = CON_MU(/-\(_200800)(SUM[
**                                                        (Arbitrary, Leaf, NonRecursive);
**                                                        3;
**                                                        ()]))#0, 
*                        recursive_sumarg_INT > _200801 : KIND(0) = (), 
*                        recursive_sum_INT > _200802 : 
**                          TYPE = SUM[
**                                    (Arbitrary, Leaf, NonRecursive);
**                                    3;
**                                    CON_PATH(strbindvar_229902.recursive_sumarg_INT)], 
*                        +Erecursive_INT > _200803 : 
**                          ({CON_PATH(strbindvar_229902.recursive_TYC) *
**                            CON_PATH(strbindvar_229902.recursive_TYC)} ->
**                             CON_MU(/-\(_200778)(SUM[ (false, true); 2; ()]))#0), 
*                        +O+Drecursive_INT > _200804 : 
**                          SIGS_SELF(strbindvar_229902.+O+Drecursive_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [recursive_INT > _200805 : 
***                                           TYPE == CON_PATH(
***       +1   strbindvar_229902.recursive_TYC), 
**                                         expose_INT > _200806 : 
***                                           (CON_PATH(strbindvar_229902.recursive_TYC) =>
***                                              CON_PATH(strbindvar_229902.
***       +1   recursive_sum_INT)) == /TOTALNONRECUR\_200807
***       +1                  (_200808 : CON_PATH(strbindvar_229902.
***       +1   recursive_TYC))
***       +1                  : CON_PATH(strbindvar_229902.recursive_sum_INT) =
***       +1               UNROLL(CON_PATH(strbindvar_229902.recursive_TYC),
***       +1   CON_PATH(strbindvar_229902.recursive_sum_INT),_200808), 
**                                         Arbitrary > _200809 : 
***                                           CON_PATH(strbindvar_229902.recursive_TYC) == ROLL(CON_PATH(strbindvar_229902.recursive_TYC),INJ(0, 
***       +1   CON_PATH(strbindvar_229902.recursive_sum_INT))), 
**                                         Leaf > _200810 : 
***                                           CON_PATH(strbindvar_229902.recursive_TYC) == ROLL(CON_PATH(strbindvar_229902.recursive_TYC),INJ(1, 
***       +1   CON_PATH(strbindvar_229902.recursive_sum_INT))), 
**                                         NonRecursive > _200811 : 
***                                           CON_PATH(strbindvar_229902.recursive_TYC) == ROLL(CON_PATH(strbindvar_229902.recursive_TYC),INJ(2, 
***       +1   CON_PATH(strbindvar_229902.recursive_sum_INT)))]
**                             ), 
*                        niltrace_TYC > _200812 : 
**                          TYPE = CON_MU(/-\(_200813)(SUM[
**                                                        (TraceUnknown,
**                                                         TraceCompute,
**                                                         TraceKnown);
**                                                        1;
**                                                        (CON_PATH(
**        +1   strbindvar_229902.var_TYC),
**                                                         CON_PATH(_199575.traceinfo_TYC))]))#0, 
*                        niltrace_sumarg_INT > _200815 : 
**                          KIND(2) = (CON_PATH(strbindvar_229902.var_TYC),
**                                     CON_PATH(_199575.traceinfo_TYC)), 
*                        niltrace_sum_INT > _200816 : 
**                          TYPE = SUM[
**                                    (TraceUnknown, TraceCompute, TraceKnown);
**                                    1;
**                                    CON_PATH(strbindvar_229902.niltrace_sumarg_INT)], 
*                        +Eniltrace_INT > _200817 : 
**                          ({CON_PATH(strbindvar_229902.niltrace_TYC) *
**                            CON_PATH(strbindvar_229902.niltrace_TYC)} ->
**                             CON_MU(/-\(_200778)(SUM[ (false, true); 2; ()]))#0), 
*                        +O+Dniltrace_INT > _200818 : 
**                          SIGS_SELF(strbindvar_229902.+O+Dniltrace_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [niltrace_INT > _200819 : 
***                                           TYPE == CON_PATH(
***       +1   strbindvar_229902.niltrace_TYC), 
**                                         expose_INT > _200820 : 
***                                           (CON_PATH(strbindvar_229902.niltrace_TYC) =>
***                                              CON_PATH(strbindvar_229902.
***       +1   niltrace_sum_INT)) == /TOTALNONRECUR\_200821
***       +1                 (_200822 : CON_PATH(strbindvar_229902.
***       +1   niltrace_TYC))
***       +1                 : CON_PATH(strbindvar_229902.niltrace_sum_INT) =
***       +1              UNROLL(CON_PATH(strbindvar_229902.niltrace_TYC),
***       +1   CON_PATH(strbindvar_229902.niltrace_sum_INT),_200822), 
**                                         TraceUnknown > _200823 : 
***                                           CON_PATH(strbindvar_229902.niltrace_TYC) == ROLL(CON_PATH(strbindvar_229902.niltrace_TYC),INJ(0, 
***       +1   CON_PATH(strbindvar_229902.niltrace_sum_INT))), 
**                                         TraceCompute > _200824 : 
***                                           (CON_PATH(strbindvar_229902.var_TYC) =>
***                                              CON_PATH(strbindvar_229902.niltrace_TYC)) == /TOTALNONRECUR\_200825
***       +1             (_200826 : CON_PATH(strbindvar_229902.var_TYC))
***       +1             : CON_PATH(strbindvar_229902.niltrace_TYC) =
***       +1          ROLL(CON_PATH(strbindvar_229902.niltrace_TYC),
***       +1   INJ(1, CON_PATH(strbindvar_229902.niltrace_sum_INT),_200826)), 
**                                         TraceKnown > _200827 : 
***                                           (CON_PATH(_199575.traceinfo_TYC) =>
***                                              CON_PATH(strbindvar_229902.niltrace_TYC)) == /TOTALNONRECUR\_200828
***       +1             (_200829 : CON_PATH(_199575.traceinfo_TYC))
***       +1             : CON_PATH(strbindvar_229902.niltrace_TYC) =
***       +1          ROLL(CON_PATH(strbindvar_229902.niltrace_TYC),
***       +1   INJ(2, CON_PATH(strbindvar_229902.niltrace_sum_INT),_200829))]
**                             ), 
*                        letsort_TYC > _200830 : 
**                          TYPE = CON_MU(/-\(_200831)(SUM[ (Parallel, Sequential); 2; ()]))#0, 
*                        letsort_sumarg_INT > _200832 : KIND(0) = (), 
*                        letsort_sum_INT > _200833 : 
**                          TYPE = SUM[
**                                    (Parallel, Sequential);
**                                    2;
**                                    CON_PATH(strbindvar_229902.letsort_sumarg_INT)], 
*                        +Eletsort_INT > _200834 : 
**                          ({CON_PATH(strbindvar_229902.letsort_TYC) *
**                            CON_PATH(strbindvar_229902.letsort_TYC)} ->
**                             CON_MU(/-\(_200778)(SUM[ (false, true); 2; ()]))#0), 
*                        +O+Dletsort_INT > _200835 : 
**                          SIGS_SELF(strbindvar_229902.+O+Dletsort_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [letsort_INT > _200836 : 
***                                           TYPE == CON_PATH(
***       +1   strbindvar_229902.letsort_TYC), 
**                                         expose_INT > _200837 : 
***                                           (CON_PATH(strbindvar_229902.letsort_TYC) =>
***                                              CON_PATH(strbindvar_229902.
***       +1   letsort_sum_INT)) == /TOTALNONRECUR\_200838
***       +1                (_200839 : CON_PATH(strbindvar_229902.
***       +1   letsort_TYC))
***       +1                : CON_PATH(strbindvar_229902.letsort_sum_INT) =
***       +1             UNROLL(CON_PATH(strbindvar_229902.letsort_TYC),
***       +1   CON_PATH(strbindvar_229902.letsort_sum_INT),_200839), 
**                                         Parallel > _200840 : 
***                                           CON_PATH(strbindvar_229902.letsort_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.letsort_TYC),INJ(0, 
***       +2   CON_PATH(strbindvar_229902.letsort_sum_INT))), 
**                                         Sequential > _200841 : 
***                                           CON_PATH(strbindvar_229902.letsort_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.letsort_TYC),INJ(1, 
***       +2   CON_PATH(strbindvar_229902.letsort_sum_INT)))]
**                             ), 
*                        phase_TYC > _200842 : 
**                          TYPE = CON_MU(/-\(_200843)(SUM[ (Compiletime, Runtime); 2; ()]))#0, 
*                        phase_sumarg_INT > _200844 : KIND(0) = (), 
*                        phase_sum_INT > _200845 : 
**                          TYPE = SUM[
**                                    (Compiletime, Runtime);
**                                    2;
**                                    CON_PATH(strbindvar_229902.phase_sumarg_INT)], 
*                        +Ephase_INT > _200846 : 
**                          ({CON_PATH(strbindvar_229902.phase_TYC) *
**                            CON_PATH(strbindvar_229902.phase_TYC)} ->
**                             CON_MU(/-\(_200778)(SUM[ (false, true); 2; ()]))#0), 
*                        +O+Dphase_INT > _200847 : 
**                          SIGS_SELF(strbindvar_229902.+O+Dphase_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [phase_INT > _200848 : 
***                                           TYPE == CON_PATH(strbindvar_229902.phase_TYC), 
**                                         expose_INT > _200849 : 
***                                           (CON_PATH(strbindvar_229902.phase_TYC) =>
***                                              CON_PATH(strbindvar_229902.phase_sum_INT)) == /TOTALNONRECUR\_200850
***       +1              (_200851 : CON_PATH(strbindvar_229902.phase_TYC))
***       +1              : CON_PATH(strbindvar_229902.phase_sum_INT) =
***       +1           UNROLL(CON_PATH(strbindvar_229902.phase_TYC),
***       +1   CON_PATH(strbindvar_229902.phase_sum_INT),_200851), 
**                                         Compiletime > _200852 : 
***                                           CON_PATH(strbindvar_229902.phase_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.phase_TYC),INJ(0, 
***       +2   CON_PATH(strbindvar_229902.phase_sum_INT))), 
**                                         Runtime > _200853 : 
***                                           CON_PATH(strbindvar_229902.phase_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.phase_TYC),INJ(1, 
***       +2   CON_PATH(strbindvar_229902.phase_sum_INT)))]
**                             ), 
*                        primcon_TYC > _200854 : 
**                          TYPE = CON_MU(/-\(_200855)(SUM[
**                                                        (Array_c,
**                                                         Exn_c,
**                                                         Exntag_c,
**                                                         Loc_c,
**                                                         Vector_c,
**                                                         BoxFloat_c,
**                                                         Float_c,
**                                                         Int_c,
**                                                         Record_c,
**                                                         Sum_c,
**                                                         Vararg_c);
**                                                        5;
**                                                        (CON_PATH(_200145.floatsize_TYC),
**                                                         CON_PATH(_200145.floatsize_TYC),
**                                                         CON_PATH(_200145.intsize_TYC),
**                                                         {
**        +1   CON_APP(_742;
**        +1      CON_PATH(strbindvar_229902.label_TYC)) *
**                                                          
**        +1   CON_APP(_785;
**        +1      CON_APP(_742; CON_PATH(strbindvar_229902.var_TYC)))},
**                                                         {
**        +1   totalcount_LAB = CON_PATH(strbindvar_229902.w32_TYC),
**                                                          
**        +1   tagcount_LAB = CON_PATH(strbindvar_229902.w32_TYC),
**                                                          
**        +1   known_LAB = CON_APP(_785; CON_PATH(strbindvar_229902.w32_TYC))},
**                                                         {
**        +1   CON_PATH(strbindvar_229902.openness_TYC) *
**                                                          
**        +1   CON_PATH(strbindvar_229902.effect_TYC)})]))#0, 
*                        primcon_sumarg_INT > _200858 : 
**                          KIND(6) = (CON_PATH(_200145.floatsize_TYC),
**                                     CON_PATH(_200145.floatsize_TYC),
**                                     CON_PATH(_200145.intsize_TYC),
**                                     {CON_APP(_742;
**                                         CON_PATH(strbindvar_229902.label_TYC)) *
**                                      CON_APP(_785;
**                                         CON_APP(_742;
**                                            CON_PATH(strbindvar_229902.var_TYC)))},
**                                     {totalcount_LAB = CON_PATH(
**        +1   strbindvar_229902.w32_TYC),
**                                      tagcount_LAB = CON_PATH(strbindvar_229902.w32_TYC),
**                                      known_LAB = CON_APP(_785;
**                                                     CON_PATH(strbindvar_229902.w32_TYC))},
**                                     {CON_PATH(strbindvar_229902.openness_TYC) *
**                                      CON_PATH(strbindvar_229902.effect_TYC)}), 
*                        primcon_sum_INT > _200859 : 
**                          TYPE = SUM[
**                                    (Array_c,
**                                     Exn_c,
**                                     Exntag_c,
**                                     Loc_c,
**                                     Vector_c,
**                                     BoxFloat_c,
**                                     Float_c,
**                                     Int_c,
**                                     Record_c,
**                                     Sum_c,
**                                     Vararg_c);
**                                    5;
**                                    CON_PATH(strbindvar_229902.primcon_sumarg_INT)], 
*                        +Eprimcon_INT > _200860 : 
**                          ({CON_PATH(strbindvar_229902.primcon_TYC) *
**                            CON_PATH(strbindvar_229902.primcon_TYC)} ->
**                             CON_MU(/-\(_200778)(SUM[ (false, true); 2; ()]))#0), 
*                        +O+Dprimcon_INT > _200861 : 
**                          SIGS_SELF(strbindvar_229902.+O+Dprimcon_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [primcon_INT > _200862 : 
***                                           TYPE == CON_PATH(
***       +1   strbindvar_229902.primcon_TYC), 
**                                         expose_INT > _200863 : 
***                                           (CON_PATH(strbindvar_229902.primcon_TYC) =>
***                                              CON_PATH(strbindvar_229902.
***       +1   primcon_sum_INT)) == /TOTALNONRECUR\_200864
***       +1                (_200865 : CON_PATH(strbindvar_229902.
***       +1   primcon_TYC))
***       +1                : CON_PATH(strbindvar_229902.primcon_sum_INT) =
***       +1             UNROLL(CON_PATH(strbindvar_229902.primcon_TYC),
***       +1   CON_PATH(strbindvar_229902.primcon_sum_INT),_200865), 
**                                         Array_c > _200866 : 
***                                           CON_PATH(strbindvar_229902.primcon_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.primcon_TYC),INJ(0, 
***       +2   CON_PATH(strbindvar_229902.primcon_sum_INT))), 
**                                         Exn_c > _200867 : 
***                                           CON_PATH(strbindvar_229902.primcon_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.primcon_TYC),INJ(1, 
***       +2   CON_PATH(strbindvar_229902.primcon_sum_INT))), 
**                                         Exntag_c > _200868 : 
***                                           CON_PATH(strbindvar_229902.primcon_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.primcon_TYC),INJ(2, 
***       +2   CON_PATH(strbindvar_229902.primcon_sum_INT))), 
**                                         Loc_c > _200869 : 
***                                           CON_PATH(strbindvar_229902.primcon_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.primcon_TYC),INJ(3, 
***       +2   CON_PATH(strbindvar_229902.primcon_sum_INT))), 
**                                         Vector_c > _200870 : 
***                                           CON_PATH(strbindvar_229902.primcon_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.primcon_TYC),INJ(4, 
***       +2   CON_PATH(strbindvar_229902.primcon_sum_INT))), 
**                                         BoxFloat_c > _200871 : 
***                                           (CON_PATH(_200145.floatsize_TYC) =>
***                                              CON_PATH(strbindvar_229902.primcon_TYC)) == /TOTALNONRECUR\_200872
***       +1            (_200873 : CON_PATH(_200145.floatsize_TYC))
***       +1            : CON_PATH(strbindvar_229902.primcon_TYC) =
***       +1         ROLL(CON_PATH(strbindvar_229902.primcon_TYC),
***       +1   INJ(5, CON_PATH(strbindvar_229902.primcon_sum_INT),_200873)), 
**                                         Float_c > _200874 : 
***                                           (CON_PATH(_200145.floatsize_TYC) =>
***                                              CON_PATH(strbindvar_229902.primcon_TYC)) == /TOTALNONRECUR\_200875
***       +1            (_200876 : CON_PATH(_200145.floatsize_TYC))
***       +1            : CON_PATH(strbindvar_229902.primcon_TYC) =
***       +1         ROLL(CON_PATH(strbindvar_229902.primcon_TYC),
***       +1   INJ(6, CON_PATH(strbindvar_229902.primcon_sum_INT),_200876)), 
**                                         Int_c > _200877 : 
***                                           (CON_PATH(_200145.intsize_TYC) =>
***                                              CON_PATH(strbindvar_229902.primcon_TYC)) == /TOTALNONRECUR\_200878
***       +1            (_200879 : CON_PATH(_200145.intsize_TYC))
***       +1            : CON_PATH(strbindvar_229902.primcon_TYC) =
***       +1         ROLL(CON_PATH(strbindvar_229902.primcon_TYC),
***       +1   INJ(7, CON_PATH(strbindvar_229902.primcon_sum_INT),_200879)), 
**                                         Record_c > _200880 : 
***                                           ({CON_APP(_742;
***                                                CON_PATH(strbindvar_229902.label_TYC)) *
***                                             CON_APP(_785;
***                                                CON_APP(_742;
***                                                   CON_PATH(strbindvar_229902.var_TYC)))} =>
***                                              CON_PATH(strbindvar_229902.primcon_TYC)) == /TOTALNONRECUR\_200881
***       +1                  (_200882 : {CON_APP(_742;
***       +1                                 CON_PATH(strbindvar_229902.
***       +1   label_TYC)) *
***       +1                              CON_APP(_785;
***       +1                                 CON_APP(_742;
***       +1                                    CON_PATH(strbindvar_229902.
***       +1   var_TYC)))})
***       +1                  : CON_PATH(strbindvar_229902.primcon_TYC) =
***       +1               ROLL(CON_PATH(strbindvar_229902.primcon_TYC),
***       +1   INJ(8, CON_PATH(strbindvar_229902.primcon_sum_INT),_200882)), 
**                                         Sum_c > _200883 : 
***                                           ({totalcount_LAB = 
***       +1   CON_PATH(strbindvar_229902.w32_TYC),
***                                             tagcount_LAB = 
***       +1   CON_PATH(strbindvar_229902.w32_TYC),
***                                             known_LAB = 
***       +1   CON_APP(_785;
***       +1      CON_PATH(strbindvar_229902.w32_TYC))} =>
***                                              CON_PATH(strbindvar_229902.primcon_TYC)) == /TOTALNONRECUR\_200884
***       +1                           (_200885 : {totalcount_LAB = 
***       +1   CON_PATH(strbindvar_229902.w32_TYC),
***       +1                                       tagcount_LAB = 
***       +1   CON_PATH(strbindvar_229902.w32_TYC),
***       +1                                       known_LAB = CON_APP(_785;
***       +1                                                      
***       +1   CON_PATH(strbindvar_229902.w32_TYC))})
***       +1                           : CON_PATH(strbindvar_229902.
***       +1   primcon_TYC) =
***       +1                        ROLL(CON_PATH(strbindvar_229902.
***       +1   primcon_TYC),
***       +1   INJ(9, CON_PATH(strbindvar_229902.primcon_sum_INT),_200885)), 
**                                         Vararg_c > _200886 : 
***                                           ({CON_PATH(strbindvar_229902.openness_TYC) *
***                                             CON_PATH(strbindvar_229902.effect_TYC)} =>
***                                              CON_PATH(strbindvar_229902.primcon_TYC)) == /TOTALNONRECUR\_200887
***       +1                (_200888 : {CON_PATH(strbindvar_229902.
***       +1   openness_TYC) *
***       +1                            CON_PATH(strbindvar_229902.
***       +1   effect_TYC)})
***       +1                : CON_PATH(strbindvar_229902.primcon_TYC) =
***       +1             ROLL(CON_PATH(strbindvar_229902.primcon_TYC),
***       +1   INJ(10, CON_PATH(strbindvar_229902.primcon_sum_INT),_200888))]
**                             ), 
*                        nilprim_TYC > _200889 : 
**                          TYPE = CON_MU(/-\(_200890)(SUM[
**                                                        (make_exntag,
**                                                         peq,
**                                                         roll,
**                                                         unroll,
**                                                         box_float,
**                                                         inj_exn,
**                                                         inject,
**                                                         inject_known,
**                                                         inject_known_record,
**                                                         make_onearg,
**                                                         make_vararg,
**                                                         partialRecord,
**                                                         project,
**                                                         project_known,
**                                                         project_known_record,
**                                                         record,
**                                                         select,
**                                                         unbox_float);
**                                                        4;
**                                                        (CON_PATH(_200145.floatsize_TYC),
**                                                         _902,
**                                                         CON_PATH(_193843.word_TYC),
**                                                         CON_PATH(_193843.word_TYC),
**                                                         CON_PATH(_193843.word_TYC),
**                                                         {
**        +1   CON_PATH(strbindvar_229902.openness_TYC) *
**                                                          
**        +1   CON_PATH(strbindvar_229902.effect_TYC)},
**                                                         {
**        +1   CON_PATH(strbindvar_229902.openness_TYC) *
**                                                          
**        +1   CON_PATH(strbindvar_229902.effect_TYC)},
**                                                         {
**        +1   CON_APP(_742;
**        +1      CON_PATH(strbindvar_229902.label_TYC)) *
**                                                          INT32},
**                                                         CON_PATH(_193843.word_TYC),
**                                                         CON_PATH(_193843.word_TYC),
**                                                         {CON_PATH(_193843.word_TYC) *
**                                                          
**        +1   CON_PATH(strbindvar_229902.label_TYC)},
**                                                         CON_APP(_742;
**                                                            
**        +1   CON_PATH(strbindvar_229902.label_TYC)),
**                                                         CON_PATH(
**        +1   strbindvar_229902.label_TYC),
**                                                         CON_PATH(_200145.floatsize_TYC))]))#0, 
*                        nilprim_sumarg_INT > _200893 : 
**                          KIND(14) = (CON_PATH(_200145.floatsize_TYC),
**                                      _902,
**                                      CON_PATH(_193843.word_TYC),
**                                      CON_PATH(_193843.word_TYC),
**                                      CON_PATH(_193843.word_TYC),
**                                      {CON_PATH(strbindvar_229902.openness_TYC) *
**                                       CON_PATH(strbindvar_229902.effect_TYC)},
**                                      {CON_PATH(strbindvar_229902.openness_TYC) *
**                                       CON_PATH(strbindvar_229902.effect_TYC)},
**                                      {CON_APP(_742;
**                                          CON_PATH(strbindvar_229902.label_TYC)) *
**                                       INT32},
**                                      CON_PATH(_193843.word_TYC),
**                                      CON_PATH(_193843.word_TYC),
**                                      {CON_PATH(_193843.word_TYC) *
**                                       CON_PATH(strbindvar_229902.label_TYC)},
**                                      CON_APP(_742;
**                                         CON_PATH(strbindvar_229902.label_TYC)),
**                                      CON_PATH(strbindvar_229902.label_TYC),
**                                      CON_PATH(_200145.floatsize_TYC)), 
*                        nilprim_sum_INT > _200894 : 
**                          TYPE = SUM[
**                                    (make_exntag,
**                                     peq,
**                                     roll,
**                                     unroll,
**                                     box_float,
**                                     inj_exn,
**                                     inject,
**                                     inject_known,
**                                     inject_known_record,
**                                     make_onearg,
**                                     make_vararg,
**                                     partialRecord,
**                                     project,
**                                     project_known,
**                                     project_known_record,
**                                     record,
**                                     select,
**                                     unbox_float);
**                                    4;
**                                    CON_PATH(strbindvar_229902.nilprim_sumarg_INT)], 
*                        +Enilprim_INT > _200895 : 
**                          ({CON_PATH(strbindvar_229902.nilprim_TYC) *
**                            CON_PATH(strbindvar_229902.nilprim_TYC)} ->
**                             CON_MU(/-\(_200778)(SUM[ (false, true); 2; ()]))#0), 
*                        +O+Dnilprim_INT > _200896 : 
**                          SIGS_SELF(strbindvar_229902.+O+Dnilprim_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [nilprim_INT > _200897 : 
***                                           TYPE == CON_PATH(
***       +1   strbindvar_229902.nilprim_TYC), 
**                                         expose_INT > _200898 : 
***                                           (CON_PATH(strbindvar_229902.nilprim_TYC) =>
***                                              CON_PATH(strbindvar_229902.
***       +1   nilprim_sum_INT)) == /TOTALNONRECUR\_200899
***       +1                (_200900 : CON_PATH(strbindvar_229902.
***       +1   nilprim_TYC))
***       +1                : CON_PATH(strbindvar_229902.nilprim_sum_INT) =
***       +1             UNROLL(CON_PATH(strbindvar_229902.nilprim_TYC),
***       +1   CON_PATH(strbindvar_229902.nilprim_sum_INT),_200900), 
**                                         make_exntag > _200901 : 
***                                           CON_PATH(strbindvar_229902.nilprim_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),INJ(0, 
***       +2   CON_PATH(strbindvar_229902.nilprim_sum_INT))), 
**                                         peq > _200902 : 
***                                           CON_PATH(strbindvar_229902.nilprim_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),INJ(1, 
***       +2   CON_PATH(strbindvar_229902.nilprim_sum_INT))), 
**                                         roll > _200903 : 
***                                           CON_PATH(strbindvar_229902.nilprim_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),INJ(2, 
***       +2   CON_PATH(strbindvar_229902.nilprim_sum_INT))), 
**                                         unroll > _200904 : 
***                                           CON_PATH(strbindvar_229902.nilprim_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),INJ(3, 
***       +2   CON_PATH(strbindvar_229902.nilprim_sum_INT))), 
**                                         box_float > _200905 : 
***                                           (CON_PATH(_200145.floatsize_TYC) =>
***                                              CON_PATH(strbindvar_229902.nilprim_TYC)) == /TOTALNONRECUR\_200906
***       +1            (_200907 : CON_PATH(_200145.floatsize_TYC))
***       +1            : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1         ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),
***       +1   INJ(4, CON_PATH(strbindvar_229902.nilprim_sum_INT),_200907)), 
**                                         inj_exn > _200908 : 
***                                           (_902 =>
***                                              CON_PATH(strbindvar_229902.nilprim_TYC)) == /TOTALNONRECUR\_200909
***       +1            (_200910 : _902)
***       +1            : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1         ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),
***       +1   INJ(5, CON_PATH(strbindvar_229902.nilprim_sum_INT),_200910)), 
**                                         inject > _200911 : 
***                                           (CON_PATH(_193843.word_TYC) =>
***                                              CON_PATH(strbindvar_229902.nilprim_TYC)) == /TOTALNONRECUR\_200912
***       +1            (_200913 : CON_PATH(_193843.word_TYC))
***       +1            : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1         ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),
***       +1   INJ(6, CON_PATH(strbindvar_229902.nilprim_sum_INT),_200913)), 
**                                         inject_known > _200914 : 
***                                           (CON_PATH(_193843.word_TYC) =>
***                                              CON_PATH(strbindvar_229902.nilprim_TYC)) == /TOTALNONRECUR\_200915
***       +1            (_200916 : CON_PATH(_193843.word_TYC))
***       +1            : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1         ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),
***       +1   INJ(7, CON_PATH(strbindvar_229902.nilprim_sum_INT),_200916)), 
**                                         inject_known_record > _200917 : 
***                                           (CON_PATH(_193843.word_TYC) =>
***                                              CON_PATH(strbindvar_229902.nilprim_TYC)) == /TOTALNONRECUR\_200918
***       +1            (_200919 : CON_PATH(_193843.word_TYC))
***       +1            : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1         ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),
***       +1   INJ(8, CON_PATH(strbindvar_229902.nilprim_sum_INT),_200919)), 
**                                         make_onearg > _200920 : 
***                                           ({CON_PATH(strbindvar_229902.openness_TYC) *
***                                             CON_PATH(strbindvar_229902.effect_TYC)} =>
***                                              CON_PATH(strbindvar_229902.nilprim_TYC)) == /TOTALNONRECUR\_200921
***       +1                (_200922 : {CON_PATH(strbindvar_229902.
***       +1   openness_TYC) *
***       +1                            CON_PATH(strbindvar_229902.
***       +1   effect_TYC)})
***       +1                : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1             ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),
***       +1   INJ(9, CON_PATH(strbindvar_229902.nilprim_sum_INT),_200922)), 
**                                         make_vararg > _200923 : 
***                                           ({CON_PATH(strbindvar_229902.openness_TYC) *
***                                             CON_PATH(strbindvar_229902.effect_TYC)} =>
***                                              CON_PATH(strbindvar_229902.nilprim_TYC)) == /TOTALNONRECUR\_200924
***       +1                (_200925 : {CON_PATH(strbindvar_229902.
***       +1   openness_TYC) *
***       +1                            CON_PATH(strbindvar_229902.
***       +1   effect_TYC)})
***       +1                : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1             ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),
***       +1   INJ(10, CON_PATH(strbindvar_229902.nilprim_sum_INT),_200925)), 
**                                         partialRecord > _200926 : 
***                                           ({CON_APP(_742;
***                                                CON_PATH(strbindvar_229902.label_TYC)) *
***                                             INT32} =>
***                                              CON_PATH(strbindvar_229902.nilprim_TYC)) == /TOTALNONRECUR\_200927
***       +1                 (_200928 : {CON_APP(_742;
***       +1                                CON_PATH(strbindvar_229902.
***       +1   label_TYC)) *
***       +1                             INT32})
***       +1                 : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1              ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),
***       +1   INJ(11, CON_PATH(strbindvar_229902.nilprim_sum_INT),_200928)), 
**                                         project > _200929 : 
***                                           (CON_PATH(_193843.word_TYC) =>
***                                              CON_PATH(strbindvar_229902.nilprim_TYC)) == /TOTALNONRECUR\_200930
***       +1            (_200931 : CON_PATH(_193843.word_TYC))
***       +1            : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1         ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),
***       +1   INJ(12, CON_PATH(strbindvar_229902.nilprim_sum_INT),_200931)), 
**                                         project_known > _200932 : 
***                                           (CON_PATH(_193843.word_TYC) =>
***                                              CON_PATH(strbindvar_229902.nilprim_TYC)) == /TOTALNONRECUR\_200933
***       +1            (_200934 : CON_PATH(_193843.word_TYC))
***       +1            : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1         ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),
***       +1   INJ(13, CON_PATH(strbindvar_229902.nilprim_sum_INT),_200934)), 
**                                         project_known_record > _200935 : 
***                                           ({CON_PATH(_193843.word_TYC) *
***                                             CON_PATH(strbindvar_229902.label_TYC)} =>
***                                              CON_PATH(strbindvar_229902.nilprim_TYC)) == /TOTALNONRECUR\_200936
***       +1            (_200937 : {CON_PATH(_193843.word_TYC) *
***       +1                        CON_PATH(strbindvar_229902.label_TYC)})
***       +1            : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1         ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),
***       +1   INJ(14, CON_PATH(strbindvar_229902.nilprim_sum_INT),_200937)), 
**                                         record > _200938 : 
***                                           (CON_APP(_742;
***                                               CON_PATH(strbindvar_229902.label_TYC)) =>
***                                              CON_PATH(strbindvar_229902.nilprim_TYC)) == /TOTALNONRECUR\_200939
***       +1              (_200940 : CON_APP(_742;
***       +1                            CON_PATH(strbindvar_229902.
***       +1   label_TYC)))
***       +1              : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1           ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),
***       +1   INJ(15, CON_PATH(strbindvar_229902.nilprim_sum_INT),_200940)), 
**                                         select > _200941 : 
***                                           (CON_PATH(strbindvar_229902.label_TYC) =>
***                                              CON_PATH(strbindvar_229902.nilprim_TYC)) == /TOTALNONRECUR\_200942
***       +1            (_200943 : CON_PATH(strbindvar_229902.label_TYC))
***       +1            : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1         ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),
***       +1   INJ(16, CON_PATH(strbindvar_229902.nilprim_sum_INT),_200943)), 
**                                         unbox_float > _200944 : 
***                                           (CON_PATH(_200145.floatsize_TYC) =>
***                                              CON_PATH(strbindvar_229902.nilprim_TYC)) == /TOTALNONRECUR\_200945
***       +1            (_200946 : CON_PATH(_200145.floatsize_TYC))
***       +1            : CON_PATH(strbindvar_229902.nilprim_TYC) =
***       +1         ROLL(CON_PATH(strbindvar_229902.nilprim_TYC),
***       +1   INJ(17, CON_PATH(strbindvar_229902.nilprim_sum_INT),_200946))]
**                             ), 
*                        allprim_TYC > _200947 : 
**                          TYPE = CON_MU(/-\(_200948)(SUM[
**                                                        (NilPrimOp, PrimOp);
**                                                        0;
**                                                        (CON_PATH(
**        +1   strbindvar_229902.nilprim_TYC),
**                                                         CON_PATH(
**        +1   strbindvar_229902.prim_TYC))]))#0, 
*                        allprim_sumarg_INT > _200949 : 
**                          KIND(2) = (CON_PATH(strbindvar_229902.nilprim_TYC),
**                                     CON_PATH(strbindvar_229902.prim_TYC)), 
*                        allprim_sum_INT > _200950 : 
**                          TYPE = SUM[
**                                    (NilPrimOp, PrimOp);
**                                    0;
**                                    CON_PATH(strbindvar_229902.allprim_sumarg_INT)], 
*                        +Eallprim_INT > _200951 : 
**                          ({CON_PATH(strbindvar_229902.allprim_TYC) *
**                            CON_PATH(strbindvar_229902.allprim_TYC)} ->
**                             CON_MU(/-\(_200778)(SUM[ (false, true); 2; ()]))#0), 
*                        +O+Dallprim_INT > _200952 : 
**                          SIGS_SELF(strbindvar_229902.+O+Dallprim_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [allprim_INT > _200953 : 
***                                           TYPE == CON_PATH(
***       +1   strbindvar_229902.allprim_TYC), 
**                                         expose_INT > _200954 : 
***                                           (CON_PATH(strbindvar_229902.allprim_TYC) =>
***                                              CON_PATH(strbindvar_229902.
***       +1   allprim_sum_INT)) == /TOTALNONRECUR\_200955
***       +1                (_200956 : CON_PATH(strbindvar_229902.
***       +1   allprim_TYC))
***       +1                : CON_PATH(strbindvar_229902.allprim_sum_INT) =
***       +1             UNROLL(CON_PATH(strbindvar_229902.allprim_TYC),
***       +1   CON_PATH(strbindvar_229902.allprim_sum_INT),_200956), 
**                                         NilPrimOp > _200957 : 
***                                           (CON_PATH(strbindvar_229902.nilprim_TYC) =>
***                                              CON_PATH(strbindvar_229902.allprim_TYC)) == /TOTALNONRECUR\_200958
***       +1            (_200959 : CON_PATH(strbindvar_229902.nilprim_TYC))
***       +1            : CON_PATH(strbindvar_229902.allprim_TYC) =
***       +1         ROLL(CON_PATH(strbindvar_229902.allprim_TYC),
***       +1   INJ(0, CON_PATH(strbindvar_229902.allprim_sum_INT),_200959)), 
**                                         PrimOp > _200960 : 
***                                           (CON_PATH(strbindvar_229902.prim_TYC) =>
***                                              CON_PATH(strbindvar_229902.allprim_TYC)) == /TOTALNONRECUR\_200961
***       +1            (_200962 : CON_PATH(strbindvar_229902.prim_TYC))
***       +1            : CON_PATH(strbindvar_229902.allprim_TYC) =
***       +1         ROLL(CON_PATH(strbindvar_229902.allprim_TYC),
***       +1   INJ(1, CON_PATH(strbindvar_229902.allprim_sum_INT),_200962))]
**                             ), 
*                        +Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT > _200963 : 
**                          KIND(8) = CON_MU(/-\(_200964,
**                                               _200965,
**                                               _200966,
**                                               _200967,
**                                               _200968,
**                                               _200969,
**                                               _200970,
**                                               _200971)(SUM[
**                                                           (Con_b,
**                                                            Exp_b,
**                                                            Fixclosure_b,
**                                                            Fixcode_b,
**                                                            Fixopen_b);
**                                                           0;
**                                                           
**        +1   ({CON_PATH(strbindvar_229902.phase_TYC) *
**        +1     _200966},
**        +1    {CON_PATH(strbindvar_229902.var_TYC) *
**        +1     CON_PATH(strbindvar_229902.niltrace_TYC) *
**        +1     _200968},
**        +1    {_729 *
**        +1     CON_APP(CON_PATH(strbindvar_229902.sequence_TYC);
**        +1        CON_PATH(strbindvar_229902.var_TYC),
**        +1        {code_LAB = CON_PATH(strbindvar_229902.var_TYC),
**        +1         tipe_LAB = _200965,
**        +1         cenv_LAB = _200965,
**        +1         venv_LAB = _200968})},
**        +1    CON_APP(CON_PATH(strbindvar_229902.sequence_TYC);
**        +1       CON_PATH(strbindvar_229902.var_TYC), _200969),
**        +1    CON_APP(CON_PATH(strbindvar_229902.sequence_TYC);
**        +1       CON_PATH(strbindvar_229902.var_TYC), _200969))],
**                                                        SUM[
**                                                           (AllArrow_c,
**                                                            Annotate_c,
**                                                            App_c,
**                                                            Closure_c,
**                                                            Crecord_c,
**                                                            ExternArrow_c,
**                                                            Let_c,
**                                                            Mu_c,
**                                                            Prim_c,
**                                                            Proj_c,
**                                                            Typecase_c,
**                                                            Typeof_c,
**                                                            Var_c);
**                                                           0;
**                                                           
**        +1   ({openness_LAB = CON_PATH(strbindvar_229902.openness_TYC),
**        +1     effect_LAB = CON_PATH(strbindvar_229902.effect_TYC),
**        +1     body_type_LAB = _200965,
**        +1     eFormals_LAB = CON_APP(_742;
**        +1                       {CON_APP(_785; CON_PATH(strbindvar_229902.var_TYC)) *
**        +1                        _200965}),
**        +1     fFormals_LAB = CON_PATH(strbindvar_229902.w32_TYC),
**        +1     tFormals_LAB = CON_APP(_742; {CON_PATH(strbindvar_229902.var_TYC) *
**        +1                                   _200970}),
**        +1     isDependent_LAB = _729},
**        +1    {CON_APP(CON_PATH(strbindvar_229902.annotation_TYC); _200970) *
**        +1     _200965},
**        +1    {_200965 *
**        +1     CON_APP(_742; _200965)},
**        +1    {_200965 *
**        +1     _200965},
**        +1    CON_APP(_742; {CON_PATH(strbindvar_229902.label_TYC) *
**        +1                   _200965}),
**        +1    {CON_APP(_742; _200965) *
**        +1     _200965},
**        +1    {CON_PATH(strbindvar_229902.letsort_TYC) *
**        +1     CON_APP(_742; _200966) *
**        +1     _200965},
**        +1    {_729 *
**        +1     CON_APP(CON_PATH(strbindvar_229902.sequence_TYC);
**        +1        CON_PATH(strbindvar_229902.var_TYC), _200965)},
**        +1    {CON_PATH(strbindvar_229902.primcon_TYC) *
**        +1     CON_APP(_742; _200965)},
**        +1    {_200965 *
**        +1     CON_PATH(strbindvar_229902.label_TYC)},
**        +1    {arg_LAB = _200965,
**        +1     kind_LAB = _200970,
**        +1     arms_LAB = CON_APP(_742;
**        +1                   {CON_PATH(strbindvar_229902.primcon_TYC) *
**        +1                    CON_APP(_742; {CON_PATH(strbindvar_229902.var_TYC) *
**        +1                                   _200970}) *
**        +1                    _200965}),
**        +1     default_LAB = _200965},
**        +1    _200968,
**        +1    CON_PATH(strbindvar_229902.var_TYC))],
**                                                        SUM[
**                                                           (Code_cb, Con_cb, Open_cb);
**                                                           0;
**                                                           
**        +1   ({CON_PATH(strbindvar_229902.var_TYC) *
**        +1     CON_APP(_742; {CON_PATH(strbindvar_229902.var_TYC) *
**        +1                    _200970}) *
**        +1     _200965},
**        +1    {CON_PATH(strbindvar_229902.var_TYC) *
**        +1     _200965},
**        +1    {CON_PATH(strbindvar_229902.var_TYC) *
**        +1     CON_APP(_742; {CON_PATH(strbindvar_229902.var_TYC) *
**        +1                    _200970}) *
**        +1     _200965})],
**                                                        SUM[
**                                                           (And_cc,
**                                                            Exp_cc,
**                                                            Not_cc,
**                                                            Or_cc);
**                                                           0;
**                                                           ({_200967 *
**                                                             _200967},
**                                                            _200968,
**                                                            _200967,
**                                                            {_200967 *
**                                                             _200967})],
**                                                        SUM[
**                                                           (App_e,
**                                                            Const_e,
**                                                            ExternApp_e,
**                                                            Handle_e,
**                                                            Let_e,
**                                                            Prim_e,
**                                                            Raise_e,
**                                                            Switch_e,
**                                                            Var_e);
**                                                           0;
**                                                           
**        +1   ({CON_PATH(strbindvar_229902.openness_TYC) *
**        +1     _200968 *
**        +1     CON_APP(_742; _200965) *
**        +1     CON_APP(_742; _200968) *
**        +1     CON_APP(_742; _200968)},
**        +1    CON_APP(CON_PATH(_200145.value_TYC); _200965, _200968),
**        +1    {_200968 *
**        +1     CON_APP(_742; _200968)},
**        +1    {body_LAB = _200968,
**        +1     result_type_LAB = _200965,
**        +1     bound_LAB = CON_PATH(strbindvar_229902.var_TYC),
**        +1     handler_LAB = _200968},
**        +1    {CON_PATH(strbindvar_229902.letsort_TYC) *
**        +1     CON_APP(_742; _200964) *
**        +1     _200968},
**        +1    {CON_PATH(strbindvar_229902.allprim_TYC) *
**        +1     CON_APP(_742; _200965) *
**        +1     CON_APP(_742; _200968)},
**        +1    {_200968 *
**        +1     _200965},
**        +1    _200971,
**        +1    CON_PATH(strbindvar_229902.var_TYC))],
**                                                        SUM[
**                                                           (Function);
**                                                           0;
**                                                           
**        +1   {effect_LAB = CON_PATH(strbindvar_229902.effect_TYC),
**        +1    body_LAB = _200968,
**        +1    recursive_LAB = CON_PATH(strbindvar_229902.recursive_TYC),
**        +1    body_type_LAB = _200965,
**        +1    eFormals_LAB = CON_APP(_742; {CON_PATH(strbindvar_229902.var_TYC) *
**        +1                                  CON_PATH(strbindvar_229902.niltrace_TYC) *
**        +1                                  _200965}),
**        +1    fFormals_LAB = CON_APP(_742; CON_PATH(strbindvar_229902.var_TYC)),
**        +1    tFormals_LAB = CON_APP(_742; {CON_PATH(strbindvar_229902.var_TYC) *
**        +1                                  _200970}),
**        +1    isDependent_LAB = _729}],
**                                                        SUM[
**                                                           (Type_k,
**                                                            Arrow_k,
**                                                            Record_k,
**                                                            SingleType_k,
**                                                            Single_k);
**                                                           1;
**                                                           
**        +1   ({CON_PATH(strbindvar_229902.openness_TYC) *
**        +1     CON_APP(_742; {CON_PATH(strbindvar_229902.var_TYC) *
**        +1                    _200970}) *
**        +1     _200970},
**        +1    CON_APP(CON_PATH(strbindvar_229902.sequence_TYC);
**        +1       {CON_PATH(strbindvar_229902.label_TYC) *
**        +1        CON_PATH(strbindvar_229902.var_TYC)}, _200970),
**        +1    _200965,
**        +1    _200965)],
**                                                        SUM[
**                                                           (Exncase_e,
**                                                            Ifthenelse_e,
**                                                            Intsw_e,
**                                                            Sumsw_e,
**                                                            Typecase_e);
**                                                           0;
**                                                           
**        +1   ({arg_LAB = _200968,
**        +1     result_type_LAB = _200965,
**        +1     bound_LAB = CON_PATH(strbindvar_229902.var_TYC),
**        +1     arms_LAB = CON_APP(_742; {_200968 *
**        +1                               CON_PATH(strbindvar_229902.niltrace_TYC) *
**        +1                               _200968}),
**        +1     default_LAB = CON_APP(_785; _200968)},
**        +1    {arg_LAB = _200967,
**        +1     elseArm_LAB = _200968,
**        +1     result_type_LAB = _200965,
**        +1     thenArm_LAB = _200968},
**        +1    {arg_LAB = _200968,
**        +1     size_LAB = CON_PATH(_200145.intsize_TYC),
**        +1     result_type_LAB = _200965,
**        +1     arms_LAB = CON_APP(_742; {CON_PATH(strbindvar_229902.w32_TYC) *
**        +1                               _200968}),
**        +1     default_LAB = CON_APP(_785; _200968)},
**        +1    {arg_LAB = _200968,
**        +1     result_type_LAB = _200965,
**        +1     sumtype_LAB = _200965,
**        +1     bound_LAB = CON_PATH(strbindvar_229902.var_TYC),
**        +1     arms_LAB = CON_APP(_742; {CON_PATH(strbindvar_229902.w32_TYC) *
**        +1                               CON_PATH(strbindvar_229902.niltrace_TYC) *
**        +1                               _200968}),
**        +1     default_LAB = CON_APP(_785; _200968)},
**        +1    {arg_LAB = _200965,
**        +1     result_type_LAB = _200965,
**        +1     arms_LAB = CON_APP(_742;
**        +1                   {CON_PATH(strbindvar_229902.primcon_TYC) *
**        +1                    CON_APP(_742; {CON_PATH(strbindvar_229902.var_TYC) *
**        +1                                   _200970}) *
**        +1                    _200968}),
**        +1     default_LAB = _200968})])), 
*                        bnd_TYC > _200973 : 
**                          TYPE = CON_PATH(strbindvar_229902.
**        +1   +Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#0, 
*                        con_TYC > _200974 : 
**                          TYPE = CON_PATH(strbindvar_229902.
**        +1   +Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#1, 
*                        conbnd_TYC > _200975 : 
**                          TYPE = CON_PATH(strbindvar_229902.
**        +1   +Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#2, 
*                        conditionCode_TYC > _200976 : 
**                          TYPE = CON_PATH(strbindvar_229902.
**        +1   +Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#3, 
*                        exp_TYC > _200977 : 
**                          TYPE = CON_PATH(strbindvar_229902.
**        +1   +Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#4, 
*                        function_TYC > _200978 : 
**                          TYPE = CON_PATH(strbindvar_229902.
**        +1   +Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#5, 
*                        kind_TYC > _200979 : 
**                          TYPE = CON_PATH(strbindvar_229902.
**        +1   +Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#6, 
*                        switch_TYC > _200980 : 
**                          TYPE = CON_PATH(strbindvar_229902.
**        +1   +Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#7, 
*                        bnd_sumarg_INT > _200981 : 
**                          KIND(5) = ({CON_PATH(strbindvar_229902.phase_TYC) *
**                                      CON_PATH(strbindvar_229902.conbnd_TYC)},
**                                     {CON_PATH(strbindvar_229902.var_TYC) *
**                                      CON_PATH(strbindvar_229902.niltrace_TYC) *
**                                      CON_PATH(strbindvar_229902.exp_TYC)},
**                                     {_729 *
**                                      CON_APP(CON_PATH(strbindvar_229902.sequence_TYC);
**                                         CON_PATH(strbindvar_229902.var_TYC),
**                                         {code_LAB = CON_PATH(strbindvar_229902.var_TYC),
**                                          tipe_LAB = CON_PATH(strbindvar_229902.con_TYC),
**                                          cenv_LAB = CON_PATH(strbindvar_229902.con_TYC),
**                                          venv_LAB = CON_PATH(strbindvar_229902.exp_TYC)})},
**                                     CON_APP(CON_PATH(strbindvar_229902.sequence_TYC);
**                                        CON_PATH(strbindvar_229902.var_TYC),
**                                        CON_PATH(strbindvar_229902.function_TYC)),
**                                     CON_APP(CON_PATH(strbindvar_229902.sequence_TYC);
**                                        CON_PATH(strbindvar_229902.var_TYC),
**                                        CON_PATH(strbindvar_229902.function_TYC))), 
*                        con_sumarg_INT > _200982 : 
**                          KIND(13) = ({openness_LAB = CON_PATH(
**        +1   strbindvar_229902.openness_TYC),
**                                       effect_LAB = CON_PATH(
**        +1   strbindvar_229902.effect_TYC),
**                                       body_type_LAB = CON_PATH(
**        +1   strbindvar_229902.con_TYC),
**                                       eFormals_LAB = CON_APP(_742;
**                                                         {
**        +1   CON_APP(_785;
**        +1      CON_PATH(strbindvar_229902.var_TYC)) *
**                                                          
**        +1   CON_PATH(strbindvar_229902.con_TYC)}),
**                                       fFormals_LAB = CON_PATH(strbindvar_229902.w32_TYC),
**                                       tFormals_LAB = CON_APP(_742;
**                                                         {
**        +1   CON_PATH(strbindvar_229902.var_TYC) *
**                                                          
**        +1   CON_PATH(strbindvar_229902.kind_TYC)}),
**                                       isDependent_LAB = _729},
**                                      {CON_APP(CON_PATH(strbindvar_229902.annotation_TYC);
**                                          CON_PATH(strbindvar_229902.kind_TYC)) *
**                                       CON_PATH(strbindvar_229902.con_TYC)},
**                                      {CON_PATH(strbindvar_229902.con_TYC) *
**                                       CON_APP(_742;
**                                          CON_PATH(strbindvar_229902.con_TYC))},
**                                      {CON_PATH(strbindvar_229902.con_TYC) *
**                                       CON_PATH(strbindvar_229902.con_TYC)},
**                                      CON_APP(_742;
**                                         {CON_PATH(strbindvar_229902.label_TYC) *
**                                          CON_PATH(strbindvar_229902.con_TYC)}),
**                                      {CON_APP(_742;
**                                          CON_PATH(strbindvar_229902.con_TYC)) *
**                                       CON_PATH(strbindvar_229902.con_TYC)},
**                                      {CON_PATH(strbindvar_229902.letsort_TYC) *
**                                       CON_APP(_742;
**                                          CON_PATH(strbindvar_229902.conbnd_TYC)) *
**                                       CON_PATH(strbindvar_229902.con_TYC)},
**                                      {_729 *
**                                       CON_APP(CON_PATH(strbindvar_229902.sequence_TYC);
**                                          CON_PATH(strbindvar_229902.var_TYC),
**                                          CON_PATH(strbindvar_229902.con_TYC))},
**                                      {CON_PATH(strbindvar_229902.primcon_TYC) *
**                                       CON_APP(_742;
**                                          CON_PATH(strbindvar_229902.con_TYC))},
**                                      {CON_PATH(strbindvar_229902.con_TYC) *
**                                       CON_PATH(strbindvar_229902.label_TYC)},
**                                      {arg_LAB = CON_PATH(strbindvar_229902.con_TYC),
**                                       kind_LAB = CON_PATH(strbindvar_229902.kind_TYC),
**                                       arms_LAB = CON_APP(_742;
**                                                     {CON_PATH(
**        +1   strbindvar_229902.primcon_TYC) *
**                                                      CON_APP(_742;
**                                                         {
**        +1   CON_PATH(strbindvar_229902.var_TYC) *
**                                                          
**        +1   CON_PATH(strbindvar_229902.kind_TYC)}) *
**                                                      CON_PATH(strbindvar_229902.con_TYC)}),
**                                       default_LAB = CON_PATH(strbindvar_229902.con_TYC)},
**                                      CON_PATH(strbindvar_229902.exp_TYC),
**                                      CON_PATH(strbindvar_229902.var_TYC)), 
*                        conbnd_sumarg_INT > _200983 : 
**                          KIND(3) = ({CON_PATH(strbindvar_229902.var_TYC) *
**                                      CON_APP(_742;
**                                         {CON_PATH(strbindvar_229902.var_TYC) *
**                                          CON_PATH(strbindvar_229902.kind_TYC)}) *
**                                      CON_PATH(strbindvar_229902.con_TYC)},
**                                     {CON_PATH(strbindvar_229902.var_TYC) *
**                                      CON_PATH(strbindvar_229902.con_TYC)},
**                                     {CON_PATH(strbindvar_229902.var_TYC) *
**                                      CON_APP(_742;
**                                         {CON_PATH(strbindvar_229902.var_TYC) *
**                                          CON_PATH(strbindvar_229902.kind_TYC)}) *
**                                      CON_PATH(strbindvar_229902.con_TYC)}), 
*                        conditionCode_sumarg_INT > _200984 : 
**                          KIND(4) = ({CON_PATH(strbindvar_229902.conditionCode_TYC) *
**                                      CON_PATH(strbindvar_229902.conditionCode_TYC)},
**                                     CON_PATH(strbindvar_229902.exp_TYC),
**                                     CON_PATH(strbindvar_229902.conditionCode_TYC),
**                                     {CON_PATH(strbindvar_229902.conditionCode_TYC) *
**                                      CON_PATH(strbindvar_229902.conditionCode_TYC)}), 
*                        exp_sumarg_INT > _200985 : 
**                          KIND(9) = ({CON_PATH(strbindvar_229902.openness_TYC) *
**                                      CON_PATH(strbindvar_229902.exp_TYC) *
**                                      CON_APP(_742; CON_PATH(strbindvar_229902.con_TYC)) *
**                                      CON_APP(_742; CON_PATH(strbindvar_229902.exp_TYC)) *
**                                      CON_APP(_742; CON_PATH(strbindvar_229902.exp_TYC))},
**                                     CON_APP(CON_PATH(_200145.value_TYC);
**                                        CON_PATH(strbindvar_229902.con_TYC),
**                                        CON_PATH(strbindvar_229902.exp_TYC)),
**                                     {CON_PATH(strbindvar_229902.exp_TYC) *
**                                      CON_APP(_742; CON_PATH(strbindvar_229902.exp_TYC))},
**                                     {body_LAB = CON_PATH(strbindvar_229902.exp_TYC),
**                                      result_type_LAB = CON_PATH(
**        +1   strbindvar_229902.con_TYC),
**                                      bound_LAB = CON_PATH(strbindvar_229902.var_TYC),
**                                      handler_LAB = CON_PATH(strbindvar_229902.exp_TYC)},
**                                     {CON_PATH(strbindvar_229902.letsort_TYC) *
**                                      CON_APP(_742; CON_PATH(strbindvar_229902.bnd_TYC)) *
**                                      CON_PATH(strbindvar_229902.exp_TYC)},
**                                     {CON_PATH(strbindvar_229902.allprim_TYC) *
**                                      CON_APP(_742; CON_PATH(strbindvar_229902.con_TYC)) *
**                                      CON_APP(_742; CON_PATH(strbindvar_229902.exp_TYC))},
**                                     {CON_PATH(strbindvar_229902.exp_TYC) *
**                                      CON_PATH(strbindvar_229902.con_TYC)},
**                                     CON_PATH(strbindvar_229902.switch_TYC),
**                                     CON_PATH(strbindvar_229902.var_TYC)), 
*                        function_sumarg_INT > _200986 : 
**                          TYPE = {effect_LAB = CON_PATH(strbindvar_229902.effect_TYC),
**                                  body_LAB = CON_PATH(strbindvar_229902.exp_TYC),
**                                  recursive_LAB = CON_PATH(
**        +1   strbindvar_229902.recursive_TYC),
**                                  body_type_LAB = CON_PATH(strbindvar_229902.con_TYC),
**                                  eFormals_LAB = CON_APP(_742;
**                                                    {CON_PATH(strbindvar_229902.var_TYC) *
**                                                     CON_PATH(
**        +1   strbindvar_229902.niltrace_TYC) *
**                                                     CON_PATH(strbindvar_229902.con_TYC)}),
**                                  fFormals_LAB = CON_APP(_742;
**                                                    CON_PATH(strbindvar_229902.var_TYC)),
**                                  tFormals_LAB = CON_APP(_742;
**                                                    {CON_PATH(strbindvar_229902.var_TYC) *
**                                                     CON_PATH(strbindvar_229902.kind_TYC)}),
**                                  isDependent_LAB = _729}, 
*                        kind_sumarg_INT > _200987 : 
**                          KIND(4) = ({CON_PATH(strbindvar_229902.openness_TYC) *
**                                      CON_APP(_742;
**                                         {CON_PATH(strbindvar_229902.var_TYC) *
**                                          CON_PATH(strbindvar_229902.kind_TYC)}) *
**                                      CON_PATH(strbindvar_229902.kind_TYC)},
**                                     CON_APP(CON_PATH(strbindvar_229902.sequence_TYC);
**                                        {CON_PATH(strbindvar_229902.label_TYC) *
**                                         CON_PATH(strbindvar_229902.var_TYC)},
**                                        CON_PATH(strbindvar_229902.kind_TYC)),
**                                     CON_PATH(strbindvar_229902.con_TYC),
**                                     CON_PATH(strbindvar_229902.con_TYC)), 
*                        switch_sumarg_INT > _200988 : 
**                          KIND(5) = ({arg_LAB = CON_PATH(strbindvar_229902.exp_TYC),
**                                      result_type_LAB = CON_PATH(
**        +1   strbindvar_229902.con_TYC),
**                                      bound_LAB = CON_PATH(strbindvar_229902.var_TYC),
**                                      arms_LAB = CON_APP(_742;
**                                                    {CON_PATH(strbindvar_229902.exp_TYC) *
**                                                     CON_PATH(
**        +1   strbindvar_229902.niltrace_TYC) *
**                                                     CON_PATH(strbindvar_229902.exp_TYC)}),
**                                      default_LAB = CON_APP(_785;
**                                                       CON_PATH(
**        +1   strbindvar_229902.exp_TYC))},
**                                     {arg_LAB = CON_PATH(strbindvar_229902.
**        +1   conditionCode_TYC),
**                                      elseArm_LAB = CON_PATH(strbindvar_229902.exp_TYC),
**                                      result_type_LAB = CON_PATH(
**        +1   strbindvar_229902.con_TYC),
**                                      thenArm_LAB = CON_PATH(strbindvar_229902.exp_TYC)},
**                                     {arg_LAB = CON_PATH(strbindvar_229902.exp_TYC),
**                                      size_LAB = CON_PATH(_200145.intsize_TYC),
**                                      result_type_LAB = CON_PATH(
**        +1   strbindvar_229902.con_TYC),
**                                      arms_LAB = CON_APP(_742;
**                                                    {CON_PATH(strbindvar_229902.w32_TYC) *
**                                                     CON_PATH(strbindvar_229902.exp_TYC)}),
**                                      default_LAB = CON_APP(_785;
**                                                       CON_PATH(
**        +1   strbindvar_229902.exp_TYC))},
**                                     {arg_LAB = CON_PATH(strbindvar_229902.exp_TYC),
**                                      result_type_LAB = CON_PATH(
**        +1   strbindvar_229902.con_TYC),
**                                      sumtype_LAB = CON_PATH(strbindvar_229902.con_TYC),
**                                      bound_LAB = CON_PATH(strbindvar_229902.var_TYC),
**                                      arms_LAB = CON_APP(_742;
**                                                    {CON_PATH(strbindvar_229902.w32_TYC) *
**                                                     CON_PATH(
**        +1   strbindvar_229902.niltrace_TYC) *
**                                                     CON_PATH(strbindvar_229902.exp_TYC)}),
**                                      default_LAB = CON_APP(_785;
**                                                       CON_PATH(
**        +1   strbindvar_229902.exp_TYC))},
**                                     {arg_LAB = CON_PATH(strbindvar_229902.con_TYC),
**                                      result_type_LAB = CON_PATH(
**        +1   strbindvar_229902.con_TYC),
**                                      arms_LAB = CON_APP(_742;
**                                                    {CON_PATH(
**        +1   strbindvar_229902.primcon_TYC) *
**                                                     CON_APP(_742;
**                                                        {CON_PATH(
**        +1   strbindvar_229902.var_TYC) *
**                                                         CON_PATH(
**        +1   strbindvar_229902.kind_TYC)}) *
**                                                     CON_PATH(strbindvar_229902.exp_TYC)}),
**                                      default_LAB = CON_PATH(strbindvar_229902.exp_TYC)}), 
*                        bnd_sum_INT > _200989 : 
**                          TYPE = SUM[
**                                    (Con_b, Exp_b, Fixclosure_b, Fixcode_b, Fixopen_b);
**                                    0;
**                                    CON_PATH(strbindvar_229902.bnd_sumarg_INT)], 
*                        con_sum_INT > _200990 : 
**                          TYPE = SUM[
**                                    (AllArrow_c,
**                                     Annotate_c,
**                                     App_c,
**                                     Closure_c,
**                                     Crecord_c,
**                                     ExternArrow_c,
**                                     Let_c,
**                                     Mu_c,
**                                     Prim_c,
**                                     Proj_c,
**                                     Typecase_c,
**                                     Typeof_c,
**                                     Var_c);
**                                    0;
**                                    CON_PATH(strbindvar_229902.con_sumarg_INT)], 
*                        conbnd_sum_INT > _200991 : 
**                          TYPE = SUM[
**                                    (Code_cb, Con_cb, Open_cb);
**                                    0;
**                                    CON_PATH(strbindvar_229902.conbnd_sumarg_INT)], 
*                        conditionCode_sum_INT > _200992 : 
**                          TYPE = SUM[
**                                    (And_cc, Exp_cc, Not_cc, Or_cc);
**                                    0;
**                                    CON_PATH(strbindvar_229902.conditionCode_sumarg_INT)], 
*                        exp_sum_INT > _200993 : 
**                          TYPE = SUM[
**                                    (App_e,
**                                     Const_e,
**                                     ExternApp_e,
**                                     Handle_e,
**                                     Let_e,
**                                     Prim_e,
**                                     Raise_e,
**                                     Switch_e,
**                                     Var_e);
**                                    0;
**                                    CON_PATH(strbindvar_229902.exp_sumarg_INT)], 
*                        function_sum_INT > _200994 : 
**                          TYPE = SUM[
**                                    (Function);
**                                    0;
**                                    CON_PATH(strbindvar_229902.function_sumarg_INT)], 
*                        kind_sum_INT > _200995 : 
**                          TYPE = SUM[
**                                    (Type_k, Arrow_k, Record_k, SingleType_k, Single_k);
**                                    1;
**                                    CON_PATH(strbindvar_229902.kind_sumarg_INT)], 
*                        switch_sum_INT > _200996 : 
**                          TYPE = SUM[
**                                    (Exncase_e,
**                                     Ifthenelse_e,
**                                     Intsw_e,
**                                     Sumsw_e,
**                                     Typecase_e);
**                                    0;
**                                    CON_PATH(strbindvar_229902.switch_sumarg_INT)], 
*                        +O+Dbnd_INT > _200997 : 
**                          SIGS_SELF(strbindvar_229902.+O+Dbnd_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [bnd_INT > _200998 : 
***                                           TYPE == CON_PATH(strbindvar_229902.bnd_TYC), 
**                                         expose_INT > _200999 : 
***                                           (CON_PATH(strbindvar_229902.bnd_TYC) =>
***                                              CON_PATH(strbindvar_229902.bnd_sum_INT)) == /TOTALNONRECUR\_201000
***       +1            (_201001 : CON_PATH(strbindvar_229902.bnd_TYC))
***       +1            : CON_PATH(strbindvar_229902.bnd_sum_INT) =
***       +1         UNROLL(CON_PATH(strbindvar_229902.bnd_TYC),CON_PATH(
***       +1   strbindvar_229902.bnd_sum_INT),_201001), 
**                                         Con_b > _201002 : 
***                                           ({CON_PATH(strbindvar_229902.phase_TYC) *
***                                             CON_PATH(strbindvar_229902.conbnd_TYC)} =>
***                                              CON_PATH(strbindvar_229902.bnd_TYC)) == /TOTALNONRECUR\_201003
***       +1             (_201004 : {CON_PATH(strbindvar_229902.phase_TYC) *
***       +1                         CON_PATH(strbindvar_229902.conbnd_TYC)})
***       +1             : CON_PATH(strbindvar_229902.bnd_TYC) =
***       +1          ROLL(CON_PATH(strbindvar_229902.bnd_TYC),INJ(0, 
***       +1   CON_PATH(strbindvar_229902.bnd_sum_INT),_201004)), 
**                                         Exp_b > _201005 : 
***                                           ({CON_PATH(strbindvar_229902.var_TYC) *
***                                             CON_PATH(strbindvar_229902.niltrace_TYC) *
***                                             CON_PATH(strbindvar_229902.exp_TYC)} =>
***                                              CON_PATH(strbindvar_229902.bnd_TYC)) == /TOTALNONRECUR\_201006
***       +1                (_201007 : {CON_PATH(strbindvar_229902.
***       +1   var_TYC) *
***       +1                            CON_PATH(strbindvar_229902.
***       +1   niltrace_TYC) *
***       +1                            CON_PATH(strbindvar_229902.
***       +1   exp_TYC)})
***       +1                : CON_PATH(strbindvar_229902.bnd_TYC) =
***       +1             ROLL(CON_PATH(strbindvar_229902.bnd_TYC),
***       +1   INJ(1, CON_PATH(strbindvar_229902.bnd_sum_INT),_201007)), 
**                                         Fixclosure_b > _201008 : 
***                                           ({_729 *
***                                             CON_APP(CON_PATH(
***       +1   strbindvar_229902.sequence_TYC);
***                                                CON_PATH(strbindvar_229902.var_TYC),
***                                                {code_LAB = 
***       +1   CON_PATH(strbindvar_229902.var_TYC),
***                                                 tipe_LAB = 
***       +1   CON_PATH(strbindvar_229902.con_TYC),
***                                                 cenv_LAB = 
***       +1   CON_PATH(strbindvar_229902.con_TYC),
***                                                 venv_LAB = 
***       +1   CON_PATH(strbindvar_229902.exp_TYC)})} =>
***                                              CON_PATH(strbindvar_229902.bnd_TYC)) == /TOTALNONRECUR\_201009
***       +1                           (_201010 : {_729 *
***       +1                                       CON_APP(CON_PATH(
***       +1   strbindvar_229902.sequence_TYC);
***       +1                                          CON_PATH(strbindvar_229902.
***       +1   var_TYC),
***       +1                                          {code_LAB = 
***       +1   CON_PATH(strbindvar_229902.var_TYC),
***       +1                                           tipe_LAB = 
***       +1   CON_PATH(strbindvar_229902.con_TYC),
***       +1                                           cenv_LAB = 
***       +1   CON_PATH(strbindvar_229902.con_TYC),
***       +1                                           venv_LAB = 
***       +1   CON_PATH(strbindvar_229902.exp_TYC)})})
***       +1                           : CON_PATH(strbindvar_229902.
***       +1   bnd_TYC) =
***       +1                        ROLL(CON_PATH(strbindvar_229902.
***       +1   bnd_TYC),
***       +1   INJ(2, CON_PATH(strbindvar_229902.bnd_sum_INT),_201010)), 
**                                         Fixcode_b > _201011 : 
***                                           (CON_APP(CON_PATH(
***       +1   strbindvar_229902.sequence_TYC);
***                                               CON_PATH(strbindvar_229902.var_TYC),
***                                               CON_PATH(strbindvar_229902.function_TYC)) =>
***                                              CON_PATH(strbindvar_229902.bnd_TYC)) == /TOTALNONRECUR\_201012
***       +1                      (_201013 : CON_APP(CON_PATH(strbindvar_229902.
***       +1   sequence_TYC);
***       +1                                    CON_PATH(strbindvar_229902.
***       +1   var_TYC),
***       +1                                    CON_PATH(strbindvar_229902.
***       +1   function_TYC)))
***       +1                      : CON_PATH(strbindvar_229902.bnd_TYC) =
***       +1                   ROLL(CON_PATH(strbindvar_229902.bnd_TYC),
***       +1   INJ(3, CON_PATH(strbindvar_229902.bnd_sum_INT),_201013)), 
**                                         Fixopen_b > _201014 : 
***                                           (CON_APP(CON_PATH(
***       +1   strbindvar_229902.sequence_TYC);
***                                               CON_PATH(strbindvar_229902.var_TYC),
***                                               CON_PATH(strbindvar_229902.function_TYC)) =>
***                                              CON_PATH(strbindvar_229902.bnd_TYC)) == /TOTALNONRECUR\_201015
***       +1                      (_201016 : CON_APP(CON_PATH(strbindvar_229902.
***       +1   sequence_TYC);
***       +1                                    CON_PATH(strbindvar_229902.
***       +1   var_TYC),
***       +1                                    CON_PATH(strbindvar_229902.
***       +1   function_TYC)))
***       +1                      : CON_PATH(strbindvar_229902.bnd_TYC) =
***       +1                   ROLL(CON_PATH(strbindvar_229902.bnd_TYC),
***       +1   INJ(4, CON_PATH(strbindvar_229902.bnd_sum_INT),_201016))]
**                             ), 
*                        +O+Dcon_INT > _201017 : 
**                          SIGS_SELF(strbindvar_229902.+O+Dcon_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [con_INT > _201018 : 
***                                           TYPE == CON_PATH(strbindvar_229902.con_TYC), 
**                                         expose_INT > _201019 : 
***                                           (CON_PATH(strbindvar_229902.con_TYC) =>
***                                              CON_PATH(strbindvar_229902.con_sum_INT)) == /TOTALNONRECUR\_201020
***       +1            (_201021 : CON_PATH(strbindvar_229902.con_TYC))
***       +1            : CON_PATH(strbindvar_229902.con_sum_INT) =
***       +1         UNROLL(CON_PATH(strbindvar_229902.con_TYC),CON_PATH(
***       +1   strbindvar_229902.con_sum_INT),_201021), 
**                                         AllArrow_c > _201022 : 
***                                           ({openness_LAB = 
***       +1   CON_PATH(strbindvar_229902.openness_TYC),
***                                             effect_LAB = 
***       +1   CON_PATH(strbindvar_229902.effect_TYC),
***                                             body_type_LAB = 
***       +1   CON_PATH(strbindvar_229902.con_TYC),
***                                             eFormals_LAB = 
***       +1   CON_APP(_742;
***       +1      {CON_APP(_785; CON_PATH(strbindvar_229902.var_TYC)) *
***       +1       CON_PATH(strbindvar_229902.con_TYC)}),
***                                             fFormals_LAB = 
***       +1   CON_PATH(strbindvar_229902.w32_TYC),
***                                             tFormals_LAB = 
***       +1   CON_APP(_742;
***       +1      {CON_PATH(strbindvar_229902.var_TYC) *
***       +1       CON_PATH(strbindvar_229902.kind_TYC)}),
***                                             isDependent_LAB = _729} =>
***                                              CON_PATH(strbindvar_229902.con_TYC)) == /TOTALNONRECUR\_201023
***       +1                                               (_201024 : 
***       +1   {openness_LAB = CON_PATH(strbindvar_229902.openness_TYC),
***       +1    effect_LAB = CON_PATH(strbindvar_229902.effect_TYC),
***       +1    body_type_LAB = CON_PATH(strbindvar_229902.con_TYC),
***       +1    eFormals_LAB = CON_APP(_742;
***       +1                      {CON_APP(_785; CON_PATH(strbindvar_229902.var_TYC)) *
***       +1                       CON_PATH(strbindvar_229902.con_TYC)}),
***       +1    fFormals_LAB = CON_PATH(strbindvar_229902.w32_TYC),
***       +1    tFormals_LAB = CON_APP(_742; {CON_PATH(strbindvar_229902.var_TYC) *
***       +1                                  CON_PATH(strbindvar_229902.kind_TYC)}),
***       +1    isDependent_LAB = _729})
***       +1                                               : CON_PATH(
***       +1   strbindvar_229902.con_TYC) =
***       +1                                            ROLL(CON_PATH(
***       +1   strbindvar_229902.con_TYC),INJ(0, CON_PATH(strbindvar_229902.con_sum_INT),_201024)), 
**                                         Annotate_c > _201025 : 
***                                           ({CON_APP(CON_PATH(
***       +1   strbindvar_229902.annotation_TYC);
***                                                CON_PATH(strbindvar_229902.kind_TYC)) *
***                                             CON_PATH(strbindvar_229902.con_TYC)} =>
***                                              CON_PATH(strbindvar_229902.con_TYC)) == /TOTALNONRECUR\_201026
***       +1                           (_201027 : {CON_APP(CON_PATH(
***       +1   strbindvar_229902.annotation_TYC);
***       +1                                          CON_PATH(strbindvar_229902.
***       +1   kind_TYC)) *
***       +1                                       CON_PATH(strbindvar_229902.
***       +1   con_TYC)})
***       +1                           : CON_PATH(strbindvar_229902.
***       +1   con_TYC) =
***       +1                        ROLL(CON_PATH(strbindvar_229902.
***       +1   con_TYC),
***       +1   INJ(1, CON_PATH(strbindvar_229902.con_sum_INT),_201027)), 
**                                         App_c > _201028 : 
***                                           ({CON_PATH(strbindvar_229902.con_TYC) *
***                                             CON_APP(_742;
***                                                CON_PATH(strbindvar_229902.con_TYC))} =>
***                                              CON_PATH(strbindvar_229902.con_TYC)) == /TOTALNONRECUR\_201029
***       +1              (_201030 : {CON_PATH(strbindvar_229902.
***       +1   con_TYC) *
***       +1                          CON_APP(_742;
***       +1                             CON_PATH(strbindvar_229902.
***       +1   con_TYC))})
***       +1              : CON_PATH(strbindvar_229902.con_TYC) =
***       +1           ROLL(CON_PATH(strbindvar_229902.con_TYC),INJ(2, 
***       +1   CON_PATH(strbindvar_229902.con_sum_INT),_201030)), 
**                                         Closure_c > _201031 : 
***                                           ({CON_PATH(strbindvar_229902.con_TYC) *
***                                             CON_PATH(strbindvar_229902.con_TYC)} =>
***                                              CON_PATH(strbindvar_229902.con_TYC)) == /TOTALNONRECUR\_201032
***       +1           (_201033 : {CON_PATH(strbindvar_229902.con_TYC) *
***       +1                       CON_PATH(strbindvar_229902.con_TYC)})
***       +1           : CON_PATH(strbindvar_229902.con_TYC) =
***       +1        ROLL(CON_PATH(strbindvar_229902.con_TYC),INJ(3, 
***       +1   CON_PATH(strbindvar_229902.con_sum_INT),_201033)), 
**                                         Crecord_c > _201034 : 
***                                           (CON_APP(_742;
***                                               {CON_PATH(strbindvar_229902.label_TYC) *
***                                                CON_PATH(strbindvar_229902.con_TYC)}) =>
***                                              CON_PATH(strbindvar_229902.con_TYC)) == /TOTALNONRECUR\_201035
***       +1                 (_201036 : CON_APP(_742;
***       +1                               {CON_PATH(strbindvar_229902.
***       +1   label_TYC) *
***       +1                                CON_PATH(strbindvar_229902.
***       +1   con_TYC)}))
***       +1                 : CON_PATH(strbindvar_229902.con_TYC) =
***       +1              ROLL(CON_PATH(strbindvar_229902.con_TYC),
***       +1   INJ(4, CON_PATH(strbindvar_229902.con_sum_INT),_201036)), 
**                                         ExternArrow_c > _201037 : 
***                                           ({CON_APP(_742;
***                                                CON_PATH(strbindvar_229902.con_TYC)) *
***                                             CON_PATH(strbindvar_229902.con_TYC)} =>
***                                              CON_PATH(strbindvar_229902.con_TYC)) == /TOTALNONRECUR\_201038
***       +1               (_201039 : {CON_APP(_742;
***       +1                              CON_PATH(strbindvar_229902.
***       +1   con_TYC)) *
***       +1                           CON_PATH(strbindvar_229902.
***       +1   con_TYC)})
***       +1               : CON_PATH(strbindvar_229902.con_TYC) =
***       +1            ROLL(CON_PATH(strbindvar_229902.con_TYC),
***       +1   INJ(5, CON_PATH(strbindvar_229902.con_sum_INT),_201039)), 
**                                         Let_c > _201040 : 
***                                           ({CON_PATH(strbindvar_229902.letsort_TYC) *
***                                             CON_APP(_742;
***                                                CON_PATH(strbindvar_229902.conbnd_TYC)) *
***                                             CON_PATH(strbindvar_229902.con_TYC)} =>
***                                              CON_PATH(strbindvar_229902.con_TYC)) == /TOTALNONRECUR\_201041
***       +1                  (_201042 : {CON_PATH(strbindvar_229902.
***       +1   letsort_TYC) *
***       +1                              CON_APP(_742;
***       +1                                 CON_PATH(strbindvar_229902.
***       +1   conbnd_TYC)) *
***       +1                              CON_PATH(strbindvar_229902.
***       +1   con_TYC)})
***       +1                  : CON_PATH(strbindvar_229902.con_TYC) =
***       +1               ROLL(CON_PATH(strbindvar_229902.con_TYC),
***       +1   INJ(6, CON_PATH(strbindvar_229902.con_sum_INT),_201042)), 
**                                         Mu_c > _201043 : 
***                                           ({_729 *
***                                             CON_APP(CON_PATH(
***       +1   strbindvar_229902.sequence_TYC);
***                                                CON_PATH(strbindvar_229902.var_TYC),
***                                                CON_PATH(strbindvar_229902.con_TYC))} =>
***                                              CON_PATH(strbindvar_229902.con_TYC)) == /TOTALNONRECUR\_201044
***       +1                        (_201045 : {_729 *
***       +1                                    CON_APP(CON_PATH(
***       +1   strbindvar_229902.sequence_TYC);
***       +1                                       CON_PATH(strbindvar_229902.
***       +1   var_TYC),
***       +1                                       CON_PATH(strbindvar_229902.
***       +1   con_TYC))})
***       +1                        : CON_PATH(strbindvar_229902.
***       +1   con_TYC) =
***       +1                     ROLL(CON_PATH(strbindvar_229902.
***       +1   con_TYC),
***       +1   INJ(7, CON_PATH(strbindvar_229902.con_sum_INT),_201045)), 
**                                         Prim_c > _201046 : 
***                                           ({CON_PATH(strbindvar_229902.primcon_TYC) *
***                                             CON_APP(_742;
***                                                CON_PATH(strbindvar_229902.con_TYC))} =>
***                                              CON_PATH(strbindvar_229902.con_TYC)) == /TOTALNONRECUR\_201047
***       +1               (_201048 : {CON_PATH(strbindvar_229902.
***       +1   primcon_TYC) *
***       +1                           CON_APP(_742;
***       +1                              CON_PATH(strbindvar_229902.
***       +1   con_TYC))})
***       +1               : CON_PATH(strbindvar_229902.con_TYC) =
***       +1            ROLL(CON_PATH(strbindvar_229902.con_TYC),
***       +1   INJ(8, CON_PATH(strbindvar_229902.con_sum_INT),_201048)), 
**                                         Proj_c > _201049 : 
***                                           ({CON_PATH(strbindvar_229902.con_TYC) *
***                                             CON_PATH(strbindvar_229902.label_TYC)} =>
***                                              CON_PATH(strbindvar_229902.con_TYC)) == /TOTALNONRECUR\_201050
***       +1            (_201051 : {CON_PATH(strbindvar_229902.con_TYC) *
***       +1                        CON_PATH(strbindvar_229902.label_TYC)})
***       +1            : CON_PATH(strbindvar_229902.con_TYC) =
***       +1         ROLL(CON_PATH(strbindvar_229902.con_TYC),INJ(9, 
***       +1   CON_PATH(strbindvar_229902.con_sum_INT),_201051)), 
**                                         Typecase_c > _201052 : 
***                                           ({arg_LAB = CON_PATH(
***       +1   strbindvar_229902.con_TYC),
***                                             kind_LAB = CON_PATH(
***       +1   strbindvar_229902.kind_TYC),
***                                             arms_LAB = CON_APP(_742;
***                                                           
***       +1   {CON_PATH(strbindvar_229902.primcon_TYC) *
***       +1    CON_APP(_742; {CON_PATH(strbindvar_229902.var_TYC) *
***       +1                   CON_PATH(strbindvar_229902.kind_TYC)}) *
***       +1    CON_PATH(strbindvar_229902.con_TYC)}),
***                                             default_LAB = 
***       +1   CON_PATH(strbindvar_229902.con_TYC)} =>
***                                              CON_PATH(strbindvar_229902.con_TYC)) == /TOTALNONRECUR\_201053
***       +1                                              (_201054 : 
***       +1   {arg_LAB = CON_PATH(strbindvar_229902.con_TYC),
***       +1    kind_LAB = CON_PATH(strbindvar_229902.kind_TYC),
***       +1    arms_LAB = CON_APP(_742;
***       +1                  {CON_PATH(strbindvar_229902.primcon_TYC) *
***       +1                   CON_APP(_742; {CON_PATH(strbindvar_229902.var_TYC) *
***       +1                                  CON_PATH(strbindvar_229902.kind_TYC)}) *
***       +1                   CON_PATH(strbindvar_229902.con_TYC)}),
***       +1    default_LAB = CON_PATH(strbindvar_229902.con_TYC)})
***       +1                                              : CON_PATH(
***       +1   strbindvar_229902.con_TYC) =
***       +1                                           ROLL(CON_PATH(
***       +1   strbindvar_229902.con_TYC),INJ(10, CON_PATH(strbindvar_229902.con_sum_INT),_201054)), 
**                                         Typeof_c > _201055 : 
***                                           (CON_PATH(strbindvar_229902.exp_TYC) =>
***                                              CON_PATH(strbindvar_229902.con_TYC)) == 
***       +1   /TOTALNONRECUR\_201056
***       +1         (_201057 : CON_PATH(strbindvar_229902.exp_TYC))
***       +1         : CON_PATH(strbindvar_229902.con_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.con_TYC),INJ(11, 
***       +2   CON_PATH(strbindvar_229902.con_sum_INT),_201057)), 
**                                         Var_c > _201058 : 
***                                           (CON_PATH(strbindvar_229902.var_TYC) =>
***                                              CON_PATH(strbindvar_229902.con_TYC)) == 
***       +1   /TOTALNONRECUR\_201059
***       +1         (_201060 : CON_PATH(strbindvar_229902.var_TYC))
***       +1         : CON_PATH(strbindvar_229902.con_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.con_TYC),INJ(12, 
***       +2   CON_PATH(strbindvar_229902.con_sum_INT),_201060))]
**                             ), 
*                        +O+Dconbnd_INT > _201061 : 
**                          SIGS_SELF(strbindvar_229902.+O+Dconbnd_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [conbnd_INT > _201062 : 
***                                           TYPE == CON_PATH(
***       +1   strbindvar_229902.conbnd_TYC), 
**                                         expose_INT > _201063 : 
***                                           (CON_PATH(strbindvar_229902.conbnd_TYC) =>
***                                              CON_PATH(strbindvar_229902.conbnd_sum_INT)) == /TOTALNONRECUR\_201064
***       +1               (_201065 : CON_PATH(strbindvar_229902.
***       +1   conbnd_TYC))
***       +1               : CON_PATH(strbindvar_229902.conbnd_sum_INT) =
***       +1            UNROLL(CON_PATH(strbindvar_229902.conbnd_TYC),
***       +1   CON_PATH(strbindvar_229902.conbnd_sum_INT),_201065), 
**                                         Code_cb > _201066 : 
***                                           ({CON_PATH(strbindvar_229902.var_TYC) *
***                                             CON_APP(_742;
***                                                {CON_PATH(strbindvar_229902.var_TYC) *
***                                                 CON_PATH(strbindvar_229902.kind_TYC)}) *
***                                             CON_PATH(strbindvar_229902.con_TYC)} =>
***                                              CON_PATH(strbindvar_229902.conbnd_TYC)) == /TOTALNONRECUR\_201067
***       +1                  (_201068 : {CON_PATH(strbindvar_229902.
***       +1   var_TYC) *
***       +1                              CON_APP(_742;
***       +1                                 {CON_PATH(strbindvar_229902.
***       +1   var_TYC) *
***       +1                                  CON_PATH(strbindvar_229902.
***       +1   kind_TYC)}) *
***       +1                              CON_PATH(strbindvar_229902.
***       +1   con_TYC)})
***       +1                  : CON_PATH(strbindvar_229902.conbnd_TYC) =
***       +1               ROLL(CON_PATH(strbindvar_229902.conbnd_TYC),
***       +1   INJ(0, CON_PATH(strbindvar_229902.conbnd_sum_INT),_201068)), 
**                                         Con_cb > _201069 : 
***                                           ({CON_PATH(strbindvar_229902.var_TYC) *
***                                             CON_PATH(strbindvar_229902.con_TYC)} =>
***                                              CON_PATH(strbindvar_229902.conbnd_TYC)) == /TOTALNONRECUR\_201070
***       +1           (_201071 : {CON_PATH(strbindvar_229902.var_TYC) *
***       +1                       CON_PATH(strbindvar_229902.con_TYC)})
***       +1           : CON_PATH(strbindvar_229902.conbnd_TYC) =
***       +1        ROLL(CON_PATH(strbindvar_229902.conbnd_TYC),INJ(1, 
***       +1   CON_PATH(strbindvar_229902.conbnd_sum_INT),_201071)), 
**                                         Open_cb > _201072 : 
***                                           ({CON_PATH(strbindvar_229902.var_TYC) *
***                                             CON_APP(_742;
***                                                {CON_PATH(strbindvar_229902.var_TYC) *
***                                                 CON_PATH(strbindvar_229902.kind_TYC)}) *
***                                             CON_PATH(strbindvar_229902.con_TYC)} =>
***                                              CON_PATH(strbindvar_229902.conbnd_TYC)) == /TOTALNONRECUR\_201073
***       +1                  (_201074 : {CON_PATH(strbindvar_229902.
***       +1   var_TYC) *
***       +1                              CON_APP(_742;
***       +1                                 {CON_PATH(strbindvar_229902.
***       +1   var_TYC) *
***       +1                                  CON_PATH(strbindvar_229902.
***       +1   kind_TYC)}) *
***       +1                              CON_PATH(strbindvar_229902.
***       +1   con_TYC)})
***       +1                  : CON_PATH(strbindvar_229902.conbnd_TYC) =
***       +1               ROLL(CON_PATH(strbindvar_229902.conbnd_TYC),
***       +1   INJ(2, CON_PATH(strbindvar_229902.conbnd_sum_INT),_201074))]
**                             ), 
*                        +O+DconditionCode_INT > _201075 : 
**                          SIGS_SELF(strbindvar_229902.+O+DconditionCode_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [conditionCode_INT > _201076 : 
***                                           TYPE == CON_PATH(
***       +1   strbindvar_229902.conditionCode_TYC), 
**                                         expose_INT > _201077 : 
***                                           (CON_PATH(strbindvar_229902.
***       +1   conditionCode_TYC) =>
***                                              CON_PATH(strbindvar_229902.
***       +1   conditionCode_sum_INT)) == /TOTALNONRECUR\_201078
***       +1                      (_201079 : CON_PATH(strbindvar_229902.
***       +1   conditionCode_TYC))
***       +1                      : CON_PATH(strbindvar_229902.conditionCode_sum_INT) =
***       +1                   UNROLL(CON_PATH(strbindvar_229902.
***       +1   conditionCode_TYC),
***       +1   CON_PATH(strbindvar_229902.conditionCode_sum_INT),_201079), 
**                                         And_cc > _201080 : 
***                                           ({CON_PATH(strbindvar_229902.
***       +1   conditionCode_TYC) *
***                                             CON_PATH(strbindvar_229902.
***       +1   conditionCode_TYC)} =>
***                                              CON_PATH(strbindvar_229902.
***       +1   conditionCode_TYC)) == /TOTALNONRECUR\_201081
***       +1                     (_201082 : {CON_PATH(strbindvar_229902.
***       +1   conditionCode_TYC) *
***       +1                                 CON_PATH(strbindvar_229902.
***       +1   conditionCode_TYC)})
***       +1                     : CON_PATH(strbindvar_229902.conditionCode_TYC) =
***       +1                  ROLL(CON_PATH(strbindvar_229902.conditionCode_TYC),
***       +1   INJ(0, CON_PATH(strbindvar_229902.conditionCode_sum_INT),_201082)), 
**                                         Exp_cc > _201083 : 
***                                           (CON_PATH(strbindvar_229902.exp_TYC) =>
***                                              CON_PATH(strbindvar_229902.
***       +1   conditionCode_TYC)) == /TOTALNONRECUR\_201084
***       +1                  (_201085 : CON_PATH(strbindvar_229902.
***       +1   exp_TYC))
***       +1                  : CON_PATH(strbindvar_229902.conditionCode_TYC) =
***       +1               ROLL(CON_PATH(strbindvar_229902.conditionCode_TYC),
***       +1   INJ(1, CON_PATH(strbindvar_229902.conditionCode_sum_INT),_201085)), 
**                                         Not_cc > _201086 : 
***                                           (CON_PATH(strbindvar_229902.
***       +1   conditionCode_TYC) =>
***                                              CON_PATH(strbindvar_229902.
***       +1   conditionCode_TYC)) == /TOTALNONRECUR\_201087
***       +1                  (_201088 : CON_PATH(strbindvar_229902.
***       +1   conditionCode_TYC))
***       +1                  : CON_PATH(strbindvar_229902.conditionCode_TYC) =
***       +1               ROLL(CON_PATH(strbindvar_229902.conditionCode_TYC),
***       +1   INJ(2, CON_PATH(strbindvar_229902.conditionCode_sum_INT),_201088)), 
**                                         Or_cc > _201089 : 
***                                           ({CON_PATH(strbindvar_229902.
***       +1   conditionCode_TYC) *
***                                             CON_PATH(strbindvar_229902.
***       +1   conditionCode_TYC)} =>
***                                              CON_PATH(strbindvar_229902.
***       +1   conditionCode_TYC)) == /TOTALNONRECUR\_201090
***       +1                     (_201091 : {CON_PATH(strbindvar_229902.
***       +1   conditionCode_TYC) *
***       +1                                 CON_PATH(strbindvar_229902.
***       +1   conditionCode_TYC)})
***       +1                     : CON_PATH(strbindvar_229902.conditionCode_TYC) =
***       +1                  ROLL(CON_PATH(strbindvar_229902.conditionCode_TYC),
***       +1   INJ(3, CON_PATH(strbindvar_229902.conditionCode_sum_INT),_201091))]
**                             ), 
*                        +O+Dexp_INT > _201092 : 
**                          SIGS_SELF(strbindvar_229902.+O+Dexp_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [exp_INT > _201093 : 
***                                           TYPE == CON_PATH(strbindvar_229902.exp_TYC), 
**                                         expose_INT > _201094 : 
***                                           (CON_PATH(strbindvar_229902.exp_TYC) =>
***                                              CON_PATH(strbindvar_229902.exp_sum_INT)) == /TOTALNONRECUR\_201095
***       +1            (_201096 : CON_PATH(strbindvar_229902.exp_TYC))
***       +1            : CON_PATH(strbindvar_229902.exp_sum_INT) =
***       +1         UNROLL(CON_PATH(strbindvar_229902.exp_TYC),CON_PATH(
***       +1   strbindvar_229902.exp_sum_INT),_201096), 
**                                         App_e > _201097 : 
***                                           ({CON_PATH(strbindvar_229902.openness_TYC) *
***                                             CON_PATH(strbindvar_229902.exp_TYC) *
***                                             CON_APP(_742;
***                                                CON_PATH(strbindvar_229902.con_TYC)) *
***                                             CON_APP(_742;
***                                                CON_PATH(strbindvar_229902.exp_TYC)) *
***                                             CON_APP(_742;
***                                                CON_PATH(strbindvar_229902.exp_TYC))} =>
***                                              CON_PATH(strbindvar_229902.exp_TYC)) == /TOTALNONRECUR\_201098
***       +1                (_201099 : {CON_PATH(strbindvar_229902.
***       +1   openness_TYC) *
***       +1                            CON_PATH(strbindvar_229902.
***       +1   exp_TYC) *
***       +1                            CON_APP(_742;
***       +1                               CON_PATH(strbindvar_229902.
***       +1   con_TYC)) *
***       +1                            CON_APP(_742;
***       +1                               CON_PATH(strbindvar_229902.
***       +1   exp_TYC)) *
***       +1                            CON_APP(_742;
***       +1                               CON_PATH(strbindvar_229902.
***       +1   exp_TYC))})
***       +1                : CON_PATH(strbindvar_229902.exp_TYC) =
***       +1             ROLL(CON_PATH(strbindvar_229902.exp_TYC),
***       +1   INJ(0, CON_PATH(strbindvar_229902.exp_sum_INT),_201099)), 
**                                         Const_e > _201100 : 
***                                           (CON_APP(CON_PATH(_200145.value_TYC);
***                                               CON_PATH(strbindvar_229902.con_TYC),
***                                               CON_PATH(strbindvar_229902.exp_TYC)) =>
***                                              CON_PATH(strbindvar_229902.exp_TYC)) == /TOTALNONRECUR\_201101
***       +1             (_201102 : CON_APP(CON_PATH(_200145.value_TYC);
***       +1                           CON_PATH(strbindvar_229902.
***       +1   con_TYC),
***       +1                           CON_PATH(strbindvar_229902.
***       +1   exp_TYC)))
***       +1             : CON_PATH(strbindvar_229902.exp_TYC) =
***       +1          ROLL(CON_PATH(strbindvar_229902.exp_TYC),INJ(1, 
***       +1   CON_PATH(strbindvar_229902.exp_sum_INT),_201102)), 
**                                         ExternApp_e > _201103 : 
***                                           ({CON_PATH(strbindvar_229902.exp_TYC) *
***                                             CON_APP(_742;
***                                                CON_PATH(strbindvar_229902.exp_TYC))} =>
***                                              CON_PATH(strbindvar_229902.exp_TYC)) == /TOTALNONRECUR\_201104
***       +1              (_201105 : {CON_PATH(strbindvar_229902.
***       +1   exp_TYC) *
***       +1                          CON_APP(_742;
***       +1                             CON_PATH(strbindvar_229902.
***       +1   exp_TYC))})
***       +1              : CON_PATH(strbindvar_229902.exp_TYC) =
***       +1           ROLL(CON_PATH(strbindvar_229902.exp_TYC),INJ(2, 
***       +1   CON_PATH(strbindvar_229902.exp_sum_INT),_201105)), 
**                                         Handle_e > _201106 : 
***                                           ({body_LAB = CON_PATH(
***       +1   strbindvar_229902.exp_TYC),
***                                             result_type_LAB = 
***       +1   CON_PATH(strbindvar_229902.con_TYC),
***                                             bound_LAB = 
***       +1   CON_PATH(strbindvar_229902.var_TYC),
***                                             handler_LAB = 
***       +1   CON_PATH(strbindvar_229902.exp_TYC)} =>
***                                              CON_PATH(strbindvar_229902.exp_TYC)) == /TOTALNONRECUR\_201107
***       +1                            (_201108 : {body_LAB = CON_PATH(
***       +1   strbindvar_229902.exp_TYC),
***       +1                                        result_type_LAB = 
***       +1   CON_PATH(strbindvar_229902.con_TYC),
***       +1                                        bound_LAB = CON_PATH(
***       +1   strbindvar_229902.var_TYC),
***       +1                                        handler_LAB = 
***       +1   CON_PATH(strbindvar_229902.exp_TYC)})
***       +1                            : CON_PATH(strbindvar_229902.
***       +1   exp_TYC) =
***       +1                         ROLL(CON_PATH(strbindvar_229902.
***       +1   exp_TYC),
***       +1   INJ(3, CON_PATH(strbindvar_229902.exp_sum_INT),_201108)), 
**                                         Let_e > _201109 : 
***                                           ({CON_PATH(strbindvar_229902.letsort_TYC) *
***                                             CON_APP(_742;
***                                                CON_PATH(strbindvar_229902.bnd_TYC)) *
***                                             CON_PATH(strbindvar_229902.exp_TYC)} =>
***                                              CON_PATH(strbindvar_229902.exp_TYC)) == /TOTALNONRECUR\_201110
***       +1               (_201111 : {CON_PATH(strbindvar_229902.
***       +1   letsort_TYC) *
***       +1                           CON_APP(_742;
***       +1                              CON_PATH(strbindvar_229902.
***       +1   bnd_TYC)) *
***       +1                           CON_PATH(strbindvar_229902.
***       +1   exp_TYC)})
***       +1               : CON_PATH(strbindvar_229902.exp_TYC) =
***       +1            ROLL(CON_PATH(strbindvar_229902.exp_TYC),
***       +1   INJ(4, CON_PATH(strbindvar_229902.exp_sum_INT),_201111)), 
**                                         Prim_e > _201112 : 
***                                           ({CON_PATH(strbindvar_229902.allprim_TYC) *
***                                             CON_APP(_742;
***                                                CON_PATH(strbindvar_229902.con_TYC)) *
***                                             CON_APP(_742;
***                                                CON_PATH(strbindvar_229902.exp_TYC))} =>
***                                              CON_PATH(strbindvar_229902.exp_TYC)) == /TOTALNONRECUR\_201113
***       +1               (_201114 : {CON_PATH(strbindvar_229902.
***       +1   allprim_TYC) *
***       +1                           CON_APP(_742;
***       +1                              CON_PATH(strbindvar_229902.
***       +1   con_TYC)) *
***       +1                           CON_APP(_742;
***       +1                              CON_PATH(strbindvar_229902.
***       +1   exp_TYC))})
***       +1               : CON_PATH(strbindvar_229902.exp_TYC) =
***       +1            ROLL(CON_PATH(strbindvar_229902.exp_TYC),
***       +1   INJ(5, CON_PATH(strbindvar_229902.exp_sum_INT),_201114)), 
**                                         Raise_e > _201115 : 
***                                           ({CON_PATH(strbindvar_229902.exp_TYC) *
***                                             CON_PATH(strbindvar_229902.con_TYC)} =>
***                                              CON_PATH(strbindvar_229902.exp_TYC)) == /TOTALNONRECUR\_201116
***       +1           (_201117 : {CON_PATH(strbindvar_229902.exp_TYC) *
***       +1                       CON_PATH(strbindvar_229902.con_TYC)})
***       +1           : CON_PATH(strbindvar_229902.exp_TYC) =
***       +1        ROLL(CON_PATH(strbindvar_229902.exp_TYC),INJ(6, 
***       +1   CON_PATH(strbindvar_229902.exp_sum_INT),_201117)), 
**                                         Switch_e > _201118 : 
***                                           (CON_PATH(strbindvar_229902.switch_TYC) =>
***                                              CON_PATH(strbindvar_229902.exp_TYC)) == /TOTALNONRECUR\_201119
***       +1           (_201120 : CON_PATH(strbindvar_229902.switch_TYC))
***       +1           : CON_PATH(strbindvar_229902.exp_TYC) =
***       +1        ROLL(CON_PATH(strbindvar_229902.exp_TYC),INJ(7, 
***       +1   CON_PATH(strbindvar_229902.exp_sum_INT),_201120)), 
**                                         Var_e > _201121 : 
***                                           (CON_PATH(strbindvar_229902.var_TYC) =>
***                                              CON_PATH(strbindvar_229902.exp_TYC)) == 
***       +1   /TOTALNONRECUR\_201122
***       +1         (_201123 : CON_PATH(strbindvar_229902.var_TYC))
***       +1         : CON_PATH(strbindvar_229902.exp_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.exp_TYC),INJ(8, 
***       +2   CON_PATH(strbindvar_229902.exp_sum_INT),_201123))]
**                             ), 
*                        +O+Dfunction_INT > _201124 : 
**                          SIGS_SELF(strbindvar_229902.+O+Dfunction_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [function_INT > _201125 : 
***                                           TYPE == CON_PATH(
***       +1   strbindvar_229902.function_TYC), 
**                                         expose_INT > _201126 : 
***                                           (CON_PATH(strbindvar_229902.function_TYC) =>
***                                              CON_PATH(strbindvar_229902.
***       +1   function_sum_INT)) == /TOTALNONRECUR\_201127
***       +1                 (_201128 : CON_PATH(strbindvar_229902.
***       +1   function_TYC))
***       +1                 : CON_PATH(strbindvar_229902.function_sum_INT) =
***       +1              UNROLL(CON_PATH(strbindvar_229902.function_TYC),
***       +1   CON_PATH(strbindvar_229902.function_sum_INT),_201128), 
**                                         Function > _201129 : 
***                                           ({effect_LAB = 
***       +1   CON_PATH(strbindvar_229902.effect_TYC),
***                                             body_LAB = CON_PATH(
***       +1   strbindvar_229902.exp_TYC),
***                                             recursive_LAB = 
***       +1   CON_PATH(strbindvar_229902.recursive_TYC),
***                                             body_type_LAB = 
***       +1   CON_PATH(strbindvar_229902.con_TYC),
***                                             eFormals_LAB = 
***       +1   CON_APP(_742;
***       +1      {CON_PATH(strbindvar_229902.var_TYC) *
***       +1       CON_PATH(strbindvar_229902.niltrace_TYC) *
***       +1       CON_PATH(strbindvar_229902.con_TYC)}),
***                                             fFormals_LAB = 
***       +1   CON_APP(_742;
***       +1      CON_PATH(strbindvar_229902.var_TYC)),
***                                             tFormals_LAB = 
***       +1   CON_APP(_742;
***       +1      {CON_PATH(strbindvar_229902.var_TYC) *
***       +1       CON_PATH(strbindvar_229902.kind_TYC)}),
***                                             isDependent_LAB = _729} =>
***                                              CON_PATH(strbindvar_229902.function_TYC)) == /TOTALNONRECUR\_201130
***       +1                                     (_201131 : {effect_LAB = 
***       +1   CON_PATH(strbindvar_229902.effect_TYC),
***       +1                                                 body_LAB = 
***       +1   CON_PATH(strbindvar_229902.exp_TYC),
***       +1                                                 recursive_LAB = 
***       +1   CON_PATH(strbindvar_229902.recursive_TYC),
***       +1                                                 body_type_LAB = 
***       +1   CON_PATH(strbindvar_229902.con_TYC),
***       +1                                                 eFormals_LAB = 
***       +1   CON_APP(_742;
***       +1      {CON_PATH(strbindvar_229902.var_TYC) *
***       +1       CON_PATH(strbindvar_229902.niltrace_TYC) *
***       +1       CON_PATH(strbindvar_229902.con_TYC)}),
***       +1                                                 fFormals_LAB = 
***       +1   CON_APP(_742;
***       +1      CON_PATH(strbindvar_229902.var_TYC)),
***       +1                                                 tFormals_LAB = 
***       +1   CON_APP(_742;
***       +1      {CON_PATH(strbindvar_229902.var_TYC) *
***       +1       CON_PATH(strbindvar_229902.kind_TYC)}),
***       +1                                                 isDependent_LAB = _729})
***       +1                                     : CON_PATH(strbindvar_229902.
***       +1   function_TYC) =
***       +1                                  ROLL(CON_PATH(strbindvar_229902.
***       +1   function_TYC),
***       +1   INJ(0, CON_PATH(strbindvar_229902.function_sum_INT),_201131))]
**                             ), 
*                        +O+Dkind_INT > _201132 : 
**                          SIGS_SELF(strbindvar_229902.+O+Dkind_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [kind_INT > _201133 : 
***                                           TYPE == CON_PATH(strbindvar_229902.kind_TYC), 
**                                         expose_INT > _201134 : 
***                                           (CON_PATH(strbindvar_229902.kind_TYC) =>
***                                              CON_PATH(strbindvar_229902.kind_sum_INT)) == /TOTALNONRECUR\_201135
***       +1             (_201136 : CON_PATH(strbindvar_229902.kind_TYC))
***       +1             : CON_PATH(strbindvar_229902.kind_sum_INT) =
***       +1          UNROLL(CON_PATH(strbindvar_229902.kind_TYC),
***       +1   CON_PATH(strbindvar_229902.kind_sum_INT),_201136), 
**                                         Type_k > _201137 : 
***                                           CON_PATH(strbindvar_229902.kind_TYC) == 
***       +1   ROLL(CON_PATH(strbindvar_229902.kind_TYC),INJ(0, CON_PATH(
***       +2   strbindvar_229902.kind_sum_INT))), 
**                                         Arrow_k > _201138 : 
***                                           ({CON_PATH(strbindvar_229902.openness_TYC) *
***                                             CON_APP(_742;
***                                                {CON_PATH(strbindvar_229902.var_TYC) *
***                                                 CON_PATH(strbindvar_229902.kind_TYC)}) *
***                                             CON_PATH(strbindvar_229902.kind_TYC)} =>
***                                              CON_PATH(strbindvar_229902.kind_TYC)) == /TOTALNONRECUR\_201139
***       +1                  (_201140 : {CON_PATH(strbindvar_229902.
***       +1   openness_TYC) *
***       +1                              CON_APP(_742;
***       +1                                 {CON_PATH(strbindvar_229902.
***       +1   var_TYC) *
***       +1                                  CON_PATH(strbindvar_229902.
***       +1   kind_TYC)}) *
***       +1                              CON_PATH(strbindvar_229902.
***       +1   kind_TYC)})
***       +1                  : CON_PATH(strbindvar_229902.kind_TYC) =
***       +1               ROLL(CON_PATH(strbindvar_229902.kind_TYC),
***       +1   INJ(1, CON_PATH(strbindvar_229902.kind_sum_INT),_201140)), 
**                                         Record_k > _201141 : 
***                                           (CON_APP(CON_PATH(
***       +1   strbindvar_229902.sequence_TYC);
***                                               {CON_PATH(strbindvar_229902.label_TYC) *
***                                                CON_PATH(strbindvar_229902.var_TYC)},
***                                               CON_PATH(strbindvar_229902.kind_TYC)) =>
***                                              CON_PATH(strbindvar_229902.kind_TYC)) == /TOTALNONRECUR\_201142
***       +1                      (_201143 : CON_APP(CON_PATH(strbindvar_229902.
***       +1   sequence_TYC);
***       +1                                    {CON_PATH(strbindvar_229902.
***       +1   label_TYC) *
***       +1                                     CON_PATH(strbindvar_229902.
***       +1   var_TYC)},
***       +1                                    CON_PATH(strbindvar_229902.
***       +1   kind_TYC)))
***       +1                      : CON_PATH(strbindvar_229902.kind_TYC) =
***       +1                   ROLL(CON_PATH(strbindvar_229902.kind_TYC),
***       +1   INJ(2, CON_PATH(strbindvar_229902.kind_sum_INT),_201143)), 
**                                         SingleType_k > _201144 : 
***                                           (CON_PATH(strbindvar_229902.con_TYC) =>
***                                              CON_PATH(strbindvar_229902.kind_TYC)) == /TOTALNONRECUR\_201145
***       +1         (_201146 : CON_PATH(strbindvar_229902.con_TYC))
***       +1         : CON_PATH(strbindvar_229902.kind_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.kind_TYC),INJ(3, 
***       +1   CON_PATH(strbindvar_229902.kind_sum_INT),_201146)), 
**                                         Single_k > _201147 : 
***                                           (CON_PATH(strbindvar_229902.con_TYC) =>
***                                              CON_PATH(strbindvar_229902.kind_TYC)) == /TOTALNONRECUR\_201148
***       +1         (_201149 : CON_PATH(strbindvar_229902.con_TYC))
***       +1         : CON_PATH(strbindvar_229902.kind_TYC) =
***       +1      ROLL(CON_PATH(strbindvar_229902.kind_TYC),INJ(4, 
***       +1   CON_PATH(strbindvar_229902.kind_sum_INT),_201149))]
**                             ), 
*                        +O+Dswitch_INT > _201150 : 
**                          SIGS_SELF(strbindvar_229902.+O+Dswitch_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [switch_INT > _201151 : 
***                                           TYPE == CON_PATH(
***       +1   strbindvar_229902.switch_TYC), 
**                                         expose_INT > _201152 : 
***                                           (CON_PATH(strbindvar_229902.switch_TYC) =>
***                                              CON_PATH(strbindvar_229902.switch_sum_INT)) == /TOTALNONRECUR\_201153
***       +1               (_201154 : CON_PATH(strbindvar_229902.
***       +1   switch_TYC))
***       +1               : CON_PATH(strbindvar_229902.switch_sum_INT) =
***       +1            UNROLL(CON_PATH(strbindvar_229902.switch_TYC),
***       +1   CON_PATH(strbindvar_229902.switch_sum_INT),_201154), 
**                                         Exncase_e > _201155 : 
***                                           ({arg_LAB = CON_PATH(
***       +1   strbindvar_229902.exp_TYC),
***                                             result_type_LAB = 
***       +1   CON_PATH(strbindvar_229902.con_TYC),
***                                             bound_LAB = 
***       +1   CON_PATH(strbindvar_229902.var_TYC),
***                                             arms_LAB = CON_APP(_742;
***                                                           
***       +1   {CON_PATH(strbindvar_229902.exp_TYC) *
***       +1    CON_PATH(strbindvar_229902.niltrace_TYC) *
***       +1    CON_PATH(strbindvar_229902.exp_TYC)}),
***                                             default_LAB = 
***       +1   CON_APP(_785;
***       +1      CON_PATH(strbindvar_229902.exp_TYC))} =>
***                                              CON_PATH(strbindvar_229902.switch_TYC)) == /TOTALNONRECUR\_201156
***       +1                                 (_201157 : {arg_LAB = 
***       +1   CON_PATH(strbindvar_229902.exp_TYC),
***       +1                                             result_type_LAB = 
***       +1   CON_PATH(strbindvar_229902.con_TYC),
***       +1                                             bound_LAB = 
***       +1   CON_PATH(strbindvar_229902.var_TYC),
***       +1                                             arms_LAB = 
***       +1   CON_APP(_742;
***       +1      {CON_PATH(strbindvar_229902.exp_TYC) *
***       +1       CON_PATH(strbindvar_229902.niltrace_TYC) *
***       +1       CON_PATH(strbindvar_229902.exp_TYC)}),
***       +1                                             default_LAB = 
***       +1   CON_APP(_785;
***       +1      CON_PATH(strbindvar_229902.exp_TYC))})
***       +1                                 : CON_PATH(strbindvar_229902.
***       +1   switch_TYC) =
***       +1                              ROLL(CON_PATH(strbindvar_229902.
***       +1   switch_TYC),
***       +1   INJ(0, CON_PATH(strbindvar_229902.switch_sum_INT),_201157)), 
**                                         Ifthenelse_e > _201158 : 
***                                           ({arg_LAB = CON_PATH(
***       +1   strbindvar_229902.conditionCode_TYC),
***                                             elseArm_LAB = 
***       +1   CON_PATH(strbindvar_229902.exp_TYC),
***                                             result_type_LAB = 
***       +1   CON_PATH(strbindvar_229902.con_TYC),
***                                             thenArm_LAB = 
***       +1   CON_PATH(strbindvar_229902.exp_TYC)} =>
***                                              CON_PATH(strbindvar_229902.switch_TYC)) == /TOTALNONRECUR\_201159
***       +1                              (_201160 : {arg_LAB = CON_PATH(
***       +1   strbindvar_229902.conditionCode_TYC),
***       +1                                          elseArm_LAB = 
***       +1   CON_PATH(strbindvar_229902.exp_TYC),
***       +1                                          result_type_LAB = 
***       +1   CON_PATH(strbindvar_229902.con_TYC),
***       +1                                          thenArm_LAB = 
***       +1   CON_PATH(strbindvar_229902.exp_TYC)})
***       +1                              : CON_PATH(strbindvar_229902.
***       +1   switch_TYC) =
***       +1                           ROLL(CON_PATH(strbindvar_229902.
***       +1   switch_TYC),
***       +1   INJ(1, CON_PATH(strbindvar_229902.switch_sum_INT),_201160)), 
**                                         Intsw_e > _201161 : 
***                                           ({arg_LAB = CON_PATH(
***       +1   strbindvar_229902.exp_TYC),
***                                             size_LAB = CON_PATH(_200145.intsize_TYC),
***                                             result_type_LAB = 
***       +1   CON_PATH(strbindvar_229902.con_TYC),
***                                             arms_LAB = CON_APP(_742;
***                                                           
***       +1   {CON_PATH(strbindvar_229902.w32_TYC) *
***       +1    CON_PATH(strbindvar_229902.exp_TYC)}),
***                                             default_LAB = 
***       +1   CON_APP(_785;
***       +1      CON_PATH(strbindvar_229902.exp_TYC))} =>
***                                              CON_PATH(strbindvar_229902.switch_TYC)) == /TOTALNONRECUR\_201162
***       +1                            (_201163 : {arg_LAB = CON_PATH(
***       +1   strbindvar_229902.exp_TYC),
***       +1                                        size_LAB = CON_PATH(
***       +1   _200145.intsize_TYC),
***       +1                                        result_type_LAB = 
***       +1   CON_PATH(strbindvar_229902.con_TYC),
***       +1                                        arms_LAB = CON_APP(_742;
***       +1                                                      
***       +1   {CON_PATH(strbindvar_229902.w32_TYC) *
***       +1    CON_PATH(strbindvar_229902.exp_TYC)}),
***       +1                                        default_LAB = 
***       +1   CON_APP(_785;
***       +1      CON_PATH(strbindvar_229902.exp_TYC))})
***       +1                            : CON_PATH(strbindvar_229902.
***       +1   switch_TYC) =
***       +1                         ROLL(CON_PATH(strbindvar_229902.
***       +1   switch_TYC),
***       +1   INJ(2, CON_PATH(strbindvar_229902.switch_sum_INT),_201163)), 
**                                         Sumsw_e > _201164 : 
***                                           ({arg_LAB = CON_PATH(
***       +1   strbindvar_229902.exp_TYC),
***                                             result_type_LAB = 
***       +1   CON_PATH(strbindvar_229902.con_TYC),
***                                             sumtype_LAB = 
***       +1   CON_PATH(strbindvar_229902.con_TYC),
***                                             bound_LAB = 
***       +1   CON_PATH(strbindvar_229902.var_TYC),
***                                             arms_LAB = CON_APP(_742;
***                                                           
***       +1   {CON_PATH(strbindvar_229902.w32_TYC) *
***       +1    CON_PATH(strbindvar_229902.niltrace_TYC) *
***       +1    CON_PATH(strbindvar_229902.exp_TYC)}),
***                                             default_LAB = 
***       +1   CON_APP(_785;
***       +1      CON_PATH(strbindvar_229902.exp_TYC))} =>
***                                              CON_PATH(strbindvar_229902.switch_TYC)) == /TOTALNONRECUR\_201165
***       +1                                 (_201166 : {arg_LAB = 
***       +1   CON_PATH(strbindvar_229902.exp_TYC),
***       +1                                             result_type_LAB = 
***       +1   CON_PATH(strbindvar_229902.con_TYC),
***       +1                                             sumtype_LAB = 
***       +1   CON_PATH(strbindvar_229902.con_TYC),
***       +1                                             bound_LAB = 
***       +1   CON_PATH(strbindvar_229902.var_TYC),
***       +1                                             arms_LAB = 
***       +1   CON_APP(_742;
***       +1      {CON_PATH(strbindvar_229902.w32_TYC) *
***       +1       CON_PATH(strbindvar_229902.niltrace_TYC) *
***       +1       CON_PATH(strbindvar_229902.exp_TYC)}),
***       +1                                             default_LAB = 
***       +1   CON_APP(_785;
***       +1      CON_PATH(strbindvar_229902.exp_TYC))})
***       +1                                 : CON_PATH(strbindvar_229902.
***       +1   switch_TYC) =
***       +1                              ROLL(CON_PATH(strbindvar_229902.
***       +1   switch_TYC),
***       +1   INJ(3, CON_PATH(strbindvar_229902.switch_sum_INT),_201166)), 
**                                         Typecase_e > _201167 : 
***                                           ({arg_LAB = CON_PATH(
***       +1   strbindvar_229902.con_TYC),
***                                             result_type_LAB = 
***       +1   CON_PATH(strbindvar_229902.con_TYC),
***                                             arms_LAB = CON_APP(_742;
***                                                           
***       +1   {CON_PATH(strbindvar_229902.primcon_TYC) *
***       +1    CON_APP(_742; {CON_PATH(strbindvar_229902.var_TYC) *
***       +1                   CON_PATH(strbindvar_229902.kind_TYC)}) *
***       +1    CON_PATH(strbindvar_229902.exp_TYC)}),
***                                             default_LAB = 
***       +1   CON_PATH(strbindvar_229902.exp_TYC)} =>
***                                              CON_PATH(strbindvar_229902.switch_TYC)) == /TOTALNONRECUR\_201168
***       +1                                              (_201169 : 
***       +1   {arg_LAB = CON_PATH(strbindvar_229902.con_TYC),
***       +1    result_type_LAB = CON_PATH(strbindvar_229902.con_TYC),
***       +1    arms_LAB = CON_APP(_742;
***       +1                  {CON_PATH(strbindvar_229902.primcon_TYC) *
***       +1                   CON_APP(_742; {CON_PATH(strbindvar_229902.var_TYC) *
***       +1                                  CON_PATH(strbindvar_229902.kind_TYC)}) *
***       +1                   CON_PATH(strbindvar_229902.exp_TYC)}),
***       +1    default_LAB = CON_PATH(strbindvar_229902.exp_TYC)})
***       +1                                              : CON_PATH(
***       +1   strbindvar_229902.switch_TYC) =
***       +1                                           ROLL(CON_PATH(
***       +1   strbindvar_229902.switch_TYC),INJ(4, CON_PATH(strbindvar_229902.switch_sum_INT)
***       +1   ,_201169))]
**                             ), 
*                        import_entry_TYC > _201170 : 
**                          TYPE = CON_MU(/-\(_201171)(SUM[
**                                                        (ImportType, ImportValue);
**                                                        0;
**                                                        ({
**        +1   CON_PATH(strbindvar_229902.label_TYC) *
**                                                          
**        +1   CON_PATH(strbindvar_229902.var_TYC) *
**                                                          
**        +1   CON_PATH(strbindvar_229902.kind_TYC)},
**                                                         {
**        +1   CON_PATH(strbindvar_229902.label_TYC) *
**                                                          
**        +1   CON_PATH(strbindvar_229902.var_TYC) *
**                                                          
**        +1   CON_PATH(strbindvar_229902.niltrace_TYC) *
**                                                          
**        +1   CON_PATH(strbindvar_229902.con_TYC)})]))#0, 
*                        import_entry_sumarg_INT > _201172 : 
**                          KIND(2) = ({CON_PATH(strbindvar_229902.label_TYC) *
**                                      CON_PATH(strbindvar_229902.var_TYC) *
**                                      CON_PATH(strbindvar_229902.kind_TYC)},
**                                     {CON_PATH(strbindvar_229902.label_TYC) *
**                                      CON_PATH(strbindvar_229902.var_TYC) *
**                                      CON_PATH(strbindvar_229902.niltrace_TYC) *
**                                      CON_PATH(strbindvar_229902.con_TYC)}), 
*                        import_entry_sum_INT > _201173 : 
**                          TYPE = SUM[
**                                    (ImportType, ImportValue);
**                                    0;
**                                    CON_PATH(strbindvar_229902.import_entry_sumarg_INT)], 
*                        +O+Dimport_entry_INT > _201174 : 
**                          SIGS_SELF(strbindvar_229902.+O+Dimport_entry_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [import_entry_INT > _201175 : 
***                                           TYPE == CON_PATH(
***       +1   strbindvar_229902.import_entry_TYC), 
**                                         expose_INT > _201176 : 
***                                           (CON_PATH(strbindvar_229902.import_entry_TYC) =>
***                                              CON_PATH(strbindvar_229902.
***       +1   import_entry_sum_INT)) == /TOTALNONRECUR\_201177
***       +1                     (_201178 : CON_PATH(strbindvar_229902.
***       +1   import_entry_TYC))
***       +1                     : CON_PATH(strbindvar_229902.import_entry_sum_INT) =
***       +1                  UNROLL(CON_PATH(strbindvar_229902.import_entry_TYC),
***       +1   CON_PATH(strbindvar_229902.import_entry_sum_INT),_201178), 
**                                         ImportType > _201179 : 
***                                           ({CON_PATH(strbindvar_229902.label_TYC) *
***                                             CON_PATH(strbindvar_229902.var_TYC) *
***                                             CON_PATH(strbindvar_229902.kind_TYC)} =>
***                                              CON_PATH(strbindvar_229902.
***       +1   import_entry_TYC)) == /TOTALNONRECUR\_201180
***       +1                 (_201181 : {CON_PATH(strbindvar_229902.
***       +1   label_TYC) *
***       +1                             CON_PATH(strbindvar_229902.
***       +1   var_TYC) *
***       +1                             CON_PATH(strbindvar_229902.
***       +1   kind_TYC)})
***       +1                 : CON_PATH(strbindvar_229902.import_entry_TYC) =
***       +1              ROLL(CON_PATH(strbindvar_229902.import_entry_TYC),
***       +1   INJ(0, CON_PATH(strbindvar_229902.import_entry_sum_INT),_201181)), 
**                                         ImportValue > _201182 : 
***                                           ({CON_PATH(strbindvar_229902.label_TYC) *
***                                             CON_PATH(strbindvar_229902.var_TYC) *
***                                             CON_PATH(strbindvar_229902.niltrace_TYC) *
***                                             CON_PATH(strbindvar_229902.con_TYC)} =>
***                                              CON_PATH(strbindvar_229902.
***       +1   import_entry_TYC)) == /TOTALNONRECUR\_201183
***       +1                 (_201184 : {CON_PATH(strbindvar_229902.
***       +1   label_TYC) *
***       +1                             CON_PATH(strbindvar_229902.
***       +1   var_TYC) *
***       +1                             CON_PATH(strbindvar_229902.
***       +1   niltrace_TYC) *
***       +1                             CON_PATH(strbindvar_229902.
***       +1   con_TYC)})
***       +1                 : CON_PATH(strbindvar_229902.import_entry_TYC) =
***       +1              ROLL(CON_PATH(strbindvar_229902.import_entry_TYC),
***       +1   INJ(1, CON_PATH(strbindvar_229902.import_entry_sum_INT),_201184))]
**                             ), 
*                        export_entry_TYC > _201185 : 
**                          TYPE = CON_MU(/-\(_201186)(SUM[
**                                                        (ExportType, ExportValue);
**                                                        0;
**                                                        ({
**        +1   CON_PATH(strbindvar_229902.label_TYC) *
**                                                          
**        +1   CON_PATH(strbindvar_229902.var_TYC)},
**                                                         {
**        +1   CON_PATH(strbindvar_229902.label_TYC) *
**                                                          
**        +1   CON_PATH(strbindvar_229902.var_TYC)})]))#0, 
*                        export_entry_sumarg_INT > _201187 : 
**                          KIND(2) = ({CON_PATH(strbindvar_229902.label_TYC) *
**                                      CON_PATH(strbindvar_229902.var_TYC)},
**                                     {CON_PATH(strbindvar_229902.label_TYC) *
**                                      CON_PATH(strbindvar_229902.var_TYC)}), 
*                        export_entry_sum_INT > _201188 : 
**                          TYPE = SUM[
**                                    (ExportType, ExportValue);
**                                    0;
**                                    CON_PATH(strbindvar_229902.export_entry_sumarg_INT)], 
*                        +Eexport_entry_INT > _201189 : 
**                          ({CON_PATH(strbindvar_229902.export_entry_TYC) *
**                            CON_PATH(strbindvar_229902.export_entry_TYC)} ->
**                             CON_MU(/-\(_200778)(SUM[ (false, true); 2; ()]))#0), 
*                        +O+Dexport_entry_INT > _201190 : 
**                          SIGS_SELF(strbindvar_229902.+O+Dexport_entry_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [export_entry_INT > _201191 : 
***                                           TYPE == CON_PATH(
***       +1   strbindvar_229902.export_entry_TYC), 
**                                         expose_INT > _201192 : 
***                                           (CON_PATH(strbindvar_229902.export_entry_TYC) =>
***                                              CON_PATH(strbindvar_229902.
***       +1   export_entry_sum_INT)) == /TOTALNONRECUR\_201193
***       +1                     (_201194 : CON_PATH(strbindvar_229902.
***       +1   export_entry_TYC))
***       +1                     : CON_PATH(strbindvar_229902.export_entry_sum_INT) =
***       +1                  UNROLL(CON_PATH(strbindvar_229902.export_entry_TYC),
***       +1   CON_PATH(strbindvar_229902.export_entry_sum_INT),_201194), 
**                                         ExportType > _201195 : 
***                                           ({CON_PATH(strbindvar_229902.label_TYC) *
***                                             CON_PATH(strbindvar_229902.var_TYC)} =>
***                                              CON_PATH(strbindvar_229902.
***       +1   export_entry_TYC)) == /TOTALNONRECUR\_201196
***       +1                 (_201197 : {CON_PATH(strbindvar_229902.
***       +1   label_TYC) *
***       +1                             CON_PATH(strbindvar_229902.
***       +1   var_TYC)})
***       +1                 : CON_PATH(strbindvar_229902.export_entry_TYC) =
***       +1              ROLL(CON_PATH(strbindvar_229902.export_entry_TYC),
***       +1   INJ(0, CON_PATH(strbindvar_229902.export_entry_sum_INT),_201197)), 
**                                         ExportValue > _201198 : 
***                                           ({CON_PATH(strbindvar_229902.label_TYC) *
***                                             CON_PATH(strbindvar_229902.var_TYC)} =>
***                                              CON_PATH(strbindvar_229902.
***       +1   export_entry_TYC)) == /TOTALNONRECUR\_201199
***       +1                 (_201200 : {CON_PATH(strbindvar_229902.
***       +1   label_TYC) *
***       +1                             CON_PATH(strbindvar_229902.
***       +1   var_TYC)})
***       +1                 : CON_PATH(strbindvar_229902.export_entry_TYC) =
***       +1              ROLL(CON_PATH(strbindvar_229902.export_entry_TYC),
***       +1   INJ(1, CON_PATH(strbindvar_229902.export_entry_sum_INT),_201200))]
**                             ), 
*                        module_TYC > _201201 : 
**                          TYPE = CON_MU(/-\(_201202)(SUM[
**                                                        (MODULE);
**                                                        0;
**                                                        {imports_LAB = 
**        +1   CON_APP(_742;
**        +1      CON_PATH(strbindvar_229902.import_entry_TYC)),
**                                                         exports_LAB = 
**        +1   CON_APP(_742;
**        +1      CON_PATH(strbindvar_229902.export_entry_TYC)),
**                                                         bnds_LAB = 
**        +1   CON_APP(_742;
**        +1      CON_PATH(strbindvar_229902.bnd_TYC))}]))#0, 
*                        module_sumarg_INT > _201203 : 
**                          TYPE = {imports_LAB = CON_APP(_742;
**                                                   CON_PATH(
**        +1   strbindvar_229902.import_entry_TYC)),
**                                  exports_LAB = CON_APP(_742;
**                                                   CON_PATH(
**        +1   strbindvar_229902.export_entry_TYC)),
**                                  bnds_LAB = CON_APP(_742;
**                                                CON_PATH(strbindvar_229902.bnd_TYC))}, 
*                        module_sum_INT > _201204 : 
**                          TYPE = SUM[
**                                    (MODULE);
**                                    0;
**                                    CON_PATH(strbindvar_229902.module_sumarg_INT)], 
*                        +O+Dmodule_INT > _201205 : 
**                          SIGS_SELF(strbindvar_229902.+O+Dmodule_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [module_INT > _201206 : 
***                                           TYPE == CON_PATH(
***       +1   strbindvar_229902.module_TYC), 
**                                         expose_INT > _201207 : 
***                                           (CON_PATH(strbindvar_229902.module_TYC) =>
***                                              CON_PATH(strbindvar_229902.module_sum_INT)) == /TOTALNONRECUR\_201208
***       +1               (_201209 : CON_PATH(strbindvar_229902.
***       +1   module_TYC))
***       +1               : CON_PATH(strbindvar_229902.module_sum_INT) =
***       +1            UNROLL(CON_PATH(strbindvar_229902.module_TYC),
***       +1   CON_PATH(strbindvar_229902.module_sum_INT),_201209), 
**                                         MODULE > _201210 : 
***                                           ({imports_LAB = 
***       +1   CON_APP(_742;
***       +1      CON_PATH(strbindvar_229902.import_entry_TYC)),
***                                             exports_LAB = 
***       +1   CON_APP(_742;
***       +1      CON_PATH(strbindvar_229902.export_entry_TYC)),
***                                             bnds_LAB = CON_APP(_742;
***                                                           
***       +1   CON_PATH(strbindvar_229902.bnd_TYC))} =>
***                                              CON_PATH(strbindvar_229902.module_TYC)) == /TOTALNONRECUR\_201211
***       +1                                     (_201212 : {imports_LAB = 
***       +1   CON_APP(_742;
***       +1      CON_PATH(strbindvar_229902.import_entry_TYC)),
***       +1                                                 exports_LAB = 
***       +1   CON_APP(_742;
***       +1      CON_PATH(strbindvar_229902.export_entry_TYC)),
***       +1                                                 bnds_LAB = 
***       +1   CON_APP(_742;
***       +1      CON_PATH(strbindvar_229902.bnd_TYC))})
***       +1                                     : CON_PATH(strbindvar_229902.
***       +1   module_TYC) =
***       +1                                  ROLL(CON_PATH(strbindvar_229902.
***       +1   module_TYC),
***       +1   INJ(0, CON_PATH(strbindvar_229902.module_sum_INT),_201212))]
**                             )]
*            )
signat' =           SIGS_SELF(_237603, 
*            UNSELF_SIG = _237604
*            SELF_SIG = [var_TYC > _237605 : TYPE = CON_PATH(_237606.var_TYC), 
*                        label_TYC > _237607 : TYPE = CON_PATH(_237606.label_TYC), 
*                        w32_TYC > _237608 : TYPE = CON_PATH(_237609.word_TYC), 
*                        prim_TYC > _237610 : TYPE = CON_PATH(_237611.prim_TYC), 
*                        sequence_TYC > _237612 : 
**                          KIND(2 -> TYPE) = /-\(_237613, _237614)
**        +1   CON_APP(CON_PATH(_237615.sequence_TYC);
**        +1      _237613, _237614), 
*                        flattenThreshold > _237616 : REF(INT32), 
*                        annotation_TYC > _237617 : 
**                          KIND(1 -> TYPE) = CON_PATH(_237618.annotation_TYC), 
*                        annotation_sumarg_INT > _237619 : 
**                          KIND(2) = CON_PATH(_237618.annotation_sumarg_INT), 
*                        annotation_sum_INT > _237620 : 
**                          KIND(1 -> TYPE) = CON_PATH(_237618.annotation_sum_INT), 
*                        +Eannotation_INT > _237621 : 
**                           $POLY$ SIGS_SELF(_237622.+Eannotation_INT, 
**                                     UNSELF_SIG = NONE
**                                     SELF_SIG = SIGF(_237623, 
**        +1   ['a_TYV > _237624 : TYPE, 
**        +1    +E'a_INT > _237625 : 
***       +1       ({_237624 *
***       +1         _237624} -> CON_MU(/-\(_237626)(SUM[ (false, true); 2; ()]))#0)] =>
**                                                        [it_INT > _237627 : 
***                                                           
***       +1   ({CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_TYC);
***       +1        CON_PATH(_237623.'a_TYV)) *
***       +1     CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_TYC);
***       +1        CON_PATH(_237623.'a_TYV))} ->
***       +1      CON_MU(/-\(_237628)(SUM[ (false, true); 2; ()]))#0)])
**                                     ), 
*                        +O+Dannotation_INT > _237629 : 
**                          SIGS_SELF(_237603.+O+Dannotation_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [annotation_INT > _237630 : 
***                                           KIND(1 -> TYPE) == 
***       +1   CON_PATH(_237618.hiddenThinModule_INT. annotation_TYC), 
**                                         expose_INT > _237631 : 
***                                            $POLY$ SIGS_SELF(
***       +1   _237622.+O+Dannotation_INT. expose_INT, 
***                                                      UNSELF_SIG = NONE
***                                                      SELF_SIG = 
***       +1   SIGF(_237623, ['a_TYV > _237632 : TYPE] =>
***       +1           [it_INT > _237633 : 
****      +1               (CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_TYC);
****      +1                   CON_PATH(_237623.'a_TYV)) =>
****      +1                  CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_sum_INT);
****      +1                     CON_PATH(_237623.'a_TYV))) == /TOTALNONRECUR\_237634
****      +2                (_237635 : CON_APP(CON_PATH(_237618.hiddenThinModule_INT.
****      +2                                                    annotation_TYC);
****      +2                              CON_PATH(_237623.'a_TYV)))
****      +2                : CON_APP(CON_PATH(_237618.hiddenThinModule_INT.
****      +2                                           annotation_sum_INT);
****      +2                     CON_PATH(_237623.'a_TYV)) =
****      +2             UNROLL(CON_APP(CON_PATH(_237618.hiddenThinModule_INT.
****      +2                                             annotation_TYC);
****      +2                       CON_PATH(_237623.'a_TYV)),
****      +2   CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_sum_INT);
****      +2      CON_PATH(_237623.'a_TYV)),_237635)])
***                                                      ), 
**                                         SUBST_RESULT > _237636 : 
***                                            $POLY$ SIGS_SELF(
***       +1   _237622.+O+Dannotation_INT. SUBST_RESULT, 
***                                                      UNSELF_SIG = NONE
***                                                      SELF_SIG = 
***       +1   SIGF(_237623, ['a_TYV > _237632 : TYPE] =>
***       +1           [it_INT > _237637 : 
****      +1               CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_TYC);
****      +1                  CON_PATH(_237623.'a_TYV)) == 
****      +2   ROLL(CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_TYC);
****      +2           CON_PATH(_237623.'a_TYV)),
****      +3   INJ(0, CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_sum_INT);
****      +3             CON_PATH(_237623.'a_TYV))))])
***                                                      ), 
**                                         FREE_VARS > _237638 : 
***                                            $POLY$ SIGS_SELF(
***       +1   _237622.+O+Dannotation_INT. FREE_VARS, 
***                                                      UNSELF_SIG = NONE
***                                                      SELF_SIG = 
***       +1   SIGF(_237623, ['a_TYV > _237632 : TYPE] =>
***       +1           [it_INT > _237639 : 
****      +1               ({con_vars_LAB = REF(CON_PATH(_237618.hiddenThinModule_INT.
****      +1                                                     VarSet_STR.
****      +1                                                     set_TYC)),
****      +1                 exp_vars_LAB = REF(CON_PATH(_237618.hiddenThinModule_INT.
****      +1                                                     VarSet_STR.
****      +1                                                     set_TYC))} =>
****      +1                  CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_TYC);
****      +1                     CON_PATH(_237623.'a_TYV))) == /TOTALNONRECUR\_237640
****      +2            (_237641 : {con_vars_LAB = REF(CON_PATH(_237618.
****      +2   hiddenThinModule_INT.
****      +2   VarSet_STR.
****      +2   set_TYC)),
****      +2                        exp_vars_LAB = REF(CON_PATH(_237618.
****      +2   hiddenThinModule_INT.
****      +2   VarSet_STR.
****      +2   set_TYC))})
****      +2            : CON_APP(CON_PATH(_237618.hiddenThinModule_INT.
****      +2                                       annotation_TYC);
****      +2                 CON_PATH(_237623.'a_TYV)) =
****      +2         ROLL(CON_APP(CON_PATH(_237618.hiddenThinModule_INT.
****      +2                                       annotation_TYC);
****      +2                 CON_PATH(_237623.'a_TYV)),
****      +2   INJ(1, CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_sum_INT);
****      +2             CON_PATH(_237623.'a_TYV))
****      +3   ,_237641))])
***                                                      ), 
**                                         TYPECHECKED > _237642 : 
***                                            $POLY$ SIGS_SELF(
***       +1   _237622.+O+Dannotation_INT. TYPECHECKED, 
***                                                      UNSELF_SIG = NONE
***                                                      SELF_SIG = 
***       +1   SIGF(_237623, ['a_TYV > _237632 : TYPE] =>
***       +1           [it_INT > _237643 : 
****      +1               (CON_PATH(_237623.'a_TYV) =>
****      +1                  CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_TYC);
****      +1                     CON_PATH(_237623.'a_TYV))) == /TOTALNONRECUR\_237644
****      +2            (_237645 : CON_PATH(_237623.'a_TYV))
****      +2            : CON_APP(CON_PATH(_237618.hiddenThinModule_INT.
****      +2                                       annotation_TYC);
****      +2                 CON_PATH(_237623.'a_TYV)) =
****      +2         ROLL(CON_APP(CON_PATH(_237618.hiddenThinModule_INT.
****      +2                                       annotation_TYC);
****      +2                 CON_PATH(_237623.'a_TYV)),
****      +2   INJ(2, CON_APP(CON_PATH(_237618.hiddenThinModule_INT. annotation_sum_INT);
****      +2             CON_PATH(_237623.'a_TYV))
****      +3   ,_237645))])
***                                                      )]
**                             ), 
*                        openness_TYC > _237646 : 
**                          TYPE = CON_MU(/-\(_237647)(SUM[ (Closure, Code, Open); 3; ()]))#0, 
*                        openness_sumarg_INT > _237648 : KIND(0) = (), 
*                        openness_sum_INT > _237649 : 
**                          TYPE = SUM[
**                                    (Closure, Code, Open);
**                                    3;
**                                    CON_PATH(_237603.openness_sumarg_INT)], 
*                        +Eopenness_INT > _237650 : 
**                          ({CON_PATH(_237603.openness_TYC) *
**                            CON_PATH(_237603.openness_TYC)} ->
**                             CON_MU(/-\(_237651)(SUM[ (false, true); 2; ()]))#0), 
*                        +O+Dopenness_INT > _237652 : 
**                          SIGS_SELF(_237603.+O+Dopenness_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [openness_INT > _237653 : 
***                                           TYPE == CON_PATH(_237603.openness_TYC), 
**                                         expose_INT > _237654 : 
***                                           (CON_PATH(_237603.openness_TYC) =>
***                                              CON_PATH(_237603.openness_sum_INT)) == 
***       +1   /TOTALNONRECUR\_237655
***       +1         (_237656 : CON_PATH(_237603.openness_TYC))
***       +1         : CON_PATH(_237603.openness_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.openness_TYC),CON_PATH(_237603.openness_sum_INT),_237656), 
**                                         Closure > _237657 : 
***                                           CON_PATH(_237603.openness_TYC) == 
***       +1   ROLL(CON_PATH(_237603.openness_TYC),INJ(0, CON_PATH(_237603.openness_sum_INT))), 
**                                         Code > _237658 : 
***                                           CON_PATH(_237603.openness_TYC) == 
***       +1   ROLL(CON_PATH(_237603.openness_TYC),INJ(1, CON_PATH(_237603.openness_sum_INT))), 
**                                         Open > _237659 : 
***                                           CON_PATH(_237603.openness_TYC) == 
***       +1   ROLL(CON_PATH(_237603.openness_TYC),INJ(2, CON_PATH(_237603.openness_sum_INT)))]
**                             ), 
*                        effect_TYC > _237660 : 
**                          TYPE = CON_MU(/-\(_237661)(SUM[ (Partial, Total); 2; ()]))#0, 
*                        effect_sumarg_INT > _237662 : KIND(0) = (), 
*                        effect_sum_INT > _237663 : 
**                          TYPE = SUM[
**                                    (Partial, Total);
**                                    2;
**                                    CON_PATH(_237603.effect_sumarg_INT)], 
*                        +Eeffect_INT > _237664 : 
**                          ({CON_PATH(_237603.effect_TYC) *
**                            CON_PATH(_237603.effect_TYC)} ->
**                             CON_MU(/-\(_237651)(SUM[ (false, true); 2; ()]))#0), 
*                        +O+Deffect_INT > _237665 : 
**                          SIGS_SELF(_237603.+O+Deffect_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [effect_INT > _237666 : 
***                                           TYPE == CON_PATH(_237603.effect_TYC), 
**                                         expose_INT > _237667 : 
***                                           (CON_PATH(_237603.effect_TYC) =>
***                                              CON_PATH(_237603.effect_sum_INT)) == 
***       +1   /TOTALNONRECUR\_237668
***       +1         (_237669 : CON_PATH(_237603.effect_TYC))
***       +1         : CON_PATH(_237603.effect_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.effect_TYC),CON_PATH(_237603.effect_sum_INT),_237669), 
**                                         Partial > _237670 : 
***                                           CON_PATH(_237603.effect_TYC) == 
***       +1   ROLL(CON_PATH(_237603.effect_TYC),INJ(0, CON_PATH(_237603.effect_sum_INT))), 
**                                         Total > _237671 : 
***                                           CON_PATH(_237603.effect_TYC) == 
***       +1   ROLL(CON_PATH(_237603.effect_TYC),INJ(1, CON_PATH(_237603.effect_sum_INT)))]
**                             ), 
*                        recursive_TYC > _237672 : 
**                          TYPE = CON_MU(/-\(_237673)(SUM[
**                                                        (Arbitrary, Leaf, NonRecursive);
**                                                        3;
**                                                        ()]))#0, 
*                        recursive_sumarg_INT > _237674 : KIND(0) = (), 
*                        recursive_sum_INT > _237675 : 
**                          TYPE = SUM[
**                                    (Arbitrary, Leaf, NonRecursive);
**                                    3;
**                                    CON_PATH(_237603.recursive_sumarg_INT)], 
*                        +Erecursive_INT > _237676 : 
**                          ({CON_PATH(_237603.recursive_TYC) *
**                            CON_PATH(_237603.recursive_TYC)} ->
**                             CON_MU(/-\(_237651)(SUM[ (false, true); 2; ()]))#0), 
*                        +O+Drecursive_INT > _237677 : 
**                          SIGS_SELF(_237603.+O+Drecursive_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [recursive_INT > _237678 : 
***                                           TYPE == CON_PATH(_237603.recursive_TYC), 
**                                         expose_INT > _237679 : 
***                                           (CON_PATH(_237603.recursive_TYC) =>
***                                              CON_PATH(_237603.recursive_sum_INT)) == 
***       +1   /TOTALNONRECUR\_237680
***       +1         (_237681 : CON_PATH(_237603.recursive_TYC))
***       +1         : CON_PATH(_237603.recursive_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.recursive_TYC),CON_PATH(_237603.recursive_sum_INT),_237681), 
**                                         Arbitrary > _237682 : 
***                                           CON_PATH(_237603.recursive_TYC) == 
***       +1   ROLL(CON_PATH(_237603.recursive_TYC),INJ(0, CON_PATH(_237603.recursive_sum_INT))), 
**                                         Leaf > _237683 : 
***                                           CON_PATH(_237603.recursive_TYC) == 
***       +1   ROLL(CON_PATH(_237603.recursive_TYC),INJ(1, CON_PATH(_237603.recursive_sum_INT))), 
**                                         NonRecursive > _237684 : 
***                                           CON_PATH(_237603.recursive_TYC) == 
***       +1   ROLL(CON_PATH(_237603.recursive_TYC),INJ(2, CON_PATH(_237603.recursive_sum_INT)))]
**                             ), 
*                        niltrace_TYC > _237685 : 
**                          TYPE = CON_MU(/-\(_237686)(SUM[
**                                                        (TraceUnknown,
**                                                         TraceCompute,
**                                                         TraceKnown);
**                                                        1;
**                                                        (CON_PATH(_237603.var_TYC),
**                                                         CON_PATH(_237687.traceinfo_TYC))]))#0, 
*                        niltrace_sumarg_INT > _237688 : 
**                          KIND(2) = (CON_PATH(_237603.var_TYC),
**                                     CON_PATH(_237687.traceinfo_TYC)), 
*                        niltrace_sum_INT > _237689 : 
**                          TYPE = SUM[
**                                    (TraceUnknown, TraceCompute, TraceKnown);
**                                    1;
**                                    CON_PATH(_237603.niltrace_sumarg_INT)], 
*                        +Eniltrace_INT > _237690 : 
**                          ({CON_PATH(_237603.niltrace_TYC) *
**                            CON_PATH(_237603.niltrace_TYC)} ->
**                             CON_MU(/-\(_237651)(SUM[ (false, true); 2; ()]))#0), 
*                        +O+Dniltrace_INT > _237691 : 
**                          SIGS_SELF(_237603.+O+Dniltrace_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [niltrace_INT > _237692 : 
***                                           TYPE == CON_PATH(_237603.niltrace_TYC), 
**                                         expose_INT > _237693 : 
***                                           (CON_PATH(_237603.niltrace_TYC) =>
***                                              CON_PATH(_237603.niltrace_sum_INT)) == 
***       +1   /TOTALNONRECUR\_237694
***       +1         (_237695 : CON_PATH(_237603.niltrace_TYC))
***       +1         : CON_PATH(_237603.niltrace_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.niltrace_TYC),CON_PATH(_237603.niltrace_sum_INT),_237695), 
**                                         TraceUnknown > _237696 : 
***                                           CON_PATH(_237603.niltrace_TYC) == 
***       +1   ROLL(CON_PATH(_237603.niltrace_TYC),INJ(0, CON_PATH(_237603.niltrace_sum_INT))), 
**                                         TraceCompute > _237697 : 
***                                           (CON_PATH(_237603.var_TYC) =>
***                                              CON_PATH(_237603.niltrace_TYC)) == 
***       +1   /TOTALNONRECUR\_237698
***       +1         (_237699 : CON_PATH(_237603.var_TYC))
***       +1         : CON_PATH(_237603.niltrace_TYC) =
***       +1      ROLL(CON_PATH(_237603.niltrace_TYC),INJ(1, CON_PATH(_237603.niltrace_sum_INT),_237699)), 
**                                         TraceKnown > _237700 : 
***                                           (CON_PATH(_237687.traceinfo_TYC) =>
***                                              CON_PATH(_237603.niltrace_TYC)) == 
***       +1   /TOTALNONRECUR\_237701
***       +1         (_237702 : CON_PATH(_237687.traceinfo_TYC))
***       +1         : CON_PATH(_237603.niltrace_TYC) =
***       +1      ROLL(CON_PATH(_237603.niltrace_TYC),INJ(2, CON_PATH(_237603.niltrace_sum_INT),_237702))]
**                             ), 
*                        letsort_TYC > _237703 : 
**                          TYPE = CON_MU(/-\(_237704)(SUM[ (Parallel, Sequential); 2; ()]))#0, 
*                        letsort_sumarg_INT > _237705 : KIND(0) = (), 
*                        letsort_sum_INT > _237706 : 
**                          TYPE = SUM[
**                                    (Parallel, Sequential);
**                                    2;
**                                    CON_PATH(_237603.letsort_sumarg_INT)], 
*                        +Eletsort_INT > _237707 : 
**                          ({CON_PATH(_237603.letsort_TYC) *
**                            CON_PATH(_237603.letsort_TYC)} ->
**                             CON_MU(/-\(_237651)(SUM[ (false, true); 2; ()]))#0), 
*                        +O+Dletsort_INT > _237708 : 
**                          SIGS_SELF(_237603.+O+Dletsort_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [letsort_INT > _237709 : 
***                                           TYPE == CON_PATH(_237603.letsort_TYC), 
**                                         expose_INT > _237710 : 
***                                           (CON_PATH(_237603.letsort_TYC) =>
***                                              CON_PATH(_237603.letsort_sum_INT)) == 
***       +1   /TOTALNONRECUR\_237711
***       +1         (_237712 : CON_PATH(_237603.letsort_TYC))
***       +1         : CON_PATH(_237603.letsort_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.letsort_TYC),CON_PATH(_237603.letsort_sum_INT),_237712), 
**                                         Parallel > _237713 : 
***                                           CON_PATH(_237603.letsort_TYC) == 
***       +1   ROLL(CON_PATH(_237603.letsort_TYC),INJ(0, CON_PATH(_237603.letsort_sum_INT))), 
**                                         Sequential > _237714 : 
***                                           CON_PATH(_237603.letsort_TYC) == 
***       +1   ROLL(CON_PATH(_237603.letsort_TYC),INJ(1, CON_PATH(_237603.letsort_sum_INT)))]
**                             ), 
*                        phase_TYC > _237715 : 
**                          TYPE = CON_MU(/-\(_237716)(SUM[ (Compiletime, Runtime); 2; ()]))#0, 
*                        phase_sumarg_INT > _237717 : KIND(0) = (), 
*                        phase_sum_INT > _237718 : 
**                          TYPE = SUM[
**                                    (Compiletime, Runtime);
**                                    2;
**                                    CON_PATH(_237603.phase_sumarg_INT)], 
*                        +Ephase_INT > _237719 : 
**                          ({CON_PATH(_237603.phase_TYC) *
**                            CON_PATH(_237603.phase_TYC)} ->
**                             CON_MU(/-\(_237651)(SUM[ (false, true); 2; ()]))#0), 
*                        +O+Dphase_INT > _237720 : 
**                          SIGS_SELF(_237603.+O+Dphase_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [phase_INT > _237721 : 
***                                           TYPE == CON_PATH(_237603.phase_TYC), 
**                                         expose_INT > _237722 : 
***                                           (CON_PATH(_237603.phase_TYC) =>
***                                              CON_PATH(_237603.phase_sum_INT)) == 
***       +1   /TOTALNONRECUR\_237723
***       +1         (_237724 : CON_PATH(_237603.phase_TYC))
***       +1         : CON_PATH(_237603.phase_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.phase_TYC),CON_PATH(_237603.phase_sum_INT),_237724), 
**                                         Compiletime > _237725 : 
***                                           CON_PATH(_237603.phase_TYC) == 
***       +1   ROLL(CON_PATH(_237603.phase_TYC),INJ(0, CON_PATH(_237603.phase_sum_INT))), 
**                                         Runtime > _237726 : 
***                                           CON_PATH(_237603.phase_TYC) == 
***       +1   ROLL(CON_PATH(_237603.phase_TYC),INJ(1, CON_PATH(_237603.phase_sum_INT)))]
**                             ), 
*                        primcon_TYC > _237727 : 
**                          TYPE = CON_MU(/-\(_237728)(SUM[
**                                                        (Array_c,
**                                                         Exn_c,
**                                                         Exntag_c,
**                                                         Loc_c,
**                                                         Vector_c,
**                                                         BoxFloat_c,
**                                                         Float_c,
**                                                         Int_c,
**                                                         Record_c,
**                                                         Sum_c,
**                                                         Vararg_c);
**                                                        5;
**                                                        (CON_PATH(_237611.floatsize_TYC),
**                                                         CON_PATH(_237611.floatsize_TYC),
**                                                         CON_PATH(_237611.intsize_TYC),
**                                                         {
**        +1   CON_APP(_237729;
**        +1      CON_PATH(_237603.label_TYC)) *
**                                                          
**        +1   CON_APP(_237730;
**        +1      CON_APP(_237729; CON_PATH(_237603.var_TYC)))},
**                                                         {
**        +1   totalcount_LAB = CON_PATH(_237603.w32_TYC),
**                                                          
**        +1   tagcount_LAB = CON_PATH(_237603.w32_TYC),
**                                                          
**        +1   known_LAB = CON_APP(_237730; CON_PATH(_237603.w32_TYC))},
**                                                         {CON_PATH(_237603.openness_TYC) *
**                                                          CON_PATH(_237603.effect_TYC)})]))#0, 
*                        primcon_sumarg_INT > _237731 : 
**                          KIND(6) = (CON_PATH(_237611.floatsize_TYC),
**                                     CON_PATH(_237611.floatsize_TYC),
**                                     CON_PATH(_237611.intsize_TYC),
**                                     {CON_APP(_237729; CON_PATH(_237603.label_TYC)) *
**                                      CON_APP(_237730;
**                                         CON_APP(_237729; CON_PATH(_237603.var_TYC)))},
**                                     {totalcount_LAB = CON_PATH(_237603.w32_TYC),
**                                      tagcount_LAB = CON_PATH(_237603.w32_TYC),
**                                      known_LAB = CON_APP(_237730;
**                                                     CON_PATH(_237603.w32_TYC))},
**                                     {CON_PATH(_237603.openness_TYC) *
**                                      CON_PATH(_237603.effect_TYC)}), 
*                        primcon_sum_INT > _237732 : 
**                          TYPE = SUM[
**                                    (Array_c,
**                                     Exn_c,
**                                     Exntag_c,
**                                     Loc_c,
**                                     Vector_c,
**                                     BoxFloat_c,
**                                     Float_c,
**                                     Int_c,
**                                     Record_c,
**                                     Sum_c,
**                                     Vararg_c);
**                                    5;
**                                    CON_PATH(_237603.primcon_sumarg_INT)], 
*                        +Eprimcon_INT > _237733 : 
**                          ({CON_PATH(_237603.primcon_TYC) *
**                            CON_PATH(_237603.primcon_TYC)} ->
**                             CON_MU(/-\(_237651)(SUM[ (false, true); 2; ()]))#0), 
*                        +O+Dprimcon_INT > _237734 : 
**                          SIGS_SELF(_237603.+O+Dprimcon_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [primcon_INT > _237735 : 
***                                           TYPE == CON_PATH(_237603.primcon_TYC), 
**                                         expose_INT > _237736 : 
***                                           (CON_PATH(_237603.primcon_TYC) =>
***                                              CON_PATH(_237603.primcon_sum_INT)) == 
***       +1   /TOTALNONRECUR\_237737
***       +1         (_237738 : CON_PATH(_237603.primcon_TYC))
***       +1         : CON_PATH(_237603.primcon_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.primcon_TYC),CON_PATH(_237603.primcon_sum_INT),_237738), 
**                                         Array_c > _237739 : 
***                                           CON_PATH(_237603.primcon_TYC) == 
***       +1   ROLL(CON_PATH(_237603.primcon_TYC),INJ(0, CON_PATH(_237603.primcon_sum_INT))), 
**                                         Exn_c > _237740 : 
***                                           CON_PATH(_237603.primcon_TYC) == 
***       +1   ROLL(CON_PATH(_237603.primcon_TYC),INJ(1, CON_PATH(_237603.primcon_sum_INT))), 
**                                         Exntag_c > _237741 : 
***                                           CON_PATH(_237603.primcon_TYC) == 
***       +1   ROLL(CON_PATH(_237603.primcon_TYC),INJ(2, CON_PATH(_237603.primcon_sum_INT))), 
**                                         Loc_c > _237742 : 
***                                           CON_PATH(_237603.primcon_TYC) == 
***       +1   ROLL(CON_PATH(_237603.primcon_TYC),INJ(3, CON_PATH(_237603.primcon_sum_INT))), 
**                                         Vector_c > _237743 : 
***                                           CON_PATH(_237603.primcon_TYC) == 
***       +1   ROLL(CON_PATH(_237603.primcon_TYC),INJ(4, CON_PATH(_237603.primcon_sum_INT))), 
**                                         BoxFloat_c > _237744 : 
***                                           (CON_PATH(_237611.floatsize_TYC) =>
***                                              CON_PATH(_237603.primcon_TYC)) == 
***       +1   /TOTALNONRECUR\_237745
***       +1         (_237746 : CON_PATH(_237611.floatsize_TYC))
***       +1         : CON_PATH(_237603.primcon_TYC) =
***       +1      ROLL(CON_PATH(_237603.primcon_TYC),INJ(5, CON_PATH(_237603.primcon_sum_INT)
***       +2   ,_237746)), 
**                                         Float_c > _237747 : 
***                                           (CON_PATH(_237611.floatsize_TYC) =>
***                                              CON_PATH(_237603.primcon_TYC)) == 
***       +1   /TOTALNONRECUR\_237748
***       +1         (_237749 : CON_PATH(_237611.floatsize_TYC))
***       +1         : CON_PATH(_237603.primcon_TYC) =
***       +1      ROLL(CON_PATH(_237603.primcon_TYC),INJ(6, CON_PATH(_237603.primcon_sum_INT)
***       +2   ,_237749)), 
**                                         Int_c > _237750 : 
***                                           (CON_PATH(_237611.intsize_TYC) =>
***                                              CON_PATH(_237603.primcon_TYC)) == 
***       +1   /TOTALNONRECUR\_237751
***       +1         (_237752 : CON_PATH(_237611.intsize_TYC))
***       +1         : CON_PATH(_237603.primcon_TYC) =
***       +1      ROLL(CON_PATH(_237603.primcon_TYC),INJ(7, CON_PATH(_237603.primcon_sum_INT)
***       +2   ,_237752)), 
**                                         Record_c > _237753 : 
***                                           ({CON_APP(_237729;
***                                                CON_PATH(_237603.label_TYC)) *
***                                             CON_APP(_237730;
***                                                CON_APP(_237729;
***                                                   CON_PATH(_237603.var_TYC)))} =>
***                                              CON_PATH(_237603.primcon_TYC)) == 
***       +1   /TOTALNONRECUR\_237754
***       +1         (_237755 : {CON_APP(_237729; CON_PATH(_237603.label_TYC)) *
***       +1                     CON_APP(_237730; CON_APP(_237729; CON_PATH(_237603.var_TYC)))})
***       +1         : CON_PATH(_237603.primcon_TYC) =
***       +1      ROLL(CON_PATH(_237603.primcon_TYC),INJ(8, CON_PATH(_237603.primcon_sum_INT)
***       +2   ,_237755)), 
**                                         Sum_c > _237756 : 
***                                           ({totalcount_LAB = CON_PATH(_237603.w32_TYC),
***                                             tagcount_LAB = CON_PATH(_237603.w32_TYC),
***                                             known_LAB = CON_APP(_237730;
***                                                            CON_PATH(_237603.w32_TYC))} =>
***                                              CON_PATH(_237603.primcon_TYC)) == /TOTALNONRECUR\_237757
***       +1                 (_237758 : {totalcount_LAB = CON_PATH(
***       +1   _237603.w32_TYC),
***       +1                             tagcount_LAB = CON_PATH(
***       +1   _237603.w32_TYC),
***       +1                             known_LAB = CON_APP(_237730;
***       +1                                            CON_PATH(
***       +1   _237603.w32_TYC))})
***       +1                 : CON_PATH(_237603.primcon_TYC) =
***       +1              ROLL(CON_PATH(_237603.primcon_TYC),INJ(9, 
***       +1   CON_PATH(_237603.primcon_sum_INT),_237758)), 
**                                         Vararg_c > _237759 : 
***                                           ({CON_PATH(_237603.openness_TYC) *
***                                             CON_PATH(_237603.effect_TYC)} =>
***                                              CON_PATH(_237603.primcon_TYC)) == 
***       +1   /TOTALNONRECUR\_237760
***       +1         (_237761 : {CON_PATH(_237603.openness_TYC) *
***       +1                     CON_PATH(_237603.effect_TYC)})
***       +1         : CON_PATH(_237603.primcon_TYC) =
***       +1      ROLL(CON_PATH(_237603.primcon_TYC),INJ(10, CON_PATH(_237603.primcon_sum_INT)
***       +2   ,_237761))]
**                             ), 
*                        nilprim_TYC > _237762 : 
**                          TYPE = CON_MU(/-\(_237763)(SUM[
**                                                        (make_exntag,
**                                                         peq,
**                                                         roll,
**                                                         unroll,
**                                                         box_float,
**                                                         inj_exn,
**                                                         inject,
**                                                         inject_known,
**                                                         inject_known_record,
**                                                         make_onearg,
**                                                         make_vararg,
**                                                         partialRecord,
**                                                         project,
**                                                         project_known,
**                                                         project_known_record,
**                                                         record,
**                                                         select,
**                                                         unbox_float);
**                                                        4;
**                                                        (CON_PATH(_237611.floatsize_TYC),
**                                                         _237764,
**                                                         CON_PATH(_237765.word_TYC),
**                                                         CON_PATH(_237765.word_TYC),
**                                                         CON_PATH(_237765.word_TYC),
**                                                         {CON_PATH(_237603.openness_TYC) *
**                                                          CON_PATH(_237603.effect_TYC)},
**                                                         {CON_PATH(_237603.openness_TYC) *
**                                                          CON_PATH(_237603.effect_TYC)},
**                                                         {
**        +1   CON_APP(_237729;
**        +1      CON_PATH(_237603.label_TYC)) *
**                                                          INT32},
**                                                         CON_PATH(_237765.word_TYC),
**                                                         CON_PATH(_237765.word_TYC),
**                                                         {CON_PATH(_237765.word_TYC) *
**                                                          CON_PATH(_237603.label_TYC)},
**                                                         CON_APP(_237729;
**                                                            CON_PATH(_237603.label_TYC)),
**                                                         CON_PATH(_237603.label_TYC),
**                                                         CON_PATH(_237611.floatsize_TYC))]))#0, 
*                        nilprim_sumarg_INT > _237766 : 
**                          KIND(14) = (CON_PATH(_237611.floatsize_TYC),
**                                      _237764,
**                                      CON_PATH(_237765.word_TYC),
**                                      CON_PATH(_237765.word_TYC),
**                                      CON_PATH(_237765.word_TYC),
**                                      {CON_PATH(_237603.openness_TYC) *
**                                       CON_PATH(_237603.effect_TYC)},
**                                      {CON_PATH(_237603.openness_TYC) *
**                                       CON_PATH(_237603.effect_TYC)},
**                                      {CON_APP(_237729; CON_PATH(_237603.label_TYC)) *
**                                       INT32},
**                                      CON_PATH(_237765.word_TYC),
**                                      CON_PATH(_237765.word_TYC),
**                                      {CON_PATH(_237765.word_TYC) *
**                                       CON_PATH(_237603.label_TYC)},
**                                      CON_APP(_237729; CON_PATH(_237603.label_TYC)),
**                                      CON_PATH(_237603.label_TYC),
**                                      CON_PATH(_237611.floatsize_TYC)), 
*                        nilprim_sum_INT > _237767 : 
**                          TYPE = SUM[
**                                    (make_exntag,
**                                     peq,
**                                     roll,
**                                     unroll,
**                                     box_float,
**                                     inj_exn,
**                                     inject,
**                                     inject_known,
**                                     inject_known_record,
**                                     make_onearg,
**                                     make_vararg,
**                                     partialRecord,
**                                     project,
**                                     project_known,
**                                     project_known_record,
**                                     record,
**                                     select,
**                                     unbox_float);
**                                    4;
**                                    CON_PATH(_237603.nilprim_sumarg_INT)], 
*                        +Enilprim_INT > _237768 : 
**                          ({CON_PATH(_237603.nilprim_TYC) *
**                            CON_PATH(_237603.nilprim_TYC)} ->
**                             CON_MU(/-\(_237651)(SUM[ (false, true); 2; ()]))#0), 
*                        +O+Dnilprim_INT > _237769 : 
**                          SIGS_SELF(_237603.+O+Dnilprim_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [nilprim_INT > _237770 : 
***                                           TYPE == CON_PATH(_237603.nilprim_TYC), 
**                                         expose_INT > _237771 : 
***                                           (CON_PATH(_237603.nilprim_TYC) =>
***                                              CON_PATH(_237603.nilprim_sum_INT)) == 
***       +1   /TOTALNONRECUR\_237772
***       +1         (_237773 : CON_PATH(_237603.nilprim_TYC))
***       +1         : CON_PATH(_237603.nilprim_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.nilprim_TYC),CON_PATH(_237603.nilprim_sum_INT),_237773), 
**                                         make_exntag > _237774 : 
***                                           CON_PATH(_237603.nilprim_TYC) == 
***       +1   ROLL(CON_PATH(_237603.nilprim_TYC),INJ(0, CON_PATH(_237603.nilprim_sum_INT))), 
**                                         peq > _237775 : 
***                                           CON_PATH(_237603.nilprim_TYC) == 
***       +1   ROLL(CON_PATH(_237603.nilprim_TYC),INJ(1, CON_PATH(_237603.nilprim_sum_INT))), 
**                                         roll > _237776 : 
***                                           CON_PATH(_237603.nilprim_TYC) == 
***       +1   ROLL(CON_PATH(_237603.nilprim_TYC),INJ(2, CON_PATH(_237603.nilprim_sum_INT))), 
**                                         unroll > _237777 : 
***                                           CON_PATH(_237603.nilprim_TYC) == 
***       +1   ROLL(CON_PATH(_237603.nilprim_TYC),INJ(3, CON_PATH(_237603.nilprim_sum_INT))), 
**                                         box_float > _237778 : 
***                                           (CON_PATH(_237611.floatsize_TYC) =>
***                                              CON_PATH(_237603.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237779
***       +1         (_237780 : CON_PATH(_237611.floatsize_TYC))
***       +1         : CON_PATH(_237603.nilprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.nilprim_TYC),INJ(4, CON_PATH(_237603.nilprim_sum_INT)
***       +2   ,_237780)), 
**                                         inj_exn > _237781 : 
***                                           (_237764 => CON_PATH(_237603.nilprim_TYC)) == /TOTALNONRECUR\_237782
***       +1           (_237783 : _237764)
***       +1           : CON_PATH(_237603.nilprim_TYC) =
***       +1        ROLL(CON_PATH(_237603.nilprim_TYC),INJ(5, CON_PATH(
***       +1   _237603.nilprim_sum_INT),_237783)), 
**                                         inject > _237784 : 
***                                           (CON_PATH(_237765.word_TYC) =>
***                                              CON_PATH(_237603.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237785
***       +1         (_237786 : CON_PATH(_237765.word_TYC))
***       +1         : CON_PATH(_237603.nilprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.nilprim_TYC),INJ(6, CON_PATH(_237603.nilprim_sum_INT)
***       +2   ,_237786)), 
**                                         inject_known > _237787 : 
***                                           (CON_PATH(_237765.word_TYC) =>
***                                              CON_PATH(_237603.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237788
***       +1         (_237789 : CON_PATH(_237765.word_TYC))
***       +1         : CON_PATH(_237603.nilprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.nilprim_TYC),INJ(7, CON_PATH(_237603.nilprim_sum_INT)
***       +2   ,_237789)), 
**                                         inject_known_record > _237790 : 
***                                           (CON_PATH(_237765.word_TYC) =>
***                                              CON_PATH(_237603.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237791
***       +1         (_237792 : CON_PATH(_237765.word_TYC))
***       +1         : CON_PATH(_237603.nilprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.nilprim_TYC),INJ(8, CON_PATH(_237603.nilprim_sum_INT)
***       +2   ,_237792)), 
**                                         make_onearg > _237793 : 
***                                           ({CON_PATH(_237603.openness_TYC) *
***                                             CON_PATH(_237603.effect_TYC)} =>
***                                              CON_PATH(_237603.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237794
***       +1         (_237795 : {CON_PATH(_237603.openness_TYC) *
***       +1                     CON_PATH(_237603.effect_TYC)})
***       +1         : CON_PATH(_237603.nilprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.nilprim_TYC),INJ(9, CON_PATH(_237603.nilprim_sum_INT)
***       +2   ,_237795)), 
**                                         make_vararg > _237796 : 
***                                           ({CON_PATH(_237603.openness_TYC) *
***                                             CON_PATH(_237603.effect_TYC)} =>
***                                              CON_PATH(_237603.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237797
***       +1         (_237798 : {CON_PATH(_237603.openness_TYC) *
***       +1                     CON_PATH(_237603.effect_TYC)})
***       +1         : CON_PATH(_237603.nilprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.nilprim_TYC),INJ(10, CON_PATH(_237603.nilprim_sum_INT)
***       +2   ,_237798)), 
**                                         partialRecord > _237799 : 
***                                           ({CON_APP(_237729;
***                                                CON_PATH(_237603.label_TYC)) *
***                                             INT32} =>
***                                              CON_PATH(_237603.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237800
***       +1         (_237801 : {CON_APP(_237729; CON_PATH(_237603.label_TYC)) *
***       +1                     INT32})
***       +1         : CON_PATH(_237603.nilprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.nilprim_TYC),INJ(11, CON_PATH(_237603.nilprim_sum_INT)
***       +2   ,_237801)), 
**                                         project > _237802 : 
***                                           (CON_PATH(_237765.word_TYC) =>
***                                              CON_PATH(_237603.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237803
***       +1         (_237804 : CON_PATH(_237765.word_TYC))
***       +1         : CON_PATH(_237603.nilprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.nilprim_TYC),INJ(12, CON_PATH(_237603.nilprim_sum_INT)
***       +2   ,_237804)), 
**                                         project_known > _237805 : 
***                                           (CON_PATH(_237765.word_TYC) =>
***                                              CON_PATH(_237603.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237806
***       +1         (_237807 : CON_PATH(_237765.word_TYC))
***       +1         : CON_PATH(_237603.nilprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.nilprim_TYC),INJ(13, CON_PATH(_237603.nilprim_sum_INT)
***       +2   ,_237807)), 
**                                         project_known_record > _237808 : 
***                                           ({CON_PATH(_237765.word_TYC) *
***                                             CON_PATH(_237603.label_TYC)} =>
***                                              CON_PATH(_237603.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237809
***       +1         (_237810 : {CON_PATH(_237765.word_TYC) *
***       +1                     CON_PATH(_237603.label_TYC)})
***       +1         : CON_PATH(_237603.nilprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.nilprim_TYC),INJ(14, CON_PATH(_237603.nilprim_sum_INT)
***       +2   ,_237810)), 
**                                         record > _237811 : 
***                                           (CON_APP(_237729;
***                                               CON_PATH(_237603.label_TYC)) =>
***                                              CON_PATH(_237603.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237812
***       +1         (_237813 : CON_APP(_237729; CON_PATH(_237603.label_TYC)))
***       +1         : CON_PATH(_237603.nilprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.nilprim_TYC),INJ(15, CON_PATH(_237603.nilprim_sum_INT)
***       +2   ,_237813)), 
**                                         select > _237814 : 
***                                           (CON_PATH(_237603.label_TYC) =>
***                                              CON_PATH(_237603.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237815
***       +1         (_237816 : CON_PATH(_237603.label_TYC))
***       +1         : CON_PATH(_237603.nilprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.nilprim_TYC),INJ(16, CON_PATH(_237603.nilprim_sum_INT)
***       +2   ,_237816)), 
**                                         unbox_float > _237817 : 
***                                           (CON_PATH(_237611.floatsize_TYC) =>
***                                              CON_PATH(_237603.nilprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237818
***       +1         (_237819 : CON_PATH(_237611.floatsize_TYC))
***       +1         : CON_PATH(_237603.nilprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.nilprim_TYC),INJ(17, CON_PATH(_237603.nilprim_sum_INT)
***       +2   ,_237819))]
**                             ), 
*                        allprim_TYC > _237820 : 
**                          TYPE = CON_MU(/-\(_237821)(SUM[
**                                                        (NilPrimOp, PrimOp);
**                                                        0;
**                                                        (CON_PATH(_237603.nilprim_TYC),
**                                                         CON_PATH(_237603.prim_TYC))]))#0, 
*                        allprim_sumarg_INT > _237822 : 
**                          KIND(2) = (CON_PATH(_237603.nilprim_TYC),
**                                     CON_PATH(_237603.prim_TYC)), 
*                        allprim_sum_INT > _237823 : 
**                          TYPE = SUM[
**                                    (NilPrimOp, PrimOp);
**                                    0;
**                                    CON_PATH(_237603.allprim_sumarg_INT)], 
*                        +Eallprim_INT > _237824 : 
**                          ({CON_PATH(_237603.allprim_TYC) *
**                            CON_PATH(_237603.allprim_TYC)} ->
**                             CON_MU(/-\(_237651)(SUM[ (false, true); 2; ()]))#0), 
*                        +O+Dallprim_INT > _237825 : 
**                          SIGS_SELF(_237603.+O+Dallprim_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [allprim_INT > _237826 : 
***                                           TYPE == CON_PATH(_237603.allprim_TYC), 
**                                         expose_INT > _237827 : 
***                                           (CON_PATH(_237603.allprim_TYC) =>
***                                              CON_PATH(_237603.allprim_sum_INT)) == 
***       +1   /TOTALNONRECUR\_237828
***       +1         (_237829 : CON_PATH(_237603.allprim_TYC))
***       +1         : CON_PATH(_237603.allprim_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.allprim_TYC),CON_PATH(_237603.allprim_sum_INT),_237829), 
**                                         NilPrimOp > _237830 : 
***                                           (CON_PATH(_237603.nilprim_TYC) =>
***                                              CON_PATH(_237603.allprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237831
***       +1         (_237832 : CON_PATH(_237603.nilprim_TYC))
***       +1         : CON_PATH(_237603.allprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.allprim_TYC),INJ(0, CON_PATH(_237603.allprim_sum_INT)
***       +2   ,_237832)), 
**                                         PrimOp > _237833 : 
***                                           (CON_PATH(_237603.prim_TYC) =>
***                                              CON_PATH(_237603.allprim_TYC)) == 
***       +1   /TOTALNONRECUR\_237834
***       +1         (_237835 : CON_PATH(_237603.prim_TYC))
***       +1         : CON_PATH(_237603.allprim_TYC) =
***       +1      ROLL(CON_PATH(_237603.allprim_TYC),INJ(1, CON_PATH(_237603.allprim_sum_INT)
***       +2   ,_237835))]
**                             ), 
*                        +Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT > _237836 : 
**                          KIND(8) = CON_MU(/-\(_237837,
**                                               _237838,
**                                               _237839,
**                                               _237840,
**                                               _237841,
**                                               _237842,
**                                               _237843,
**                                               _237844)(SUM[
**                                                           (Con_b,
**                                                            Exp_b,
**                                                            Fixclosure_b,
**                                                            Fixcode_b,
**                                                            Fixopen_b);
**                                                           0;
**                                                           
**        +1   ({CON_PATH(_237603.phase_TYC) *
**        +1     _237839},
**        +1    {CON_PATH(_237603.var_TYC) *
**        +1     CON_PATH(_237603.niltrace_TYC) *
**        +1     _237841},
**        +1    {_237845 *
**        +1     CON_APP(CON_PATH(_237603.sequence_TYC);
**        +1        CON_PATH(_237603.var_TYC), {code_LAB = CON_PATH(_237603.var_TYC),
**        +1                                    tipe_LAB = _237838,
**        +1                                    cenv_LAB = _237838,
**        +1                                    venv_LAB = _237841})},
**        +1    CON_APP(CON_PATH(_237603.sequence_TYC); CON_PATH(_237603.var_TYC), _237842),
**        +1    CON_APP(CON_PATH(_237603.sequence_TYC); CON_PATH(_237603.var_TYC), _237842))],
**                                                        SUM[
**                                                           (AllArrow_c,
**                                                            Annotate_c,
**                                                            App_c,
**                                                            Closure_c,
**                                                            Crecord_c,
**                                                            ExternArrow_c,
**                                                            Let_c,
**                                                            Mu_c,
**                                                            Prim_c,
**                                                            Proj_c,
**                                                            Typecase_c,
**                                                            Typeof_c,
**                                                            Var_c);
**                                                           0;
**                                                           
**        +1   ({openness_LAB = CON_PATH(_237603.openness_TYC),
**        +1     effect_LAB = CON_PATH(_237603.effect_TYC),
**        +1     body_type_LAB = _237838,
**        +1     eFormals_LAB = CON_APP(_237729;
**        +1                       {CON_APP(_237730; CON_PATH(_237603.var_TYC)) *
**        +1                        _237838}),
**        +1     fFormals_LAB = CON_PATH(_237603.w32_TYC),
**        +1     tFormals_LAB = CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
**        +1                                      _237843}),
**        +1     isDependent_LAB = _237845},
**        +1    {CON_APP(CON_PATH(_237603.annotation_TYC); _237843) *
**        +1     _237838},
**        +1    {_237838 *
**        +1     CON_APP(_237729; _237838)},
**        +1    {_237838 *
**        +1     _237838},
**        +1    CON_APP(_237729; {CON_PATH(_237603.label_TYC) *
**        +1                      _237838}),
**        +1    {CON_APP(_237729; _237838) *
**        +1     _237838},
**        +1    {CON_PATH(_237603.letsort_TYC) *
**        +1     CON_APP(_237729; _237839) *
**        +1     _237838},
**        +1    {_237845 *
**        +1     CON_APP(CON_PATH(_237603.sequence_TYC); CON_PATH(_237603.var_TYC), _237838)},
**        +1    {CON_PATH(_237603.primcon_TYC) *
**        +1     CON_APP(_237729; _237838)},
**        +1    {_237838 *
**        +1     CON_PATH(_237603.label_TYC)},
**        +1    {arg_LAB = _237838,
**        +1     kind_LAB = _237843,
**        +1     arms_LAB = CON_APP(_237729; {CON_PATH(_237603.primcon_TYC) *
**        +1                                  CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
**        +1                                                    _237843}) *
**        +1                                  _237838}),
**        +1     default_LAB = _237838},
**        +1    _237841,
**        +1    CON_PATH(_237603.var_TYC))],
**                                                        SUM[
**                                                           (Code_cb, Con_cb, Open_cb);
**                                                           0;
**                                                           
**        +1   ({CON_PATH(_237603.var_TYC) *
**        +1     CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
**        +1                       _237843}) *
**        +1     _237838},
**        +1    {CON_PATH(_237603.var_TYC) *
**        +1     _237838},
**        +1    {CON_PATH(_237603.var_TYC) *
**        +1     CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
**        +1                       _237843}) *
**        +1     _237838})],
**                                                        SUM[
**                                                           (And_cc,
**                                                            Exp_cc,
**                                                            Not_cc,
**                                                            Or_cc);
**                                                           0;
**                                                           ({_237840 *
**                                                             _237840},
**                                                            _237841,
**                                                            _237840,
**                                                            {_237840 *
**                                                             _237840})],
**                                                        SUM[
**                                                           (App_e,
**                                                            Const_e,
**                                                            ExternApp_e,
**                                                            Handle_e,
**                                                            Let_e,
**                                                            Prim_e,
**                                                            Raise_e,
**                                                            Switch_e,
**                                                            Var_e);
**                                                           0;
**                                                           
**        +1   ({CON_PATH(_237603.openness_TYC) *
**        +1     _237841 *
**        +1     CON_APP(_237729; _237838) *
**        +1     CON_APP(_237729; _237841) *
**        +1     CON_APP(_237729; _237841)},
**        +1    CON_APP(CON_PATH(_237611.value_TYC); _237838, _237841),
**        +1    {_237841 *
**        +1     CON_APP(_237729; _237841)},
**        +1    {body_LAB = _237841,
**        +1     result_type_LAB = _237838,
**        +1     bound_LAB = CON_PATH(_237603.var_TYC),
**        +1     handler_LAB = _237841},
**        +1    {CON_PATH(_237603.letsort_TYC) *
**        +1     CON_APP(_237729; _237837) *
**        +1     _237841},
**        +1    {CON_PATH(_237603.allprim_TYC) *
**        +1     CON_APP(_237729; _237838) *
**        +1     CON_APP(_237729; _237841)},
**        +1    {_237841 *
**        +1     _237838},
**        +1    _237844,
**        +1    CON_PATH(_237603.var_TYC))],
**                                                        SUM[
**                                                           (Function);
**                                                           0;
**                                                           
**        +1   {effect_LAB = CON_PATH(_237603.effect_TYC),
**        +1    body_LAB = _237841,
**        +1    recursive_LAB = CON_PATH(_237603.recursive_TYC),
**        +1    body_type_LAB = _237838,
**        +1    eFormals_LAB = CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
**        +1                                     CON_PATH(_237603.niltrace_TYC) *
**        +1                                     _237838}),
**        +1    fFormals_LAB = CON_APP(_237729; CON_PATH(_237603.var_TYC)),
**        +1    tFormals_LAB = CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
**        +1                                     _237843}),
**        +1    isDependent_LAB = _237845}],
**                                                        SUM[
**                                                           (Type_k,
**                                                            Arrow_k,
**                                                            Record_k,
**                                                            SingleType_k,
**                                                            Single_k);
**                                                           1;
**                                                           
**        +1   ({CON_PATH(_237603.openness_TYC) *
**        +1     CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
**        +1                       _237843}) *
**        +1     _237843},
**        +1    CON_APP(CON_PATH(_237603.sequence_TYC);
**        +1       {CON_PATH(_237603.label_TYC) *
**        +1        CON_PATH(_237603.var_TYC)}, _237843),
**        +1    _237838,
**        +1    _237838)],
**                                                        SUM[
**                                                           (Exncase_e,
**                                                            Ifthenelse_e,
**                                                            Intsw_e,
**                                                            Sumsw_e,
**                                                            Typecase_e);
**                                                           0;
**                                                           
**        +1   ({arg_LAB = _237841,
**        +1     result_type_LAB = _237838,
**        +1     bound_LAB = CON_PATH(_237603.var_TYC),
**        +1     arms_LAB = CON_APP(_237729; {_237841 *
**        +1                                  CON_PATH(_237603.niltrace_TYC) *
**        +1                                  _237841}),
**        +1     default_LAB = CON_APP(_237730; _237841)},
**        +1    {arg_LAB = _237840,
**        +1     elseArm_LAB = _237841,
**        +1     result_type_LAB = _237838,
**        +1     thenArm_LAB = _237841},
**        +1    {arg_LAB = _237841,
**        +1     size_LAB = CON_PATH(_237611.intsize_TYC),
**        +1     result_type_LAB = _237838,
**        +1     arms_LAB = CON_APP(_237729; {CON_PATH(_237603.w32_TYC) *
**        +1                                  _237841}),
**        +1     default_LAB = CON_APP(_237730; _237841)},
**        +1    {arg_LAB = _237841,
**        +1     result_type_LAB = _237838,
**        +1     sumtype_LAB = _237838,
**        +1     bound_LAB = CON_PATH(_237603.var_TYC),
**        +1     arms_LAB = CON_APP(_237729; {CON_PATH(_237603.w32_TYC) *
**        +1                                  CON_PATH(_237603.niltrace_TYC) *
**        +1                                  _237841}),
**        +1     default_LAB = CON_APP(_237730; _237841)},
**        +1    {arg_LAB = _237838,
**        +1     result_type_LAB = _237838,
**        +1     arms_LAB = CON_APP(_237729; {CON_PATH(_237603.primcon_TYC) *
**        +1                                  CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
**        +1                                                    _237843}) *
**        +1                                  _237841}),
**        +1     default_LAB = _237841})])), 
*                        bnd_TYC > _237846 : 
**                          TYPE = CON_PATH(_237603.+Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#0, 
*                        con_TYC > _237847 : 
**                          TYPE = CON_PATH(_237603.+Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#1, 
*                        conbnd_TYC > _237848 : 
**                          TYPE = CON_PATH(_237603.+Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#2, 
*                        conditionCode_TYC > _237849 : 
**                          TYPE = CON_PATH(_237603.+Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#3, 
*                        exp_TYC > _237850 : 
**                          TYPE = CON_PATH(_237603.+Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#4, 
*                        function_TYC > _237851 : 
**                          TYPE = CON_PATH(_237603.+Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#5, 
*                        kind_TYC > _237852 : 
**                          TYPE = CON_PATH(_237603.+Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#6, 
*                        switch_TYC > _237853 : 
**                          TYPE = CON_PATH(_237603.+Q_bnd_con_conbnd_conditionCode_exp_function_kind_switch_INT)#7, 
*                        bnd_sumarg_INT > _237854 : 
**                          KIND(5) = ({CON_PATH(_237603.phase_TYC) *
**                                      CON_PATH(_237603.conbnd_TYC)},
**                                     {CON_PATH(_237603.var_TYC) *
**                                      CON_PATH(_237603.niltrace_TYC) *
**                                      CON_PATH(_237603.exp_TYC)},
**                                     {_237845 *
**                                      CON_APP(CON_PATH(_237603.sequence_TYC);
**                                         CON_PATH(_237603.var_TYC),
**                                         {code_LAB = CON_PATH(_237603.var_TYC),
**                                          tipe_LAB = CON_PATH(_237603.con_TYC),
**                                          cenv_LAB = CON_PATH(_237603.con_TYC),
**                                          venv_LAB = CON_PATH(_237603.exp_TYC)})},
**                                     CON_APP(CON_PATH(_237603.sequence_TYC);
**                                        CON_PATH(_237603.var_TYC),
**                                        CON_PATH(_237603.function_TYC)),
**                                     CON_APP(CON_PATH(_237603.sequence_TYC);
**                                        CON_PATH(_237603.var_TYC),
**                                        CON_PATH(_237603.function_TYC))), 
*                        con_sumarg_INT > _237855 : 
**                          KIND(13) = ({openness_LAB = CON_PATH(_237603.openness_TYC),
**                                       effect_LAB = CON_PATH(_237603.effect_TYC),
**                                       body_type_LAB = CON_PATH(_237603.con_TYC),
**                                       eFormals_LAB = CON_APP(_237729;
**                                                         {CON_APP(_237730;
**                                                             CON_PATH(_237603.var_TYC)) *
**                                                          CON_PATH(_237603.con_TYC)}),
**                                       fFormals_LAB = CON_PATH(_237603.w32_TYC),
**                                       tFormals_LAB = CON_APP(_237729;
**                                                         {CON_PATH(_237603.var_TYC) *
**                                                          CON_PATH(_237603.kind_TYC)}),
**                                       isDependent_LAB = _237845},
**                                      {CON_APP(CON_PATH(_237603.annotation_TYC);
**                                          CON_PATH(_237603.kind_TYC)) *
**                                       CON_PATH(_237603.con_TYC)},
**                                      {CON_PATH(_237603.con_TYC) *
**                                       CON_APP(_237729; CON_PATH(_237603.con_TYC))},
**                                      {CON_PATH(_237603.con_TYC) *
**                                       CON_PATH(_237603.con_TYC)},
**                                      CON_APP(_237729; {CON_PATH(_237603.label_TYC) *
**                                                        CON_PATH(_237603.con_TYC)}),
**                                      {CON_APP(_237729; CON_PATH(_237603.con_TYC)) *
**                                       CON_PATH(_237603.con_TYC)},
**                                      {CON_PATH(_237603.letsort_TYC) *
**                                       CON_APP(_237729; CON_PATH(_237603.conbnd_TYC)) *
**                                       CON_PATH(_237603.con_TYC)},
**                                      {_237845 *
**                                       CON_APP(CON_PATH(_237603.sequence_TYC);
**                                          CON_PATH(_237603.var_TYC),
**                                          CON_PATH(_237603.con_TYC))},
**                                      {CON_PATH(_237603.primcon_TYC) *
**                                       CON_APP(_237729; CON_PATH(_237603.con_TYC))},
**                                      {CON_PATH(_237603.con_TYC) *
**                                       CON_PATH(_237603.label_TYC)},
**                                      {arg_LAB = CON_PATH(_237603.con_TYC),
**                                       kind_LAB = CON_PATH(_237603.kind_TYC),
**                                       arms_LAB = CON_APP(_237729;
**                                                     {CON_PATH(_237603.primcon_TYC) *
**                                                      CON_APP(_237729;
**                                                         {CON_PATH(_237603.var_TYC) *
**                                                          CON_PATH(_237603.kind_TYC)}) *
**                                                      CON_PATH(_237603.con_TYC)}),
**                                       default_LAB = CON_PATH(_237603.con_TYC)},
**                                      CON_PATH(_237603.exp_TYC),
**                                      CON_PATH(_237603.var_TYC)), 
*                        conbnd_sumarg_INT > _237856 : 
**                          KIND(3) = ({CON_PATH(_237603.var_TYC) *
**                                      CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
**                                                        CON_PATH(_237603.kind_TYC)}) *
**                                      CON_PATH(_237603.con_TYC)},
**                                     {CON_PATH(_237603.var_TYC) *
**                                      CON_PATH(_237603.con_TYC)},
**                                     {CON_PATH(_237603.var_TYC) *
**                                      CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
**                                                        CON_PATH(_237603.kind_TYC)}) *
**                                      CON_PATH(_237603.con_TYC)}), 
*                        conditionCode_sumarg_INT > _237857 : 
**                          KIND(4) = ({CON_PATH(_237603.conditionCode_TYC) *
**                                      CON_PATH(_237603.conditionCode_TYC)},
**                                     CON_PATH(_237603.exp_TYC),
**                                     CON_PATH(_237603.conditionCode_TYC),
**                                     {CON_PATH(_237603.conditionCode_TYC) *
**                                      CON_PATH(_237603.conditionCode_TYC)}), 
*                        exp_sumarg_INT > _237858 : 
**                          KIND(9) = ({CON_PATH(_237603.openness_TYC) *
**                                      CON_PATH(_237603.exp_TYC) *
**                                      CON_APP(_237729; CON_PATH(_237603.con_TYC)) *
**                                      CON_APP(_237729; CON_PATH(_237603.exp_TYC)) *
**                                      CON_APP(_237729; CON_PATH(_237603.exp_TYC))},
**                                     CON_APP(CON_PATH(_237611.value_TYC);
**                                        CON_PATH(_237603.con_TYC),
**                                        CON_PATH(_237603.exp_TYC)),
**                                     {CON_PATH(_237603.exp_TYC) *
**                                      CON_APP(_237729; CON_PATH(_237603.exp_TYC))},
**                                     {body_LAB = CON_PATH(_237603.exp_TYC),
**                                      result_type_LAB = CON_PATH(_237603.con_TYC),
**                                      bound_LAB = CON_PATH(_237603.var_TYC),
**                                      handler_LAB = CON_PATH(_237603.exp_TYC)},
**                                     {CON_PATH(_237603.letsort_TYC) *
**                                      CON_APP(_237729; CON_PATH(_237603.bnd_TYC)) *
**                                      CON_PATH(_237603.exp_TYC)},
**                                     {CON_PATH(_237603.allprim_TYC) *
**                                      CON_APP(_237729; CON_PATH(_237603.con_TYC)) *
**                                      CON_APP(_237729; CON_PATH(_237603.exp_TYC))},
**                                     {CON_PATH(_237603.exp_TYC) *
**                                      CON_PATH(_237603.con_TYC)},
**                                     CON_PATH(_237603.switch_TYC),
**                                     CON_PATH(_237603.var_TYC)), 
*                        function_sumarg_INT > _237859 : 
**                          TYPE = {effect_LAB = CON_PATH(_237603.effect_TYC),
**                                  body_LAB = CON_PATH(_237603.exp_TYC),
**                                  recursive_LAB = CON_PATH(_237603.recursive_TYC),
**                                  body_type_LAB = CON_PATH(_237603.con_TYC),
**                                  eFormals_LAB = CON_APP(_237729;
**                                                    {CON_PATH(_237603.var_TYC) *
**                                                     CON_PATH(_237603.niltrace_TYC) *
**                                                     CON_PATH(_237603.con_TYC)}),
**                                  fFormals_LAB = CON_APP(_237729;
**                                                    CON_PATH(_237603.var_TYC)),
**                                  tFormals_LAB = CON_APP(_237729;
**                                                    {CON_PATH(_237603.var_TYC) *
**                                                     CON_PATH(_237603.kind_TYC)}),
**                                  isDependent_LAB = _237845}, 
*                        kind_sumarg_INT > _237860 : 
**                          KIND(4) = ({CON_PATH(_237603.openness_TYC) *
**                                      CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
**                                                        CON_PATH(_237603.kind_TYC)}) *
**                                      CON_PATH(_237603.kind_TYC)},
**                                     CON_APP(CON_PATH(_237603.sequence_TYC);
**                                        {CON_PATH(_237603.label_TYC) *
**                                         CON_PATH(_237603.var_TYC)},
**                                        CON_PATH(_237603.kind_TYC)),
**                                     CON_PATH(_237603.con_TYC),
**                                     CON_PATH(_237603.con_TYC)), 
*                        switch_sumarg_INT > _237861 : 
**                          KIND(5) = ({arg_LAB = CON_PATH(_237603.exp_TYC),
**                                      result_type_LAB = CON_PATH(_237603.con_TYC),
**                                      bound_LAB = CON_PATH(_237603.var_TYC),
**                                      arms_LAB = CON_APP(_237729;
**                                                    {CON_PATH(_237603.exp_TYC) *
**                                                     CON_PATH(_237603.niltrace_TYC) *
**                                                     CON_PATH(_237603.exp_TYC)}),
**                                      default_LAB = CON_APP(_237730;
**                                                       CON_PATH(_237603.exp_TYC))},
**                                     {arg_LAB = CON_PATH(_237603.conditionCode_TYC),
**                                      elseArm_LAB = CON_PATH(_237603.exp_TYC),
**                                      result_type_LAB = CON_PATH(_237603.con_TYC),
**                                      thenArm_LAB = CON_PATH(_237603.exp_TYC)},
**                                     {arg_LAB = CON_PATH(_237603.exp_TYC),
**                                      size_LAB = CON_PATH(_237611.intsize_TYC),
**                                      result_type_LAB = CON_PATH(_237603.con_TYC),
**                                      arms_LAB = CON_APP(_237729;
**                                                    {CON_PATH(_237603.w32_TYC) *
**                                                     CON_PATH(_237603.exp_TYC)}),
**                                      default_LAB = CON_APP(_237730;
**                                                       CON_PATH(_237603.exp_TYC))},
**                                     {arg_LAB = CON_PATH(_237603.exp_TYC),
**                                      result_type_LAB = CON_PATH(_237603.con_TYC),
**                                      sumtype_LAB = CON_PATH(_237603.con_TYC),
**                                      bound_LAB = CON_PATH(_237603.var_TYC),
**                                      arms_LAB = CON_APP(_237729;
**                                                    {CON_PATH(_237603.w32_TYC) *
**                                                     CON_PATH(_237603.niltrace_TYC) *
**                                                     CON_PATH(_237603.exp_TYC)}),
**                                      default_LAB = CON_APP(_237730;
**                                                       CON_PATH(_237603.exp_TYC))},
**                                     {arg_LAB = CON_PATH(_237603.con_TYC),
**                                      result_type_LAB = CON_PATH(_237603.con_TYC),
**                                      arms_LAB = CON_APP(_237729;
**                                                    {CON_PATH(_237603.primcon_TYC) *
**                                                     CON_APP(_237729;
**                                                        {CON_PATH(_237603.var_TYC) *
**                                                         CON_PATH(_237603.kind_TYC)}) *
**                                                     CON_PATH(_237603.exp_TYC)}),
**                                      default_LAB = CON_PATH(_237603.exp_TYC)}), 
*                        bnd_sum_INT > _237862 : 
**                          TYPE = SUM[
**                                    (Con_b, Exp_b, Fixclosure_b, Fixcode_b, Fixopen_b);
**                                    0;
**                                    CON_PATH(_237603.bnd_sumarg_INT)], 
*                        con_sum_INT > _237863 : 
**                          TYPE = SUM[
**                                    (AllArrow_c,
**                                     Annotate_c,
**                                     App_c,
**                                     Closure_c,
**                                     Crecord_c,
**                                     ExternArrow_c,
**                                     Let_c,
**                                     Mu_c,
**                                     Prim_c,
**                                     Proj_c,
**                                     Typecase_c,
**                                     Typeof_c,
**                                     Var_c);
**                                    0;
**                                    CON_PATH(_237603.con_sumarg_INT)], 
*                        conbnd_sum_INT > _237864 : 
**                          TYPE = SUM[
**                                    (Code_cb, Con_cb, Open_cb);
**                                    0;
**                                    CON_PATH(_237603.conbnd_sumarg_INT)], 
*                        conditionCode_sum_INT > _237865 : 
**                          TYPE = SUM[
**                                    (And_cc, Exp_cc, Not_cc, Or_cc);
**                                    0;
**                                    CON_PATH(_237603.conditionCode_sumarg_INT)], 
*                        exp_sum_INT > _237866 : 
**                          TYPE = SUM[
**                                    (App_e,
**                                     Const_e,
**                                     ExternApp_e,
**                                     Handle_e,
**                                     Let_e,
**                                     Prim_e,
**                                     Raise_e,
**                                     Switch_e,
**                                     Var_e);
**                                    0;
**                                    CON_PATH(_237603.exp_sumarg_INT)], 
*                        function_sum_INT > _237867 : 
**                          TYPE = SUM[
**                                    (Function);
**                                    0;
**                                    CON_PATH(_237603.function_sumarg_INT)], 
*                        kind_sum_INT > _237868 : 
**                          TYPE = SUM[
**                                    (Type_k, Arrow_k, Record_k, SingleType_k, Single_k);
**                                    1;
**                                    CON_PATH(_237603.kind_sumarg_INT)], 
*                        switch_sum_INT > _237869 : 
**                          TYPE = SUM[
**                                    (Exncase_e,
**                                     Ifthenelse_e,
**                                     Intsw_e,
**                                     Sumsw_e,
**                                     Typecase_e);
**                                    0;
**                                    CON_PATH(_237603.switch_sumarg_INT)], 
*                        +O+Dbnd_INT > _237870 : 
**                          SIGS_SELF(_237603.+O+Dbnd_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [bnd_INT > _237871 : 
***                                           TYPE == CON_PATH(_237603.bnd_TYC), 
**                                         expose_INT > _237872 : 
***                                           (CON_PATH(_237603.bnd_TYC) =>
***                                              CON_PATH(_237603.bnd_sum_INT)) == 
***       +1   /TOTALNONRECUR\_237873
***       +1         (_237874 : CON_PATH(_237603.bnd_TYC))
***       +1         : CON_PATH(_237603.bnd_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.bnd_TYC),CON_PATH(_237603.bnd_sum_INT),_237874), 
**                                         Con_b > _237875 : 
***                                           ({CON_PATH(_237603.phase_TYC) *
***                                             CON_PATH(_237603.conbnd_TYC)} =>
***                                              CON_PATH(_237603.bnd_TYC)) == 
***       +1   /TOTALNONRECUR\_237876
***       +1         (_237877 : {CON_PATH(_237603.phase_TYC) *
***       +1                     CON_PATH(_237603.conbnd_TYC)})
***       +1         : CON_PATH(_237603.bnd_TYC) =
***       +1      ROLL(CON_PATH(_237603.bnd_TYC),INJ(0, CON_PATH(_237603.bnd_sum_INT),_237877)), 
**                                         Exp_b > _237878 : 
***                                           ({CON_PATH(_237603.var_TYC) *
***                                             CON_PATH(_237603.niltrace_TYC) *
***                                             CON_PATH(_237603.exp_TYC)} =>
***                                              CON_PATH(_237603.bnd_TYC)) == 
***       +1   /TOTALNONRECUR\_237879
***       +1         (_237880 : {CON_PATH(_237603.var_TYC) *
***       +1                     CON_PATH(_237603.niltrace_TYC) *
***       +1                     CON_PATH(_237603.exp_TYC)})
***       +1         : CON_PATH(_237603.bnd_TYC) =
***       +1      ROLL(CON_PATH(_237603.bnd_TYC),INJ(1, CON_PATH(_237603.bnd_sum_INT),_237880)), 
**                                         Fixclosure_b > _237881 : 
***                                           ({_237845 *
***                                             CON_APP(CON_PATH(_237603.sequence_TYC);
***                                                CON_PATH(_237603.var_TYC),
***                                                {code_LAB = CON_PATH(_237603.var_TYC),
***                                                 tipe_LAB = CON_PATH(_237603.con_TYC),
***                                                 cenv_LAB = CON_PATH(_237603.con_TYC),
***                                                 venv_LAB = CON_PATH(_237603.exp_TYC)})} =>
***                                              CON_PATH(_237603.bnd_TYC)) == /TOTALNONRECUR\_237882
***       +1                 (_237883 : {_237845 *
***       +1                             CON_APP(CON_PATH(_237603.
***       +1   sequence_TYC);
***       +1                                CON_PATH(_237603.var_TYC),
***       +1                                {code_LAB = CON_PATH(
***       +1   _237603.var_TYC),
***       +1                                 tipe_LAB = CON_PATH(
***       +1   _237603.con_TYC),
***       +1                                 cenv_LAB = CON_PATH(
***       +1   _237603.con_TYC),
***       +1                                 venv_LAB = CON_PATH(
***       +1   _237603.exp_TYC)})})
***       +1                 : CON_PATH(_237603.bnd_TYC) =
***       +1              ROLL(CON_PATH(_237603.bnd_TYC),INJ(2, CON_PATH(
***       +1   _237603.bnd_sum_INT)
***       +1   ,_237883)), 
**                                         Fixcode_b > _237884 : 
***                                           (CON_APP(CON_PATH(_237603.sequence_TYC);
***                                               CON_PATH(_237603.var_TYC),
***                                               CON_PATH(_237603.function_TYC)) =>
***                                              CON_PATH(_237603.bnd_TYC)) == /TOTALNONRECUR\_237885
***       +1            (_237886 : CON_APP(CON_PATH(_237603.sequence_TYC);
***       +1                          CON_PATH(_237603.var_TYC),
***       +1                          CON_PATH(_237603.function_TYC)))
***       +1            : CON_PATH(_237603.bnd_TYC) =
***       +1         ROLL(CON_PATH(_237603.bnd_TYC),INJ(3, CON_PATH(
***       +1   _237603.bnd_sum_INT)
***       +1   ,_237886)), 
**                                         Fixopen_b > _237887 : 
***                                           (CON_APP(CON_PATH(_237603.sequence_TYC);
***                                               CON_PATH(_237603.var_TYC),
***                                               CON_PATH(_237603.function_TYC)) =>
***                                              CON_PATH(_237603.bnd_TYC)) == /TOTALNONRECUR\_237888
***       +1            (_237889 : CON_APP(CON_PATH(_237603.sequence_TYC);
***       +1                          CON_PATH(_237603.var_TYC),
***       +1                          CON_PATH(_237603.function_TYC)))
***       +1            : CON_PATH(_237603.bnd_TYC) =
***       +1         ROLL(CON_PATH(_237603.bnd_TYC),INJ(4, CON_PATH(
***       +1   _237603.bnd_sum_INT)
***       +1   ,_237889))]
**                             ), 
*                        +O+Dcon_INT > _237890 : 
**                          SIGS_SELF(_237603.+O+Dcon_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [con_INT > _237891 : 
***                                           TYPE == CON_PATH(_237603.con_TYC), 
**                                         expose_INT > _237892 : 
***                                           (CON_PATH(_237603.con_TYC) =>
***                                              CON_PATH(_237603.con_sum_INT)) == 
***       +1   /TOTALNONRECUR\_237893
***       +1         (_237894 : CON_PATH(_237603.con_TYC))
***       +1         : CON_PATH(_237603.con_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.con_TYC),CON_PATH(_237603.con_sum_INT),_237894), 
**                                         AllArrow_c > _237895 : 
***                                           ({openness_LAB = 
***       +1   CON_PATH(_237603.openness_TYC),
***                                             effect_LAB = CON_PATH(_237603.effect_TYC),
***                                             body_type_LAB = CON_PATH(_237603.con_TYC),
***                                             eFormals_LAB = 
***       +1   CON_APP(_237729;
***       +1      {CON_APP(_237730; CON_PATH(_237603.var_TYC)) *
***       +1       CON_PATH(_237603.con_TYC)}),
***                                             fFormals_LAB = CON_PATH(_237603.w32_TYC),
***                                             tFormals_LAB = 
***       +1   CON_APP(_237729;
***       +1      {CON_PATH(_237603.var_TYC) *
***       +1       CON_PATH(_237603.kind_TYC)}),
***                                             isDependent_LAB = _237845} =>
***                                              CON_PATH(_237603.con_TYC)) == /TOTALNONRECUR\_237896
***       +1                                        (_237897 : {openness_LAB = 
***       +1   CON_PATH(_237603.openness_TYC),
***       +1                                                    effect_LAB = 
***       +1   CON_PATH(_237603.effect_TYC),
***       +1                                                    body_type_LAB = 
***       +1   CON_PATH(_237603.con_TYC),
***       +1                                                    eFormals_LAB = 
***       +1   CON_APP(_237729;
***       +1      {CON_APP(_237730; CON_PATH(_237603.var_TYC)) *
***       +1       CON_PATH(_237603.con_TYC)}),
***       +1                                                    fFormals_LAB = 
***       +1   CON_PATH(_237603.w32_TYC),
***       +1                                                    tFormals_LAB = 
***       +1   CON_APP(_237729;
***       +1      {CON_PATH(_237603.var_TYC) *
***       +1       CON_PATH(_237603.kind_TYC)}),
***       +1                                                    isDependent_LAB = _237845})
***       +1                                        : CON_PATH(_237603.
***       +1   con_TYC) =
***       +1                                     ROLL(CON_PATH(_237603.
***       +1   con_TYC),
***       +1   INJ(0, CON_PATH(_237603.con_sum_INT),_237897)), 
**                                         Annotate_c > _237898 : 
***                                           ({CON_APP(CON_PATH(_237603.annotation_TYC);
***                                                CON_PATH(_237603.kind_TYC)) *
***                                             CON_PATH(_237603.con_TYC)} =>
***                                              CON_PATH(_237603.con_TYC)) == /TOTALNONRECUR\_237899
***       +1                 (_237900 : {CON_APP(CON_PATH(_237603.
***       +1   annotation_TYC);
***       +1                                CON_PATH(_237603.kind_TYC)) *
***       +1                             CON_PATH(_237603.con_TYC)})
***       +1                 : CON_PATH(_237603.con_TYC) =
***       +1              ROLL(CON_PATH(_237603.con_TYC),INJ(1, CON_PATH(
***       +1   _237603.con_sum_INT)
***       +1   ,_237900)), 
**                                         App_c > _237901 : 
***                                           ({CON_PATH(_237603.con_TYC) *
***                                             CON_APP(_237729;
***                                                CON_PATH(_237603.con_TYC))} =>
***                                              CON_PATH(_237603.con_TYC)) == 
***       +1   /TOTALNONRECUR\_237902
***       +1         (_237903 : {CON_PATH(_237603.con_TYC) *
***       +1                     CON_APP(_237729; CON_PATH(_237603.con_TYC))})
***       +1         : CON_PATH(_237603.con_TYC) =
***       +1      ROLL(CON_PATH(_237603.con_TYC),INJ(2, CON_PATH(_237603.con_sum_INT),_237903)), 
**                                         Closure_c > _237904 : 
***                                           ({CON_PATH(_237603.con_TYC) *
***                                             CON_PATH(_237603.con_TYC)} =>
***                                              CON_PATH(_237603.con_TYC)) == 
***       +1   /TOTALNONRECUR\_237905
***       +1         (_237906 : {CON_PATH(_237603.con_TYC) *
***       +1                     CON_PATH(_237603.con_TYC)})
***       +1         : CON_PATH(_237603.con_TYC) =
***       +1      ROLL(CON_PATH(_237603.con_TYC),INJ(3, CON_PATH(_237603.con_sum_INT),_237906)), 
**                                         Crecord_c > _237907 : 
***                                           (CON_APP(_237729;
***                                               {CON_PATH(_237603.label_TYC) *
***                                                CON_PATH(_237603.con_TYC)}) =>
***                                              CON_PATH(_237603.con_TYC)) == 
***       +1   /TOTALNONRECUR\_237908
***       +1         (_237909 : CON_APP(_237729; {CON_PATH(_237603.label_TYC) *
***       +1                                      CON_PATH(_237603.con_TYC)}))
***       +1         : CON_PATH(_237603.con_TYC) =
***       +1      ROLL(CON_PATH(_237603.con_TYC),INJ(4, CON_PATH(_237603.con_sum_INT),_237909)), 
**                                         ExternArrow_c > _237910 : 
***                                           ({CON_APP(_237729;
***                                                CON_PATH(_237603.con_TYC)) *
***                                             CON_PATH(_237603.con_TYC)} =>
***                                              CON_PATH(_237603.con_TYC)) == 
***       +1   /TOTALNONRECUR\_237911
***       +1         (_237912 : {CON_APP(_237729; CON_PATH(_237603.con_TYC)) *
***       +1                     CON_PATH(_237603.con_TYC)})
***       +1         : CON_PATH(_237603.con_TYC) =
***       +1      ROLL(CON_PATH(_237603.con_TYC),INJ(5, CON_PATH(_237603.con_sum_INT),_237912)), 
**                                         Let_c > _237913 : 
***                                           ({CON_PATH(_237603.letsort_TYC) *
***                                             CON_APP(_237729;
***                                                CON_PATH(_237603.conbnd_TYC)) *
***                                             CON_PATH(_237603.con_TYC)} =>
***                                              CON_PATH(_237603.con_TYC)) == 
***       +1   /TOTALNONRECUR\_237914
***       +1         (_237915 : {CON_PATH(_237603.letsort_TYC) *
***       +1                     CON_APP(_237729; CON_PATH(_237603.conbnd_TYC)) *
***       +1                     CON_PATH(_237603.con_TYC)})
***       +1         : CON_PATH(_237603.con_TYC) =
***       +1      ROLL(CON_PATH(_237603.con_TYC),INJ(6, CON_PATH(_237603.con_sum_INT),_237915)), 
**                                         Mu_c > _237916 : 
***                                           ({_237845 *
***                                             CON_APP(CON_PATH(_237603.sequence_TYC);
***                                                CON_PATH(_237603.var_TYC),
***                                                CON_PATH(_237603.con_TYC))} =>
***                                              CON_PATH(_237603.con_TYC)) == /TOTALNONRECUR\_237917
***       +1              (_237918 : {_237845 *
***       +1                          CON_APP(CON_PATH(_237603.sequence_TYC);
***       +1                             CON_PATH(_237603.var_TYC),
***       +1                             CON_PATH(_237603.con_TYC))})
***       +1              : CON_PATH(_237603.con_TYC) =
***       +1           ROLL(CON_PATH(_237603.con_TYC),INJ(7, CON_PATH(
***       +1   _237603.con_sum_INT)
***       +1   ,_237918)), 
**                                         Prim_c > _237919 : 
***                                           ({CON_PATH(_237603.primcon_TYC) *
***                                             CON_APP(_237729;
***                                                CON_PATH(_237603.con_TYC))} =>
***                                              CON_PATH(_237603.con_TYC)) == 
***       +1   /TOTALNONRECUR\_237920
***       +1         (_237921 : {CON_PATH(_237603.primcon_TYC) *
***       +1                     CON_APP(_237729; CON_PATH(_237603.con_TYC))})
***       +1         : CON_PATH(_237603.con_TYC) =
***       +1      ROLL(CON_PATH(_237603.con_TYC),INJ(8, CON_PATH(_237603.con_sum_INT),_237921)), 
**                                         Proj_c > _237922 : 
***                                           ({CON_PATH(_237603.con_TYC) *
***                                             CON_PATH(_237603.label_TYC)} =>
***                                              CON_PATH(_237603.con_TYC)) == 
***       +1   /TOTALNONRECUR\_237923
***       +1         (_237924 : {CON_PATH(_237603.con_TYC) *
***       +1                     CON_PATH(_237603.label_TYC)})
***       +1         : CON_PATH(_237603.con_TYC) =
***       +1      ROLL(CON_PATH(_237603.con_TYC),INJ(9, CON_PATH(_237603.con_sum_INT),_237924)), 
**                                         Typecase_c > _237925 : 
***                                           ({arg_LAB = CON_PATH(_237603.con_TYC),
***                                             kind_LAB = CON_PATH(_237603.kind_TYC),
***                                             arms_LAB = CON_APP(_237729;
***                                                           
***       +1   {CON_PATH(_237603.primcon_TYC) *
***       +1    CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
***       +1                      CON_PATH(_237603.kind_TYC)}) *
***       +1    CON_PATH(_237603.con_TYC)}),
***                                             default_LAB = CON_PATH(_237603.con_TYC)} =>
***                                              CON_PATH(_237603.con_TYC)) == /TOTALNONRECUR\_237926
***       +1                                       (_237927 : {arg_LAB = 
***       +1   CON_PATH(_237603.con_TYC),
***       +1                                                   kind_LAB = 
***       +1   CON_PATH(_237603.kind_TYC),
***       +1                                                   arms_LAB = 
***       +1   CON_APP(_237729;
***       +1      {CON_PATH(_237603.primcon_TYC) *
***       +1       CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
***       +1                         CON_PATH(_237603.kind_TYC)}) *
***       +1       CON_PATH(_237603.con_TYC)}),
***       +1                                                   default_LAB = 
***       +1   CON_PATH(_237603.con_TYC)})
***       +1                                       : CON_PATH(_237603.
***       +1   con_TYC) =
***       +1                                    ROLL(CON_PATH(_237603.
***       +1   con_TYC),
***       +1   INJ(10, CON_PATH(_237603.con_sum_INT),_237927)), 
**                                         Typeof_c > _237928 : 
***                                           (CON_PATH(_237603.exp_TYC) =>
***                                              CON_PATH(_237603.con_TYC)) == 
***       +1   /TOTALNONRECUR\_237929
***       +1         (_237930 : CON_PATH(_237603.exp_TYC))
***       +1         : CON_PATH(_237603.con_TYC) =
***       +1      ROLL(CON_PATH(_237603.con_TYC),INJ(11, CON_PATH(_237603.con_sum_INT),_237930)), 
**                                         Var_c > _237931 : 
***                                           (CON_PATH(_237603.var_TYC) =>
***                                              CON_PATH(_237603.con_TYC)) == 
***       +1   /TOTALNONRECUR\_237932
***       +1         (_237933 : CON_PATH(_237603.var_TYC))
***       +1         : CON_PATH(_237603.con_TYC) =
***       +1      ROLL(CON_PATH(_237603.con_TYC),INJ(12, CON_PATH(_237603.con_sum_INT),_237933))]
**                             ), 
*                        +O+Dconbnd_INT > _237934 : 
**                          SIGS_SELF(_237603.+O+Dconbnd_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [conbnd_INT > _237935 : 
***                                           TYPE == CON_PATH(_237603.conbnd_TYC), 
**                                         expose_INT > _237936 : 
***                                           (CON_PATH(_237603.conbnd_TYC) =>
***                                              CON_PATH(_237603.conbnd_sum_INT)) == 
***       +1   /TOTALNONRECUR\_237937
***       +1         (_237938 : CON_PATH(_237603.conbnd_TYC))
***       +1         : CON_PATH(_237603.conbnd_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.conbnd_TYC),CON_PATH(_237603.conbnd_sum_INT),_237938), 
**                                         Code_cb > _237939 : 
***                                           ({CON_PATH(_237603.var_TYC) *
***                                             CON_APP(_237729;
***                                                {CON_PATH(_237603.var_TYC) *
***                                                 CON_PATH(_237603.kind_TYC)}) *
***                                             CON_PATH(_237603.con_TYC)} =>
***                                              CON_PATH(_237603.conbnd_TYC)) == 
***       +1   /TOTALNONRECUR\_237940
***       +1         (_237941 : {CON_PATH(_237603.var_TYC) *
***       +1                     CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
***       +1                                       CON_PATH(_237603.kind_TYC)}) *
***       +1                     CON_PATH(_237603.con_TYC)})
***       +1         : CON_PATH(_237603.conbnd_TYC) =
***       +1      ROLL(CON_PATH(_237603.conbnd_TYC),INJ(0, CON_PATH(_237603.conbnd_sum_INT)
***       +2   ,_237941)), 
**                                         Con_cb > _237942 : 
***                                           ({CON_PATH(_237603.var_TYC) *
***                                             CON_PATH(_237603.con_TYC)} =>
***                                              CON_PATH(_237603.conbnd_TYC)) == 
***       +1   /TOTALNONRECUR\_237943
***       +1         (_237944 : {CON_PATH(_237603.var_TYC) *
***       +1                     CON_PATH(_237603.con_TYC)})
***       +1         : CON_PATH(_237603.conbnd_TYC) =
***       +1      ROLL(CON_PATH(_237603.conbnd_TYC),INJ(1, CON_PATH(_237603.conbnd_sum_INT)
***       +2   ,_237944)), 
**                                         Open_cb > _237945 : 
***                                           ({CON_PATH(_237603.var_TYC) *
***                                             CON_APP(_237729;
***                                                {CON_PATH(_237603.var_TYC) *
***                                                 CON_PATH(_237603.kind_TYC)}) *
***                                             CON_PATH(_237603.con_TYC)} =>
***                                              CON_PATH(_237603.conbnd_TYC)) == 
***       +1   /TOTALNONRECUR\_237946
***       +1         (_237947 : {CON_PATH(_237603.var_TYC) *
***       +1                     CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
***       +1                                       CON_PATH(_237603.kind_TYC)}) *
***       +1                     CON_PATH(_237603.con_TYC)})
***       +1         : CON_PATH(_237603.conbnd_TYC) =
***       +1      ROLL(CON_PATH(_237603.conbnd_TYC),INJ(2, CON_PATH(_237603.conbnd_sum_INT)
***       +2   ,_237947))]
**                             ), 
*                        +O+DconditionCode_INT > _237948 : 
**                          SIGS_SELF(_237603.+O+DconditionCode_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [conditionCode_INT > _237949 : 
***                                           TYPE == CON_PATH(_237603.conditionCode_TYC), 
**                                         expose_INT > _237950 : 
***                                           (CON_PATH(_237603.conditionCode_TYC) =>
***                                              CON_PATH(_237603.conditionCode_sum_INT)) == /TOTALNONRECUR\_237951
***       +1            (_237952 : CON_PATH(_237603.conditionCode_TYC))
***       +1            : CON_PATH(_237603.conditionCode_sum_INT) =
***       +1         UNROLL(CON_PATH(_237603.conditionCode_TYC),CON_PATH(
***       +1   _237603.conditionCode_sum_INT),_237952), 
**                                         And_cc > _237953 : 
***                                           ({CON_PATH(_237603.conditionCode_TYC) *
***                                             CON_PATH(_237603.conditionCode_TYC)} =>
***                                              CON_PATH(_237603.conditionCode_TYC)) == /TOTALNONRECUR\_237954
***       +1           (_237955 : {CON_PATH(_237603.conditionCode_TYC) *
***       +1                       CON_PATH(_237603.conditionCode_TYC)})
***       +1           : CON_PATH(_237603.conditionCode_TYC) =
***       +1        ROLL(CON_PATH(_237603.conditionCode_TYC),INJ(0, 
***       +1   CON_PATH(_237603.conditionCode_sum_INT),_237955)), 
**                                         Exp_cc > _237956 : 
***                                           (CON_PATH(_237603.exp_TYC) =>
***                                              CON_PATH(_237603.conditionCode_TYC)) == 
***       +1   /TOTALNONRECUR\_237957
***       +1         (_237958 : CON_PATH(_237603.exp_TYC))
***       +1         : CON_PATH(_237603.conditionCode_TYC) =
***       +1      ROLL(CON_PATH(_237603.conditionCode_TYC),INJ(1, 
***       +2   CON_PATH(_237603.conditionCode_sum_INT),_237958)), 
**                                         Not_cc > _237959 : 
***                                           (CON_PATH(_237603.conditionCode_TYC) =>
***                                              CON_PATH(_237603.conditionCode_TYC)) == 
***       +1   /TOTALNONRECUR\_237960
***       +1         (_237961 : CON_PATH(_237603.conditionCode_TYC))
***       +1         : CON_PATH(_237603.conditionCode_TYC) =
***       +1      ROLL(CON_PATH(_237603.conditionCode_TYC),INJ(2, 
***       +2   CON_PATH(_237603.conditionCode_sum_INT),_237961)), 
**                                         Or_cc > _237962 : 
***                                           ({CON_PATH(_237603.conditionCode_TYC) *
***                                             CON_PATH(_237603.conditionCode_TYC)} =>
***                                              CON_PATH(_237603.conditionCode_TYC)) == /TOTALNONRECUR\_237963
***       +1           (_237964 : {CON_PATH(_237603.conditionCode_TYC) *
***       +1                       CON_PATH(_237603.conditionCode_TYC)})
***       +1           : CON_PATH(_237603.conditionCode_TYC) =
***       +1        ROLL(CON_PATH(_237603.conditionCode_TYC),INJ(3, 
***       +1   CON_PATH(_237603.conditionCode_sum_INT),_237964))]
**                             ), 
*                        +O+Dexp_INT > _237965 : 
**                          SIGS_SELF(_237603.+O+Dexp_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [exp_INT > _237966 : 
***                                           TYPE == CON_PATH(_237603.exp_TYC), 
**                                         expose_INT > _237967 : 
***                                           (CON_PATH(_237603.exp_TYC) =>
***                                              CON_PATH(_237603.exp_sum_INT)) == 
***       +1   /TOTALNONRECUR\_237968
***       +1         (_237969 : CON_PATH(_237603.exp_TYC))
***       +1         : CON_PATH(_237603.exp_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.exp_TYC),CON_PATH(_237603.exp_sum_INT),_237969), 
**                                         App_e > _237970 : 
***                                           ({CON_PATH(_237603.openness_TYC) *
***                                             CON_PATH(_237603.exp_TYC) *
***                                             CON_APP(_237729;
***                                                CON_PATH(_237603.con_TYC)) *
***                                             CON_APP(_237729;
***                                                CON_PATH(_237603.exp_TYC)) *
***                                             CON_APP(_237729;
***                                                CON_PATH(_237603.exp_TYC))} =>
***                                              CON_PATH(_237603.exp_TYC)) == 
***       +1   /TOTALNONRECUR\_237971
***       +1         (_237972 : {CON_PATH(_237603.openness_TYC) *
***       +1                     CON_PATH(_237603.exp_TYC) *
***       +1                     CON_APP(_237729; CON_PATH(_237603.con_TYC)) *
***       +1                     CON_APP(_237729; CON_PATH(_237603.exp_TYC)) *
***       +1                     CON_APP(_237729; CON_PATH(_237603.exp_TYC))})
***       +1         : CON_PATH(_237603.exp_TYC) =
***       +1      ROLL(CON_PATH(_237603.exp_TYC),INJ(0, CON_PATH(_237603.exp_sum_INT),_237972)), 
**                                         Const_e > _237973 : 
***                                           (CON_APP(CON_PATH(_237611.value_TYC);
***                                               CON_PATH(_237603.con_TYC),
***                                               CON_PATH(_237603.exp_TYC)) =>
***                                              CON_PATH(_237603.exp_TYC)) == /TOTALNONRECUR\_237974
***       +1         (_237975 : CON_APP(CON_PATH(_237611.value_TYC);
***       +1                       CON_PATH(_237603.con_TYC),
***       +1                       CON_PATH(_237603.exp_TYC)))
***       +1         : CON_PATH(_237603.exp_TYC) =
***       +1      ROLL(CON_PATH(_237603.exp_TYC),INJ(1, CON_PATH(
***       +1   _237603.exp_sum_INT)
***       +1   ,_237975)), 
**                                         ExternApp_e > _237976 : 
***                                           ({CON_PATH(_237603.exp_TYC) *
***                                             CON_APP(_237729;
***                                                CON_PATH(_237603.exp_TYC))} =>
***                                              CON_PATH(_237603.exp_TYC)) == 
***       +1   /TOTALNONRECUR\_237977
***       +1         (_237978 : {CON_PATH(_237603.exp_TYC) *
***       +1                     CON_APP(_237729; CON_PATH(_237603.exp_TYC))})
***       +1         : CON_PATH(_237603.exp_TYC) =
***       +1      ROLL(CON_PATH(_237603.exp_TYC),INJ(2, CON_PATH(_237603.exp_sum_INT),_237978)), 
**                                         Handle_e > _237979 : 
***                                           ({body_LAB = CON_PATH(_237603.exp_TYC),
***                                             result_type_LAB = 
***       +1   CON_PATH(_237603.con_TYC),
***                                             bound_LAB = CON_PATH(_237603.var_TYC),
***                                             handler_LAB = CON_PATH(_237603.exp_TYC)} =>
***                                              CON_PATH(_237603.exp_TYC)) == /TOTALNONRECUR\_237980
***       +1                  (_237981 : {body_LAB = CON_PATH(_237603.
***       +1   exp_TYC),
***       +1                              result_type_LAB = CON_PATH(
***       +1   _237603.con_TYC),
***       +1                              bound_LAB = CON_PATH(_237603.
***       +1   var_TYC),
***       +1                              handler_LAB = CON_PATH(
***       +1   _237603.exp_TYC)})
***       +1                  : CON_PATH(_237603.exp_TYC) =
***       +1               ROLL(CON_PATH(_237603.exp_TYC),INJ(3, 
***       +1   CON_PATH(_237603.exp_sum_INT)
***       +1   ,_237981)), 
**                                         Let_e > _237982 : 
***                                           ({CON_PATH(_237603.letsort_TYC) *
***                                             CON_APP(_237729;
***                                                CON_PATH(_237603.bnd_TYC)) *
***                                             CON_PATH(_237603.exp_TYC)} =>
***                                              CON_PATH(_237603.exp_TYC)) == 
***       +1   /TOTALNONRECUR\_237983
***       +1         (_237984 : {CON_PATH(_237603.letsort_TYC) *
***       +1                     CON_APP(_237729; CON_PATH(_237603.bnd_TYC)) *
***       +1                     CON_PATH(_237603.exp_TYC)})
***       +1         : CON_PATH(_237603.exp_TYC) =
***       +1      ROLL(CON_PATH(_237603.exp_TYC),INJ(4, CON_PATH(_237603.exp_sum_INT),_237984)), 
**                                         Prim_e > _237985 : 
***                                           ({CON_PATH(_237603.allprim_TYC) *
***                                             CON_APP(_237729;
***                                                CON_PATH(_237603.con_TYC)) *
***                                             CON_APP(_237729;
***                                                CON_PATH(_237603.exp_TYC))} =>
***                                              CON_PATH(_237603.exp_TYC)) == 
***       +1   /TOTALNONRECUR\_237986
***       +1         (_237987 : {CON_PATH(_237603.allprim_TYC) *
***       +1                     CON_APP(_237729; CON_PATH(_237603.con_TYC)) *
***       +1                     CON_APP(_237729; CON_PATH(_237603.exp_TYC))})
***       +1         : CON_PATH(_237603.exp_TYC) =
***       +1      ROLL(CON_PATH(_237603.exp_TYC),INJ(5, CON_PATH(_237603.exp_sum_INT),_237987)), 
**                                         Raise_e > _237988 : 
***                                           ({CON_PATH(_237603.exp_TYC) *
***                                             CON_PATH(_237603.con_TYC)} =>
***                                              CON_PATH(_237603.exp_TYC)) == 
***       +1   /TOTALNONRECUR\_237989
***       +1         (_237990 : {CON_PATH(_237603.exp_TYC) *
***       +1                     CON_PATH(_237603.con_TYC)})
***       +1         : CON_PATH(_237603.exp_TYC) =
***       +1      ROLL(CON_PATH(_237603.exp_TYC),INJ(6, CON_PATH(_237603.exp_sum_INT),_237990)), 
**                                         Switch_e > _237991 : 
***                                           (CON_PATH(_237603.switch_TYC) =>
***                                              CON_PATH(_237603.exp_TYC)) == 
***       +1   /TOTALNONRECUR\_237992
***       +1         (_237993 : CON_PATH(_237603.switch_TYC))
***       +1         : CON_PATH(_237603.exp_TYC) =
***       +1      ROLL(CON_PATH(_237603.exp_TYC),INJ(7, CON_PATH(_237603.exp_sum_INT),_237993)), 
**                                         Var_e > _237994 : 
***                                           (CON_PATH(_237603.var_TYC) =>
***                                              CON_PATH(_237603.exp_TYC)) == 
***       +1   /TOTALNONRECUR\_237995
***       +1         (_237996 : CON_PATH(_237603.var_TYC))
***       +1         : CON_PATH(_237603.exp_TYC) =
***       +1      ROLL(CON_PATH(_237603.exp_TYC),INJ(8, CON_PATH(_237603.exp_sum_INT),_237996))]
**                             ), 
*                        +O+Dfunction_INT > _237997 : 
**                          SIGS_SELF(_237603.+O+Dfunction_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [function_INT > _237998 : 
***                                           TYPE == CON_PATH(_237603.function_TYC), 
**                                         expose_INT > _237999 : 
***                                           (CON_PATH(_237603.function_TYC) =>
***                                              CON_PATH(_237603.function_sum_INT)) == 
***       +1   /TOTALNONRECUR\_238000
***       +1         (_238001 : CON_PATH(_237603.function_TYC))
***       +1         : CON_PATH(_237603.function_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.function_TYC),CON_PATH(_237603.function_sum_INT),_238001), 
**                                         Function > _238002 : 
***                                           ({effect_LAB = CON_PATH(_237603.effect_TYC),
***                                             body_LAB = CON_PATH(_237603.exp_TYC),
***                                             recursive_LAB = 
***       +1   CON_PATH(_237603.recursive_TYC),
***                                             body_type_LAB = CON_PATH(_237603.con_TYC),
***                                             eFormals_LAB = 
***       +1   CON_APP(_237729;
***       +1      {CON_PATH(_237603.var_TYC) *
***       +1       CON_PATH(_237603.niltrace_TYC) *
***       +1       CON_PATH(_237603.con_TYC)}),
***                                             fFormals_LAB = 
***       +1   CON_APP(_237729;
***       +1      CON_PATH(_237603.var_TYC)),
***                                             tFormals_LAB = 
***       +1   CON_APP(_237729;
***       +1      {CON_PATH(_237603.var_TYC) *
***       +1       CON_PATH(_237603.kind_TYC)}),
***                                             isDependent_LAB = _237845} =>
***                                              CON_PATH(_237603.function_TYC)) == /TOTALNONRECUR\_238003
***       +1                           (_238004 : {effect_LAB = CON_PATH(
***       +1   _237603.effect_TYC),
***       +1                                       body_LAB = CON_PATH(
***       +1   _237603.exp_TYC),
***       +1                                       recursive_LAB = 
***       +1   CON_PATH(_237603.recursive_TYC),
***       +1                                       body_type_LAB = 
***       +1   CON_PATH(_237603.con_TYC),
***       +1                                       eFormals_LAB = 
***       +1   CON_APP(_237729;
***       +1      {CON_PATH(_237603.var_TYC) *
***       +1       CON_PATH(_237603.niltrace_TYC) *
***       +1       CON_PATH(_237603.con_TYC)}),
***       +1                                       fFormals_LAB = 
***       +1   CON_APP(_237729;
***       +1      CON_PATH(_237603.var_TYC)),
***       +1                                       tFormals_LAB = 
***       +1   CON_APP(_237729;
***       +1      {CON_PATH(_237603.var_TYC) *
***       +1       CON_PATH(_237603.kind_TYC)}),
***       +1                                       isDependent_LAB = _237845})
***       +1                           : CON_PATH(_237603.function_TYC) =
***       +1                        ROLL(CON_PATH(_237603.function_TYC),
***       +1   INJ(0, CON_PATH(_237603.function_sum_INT),_238004))]
**                             ), 
*                        +O+Dkind_INT > _238005 : 
**                          SIGS_SELF(_237603.+O+Dkind_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [kind_INT > _238006 : 
***                                           TYPE == CON_PATH(_237603.kind_TYC), 
**                                         expose_INT > _238007 : 
***                                           (CON_PATH(_237603.kind_TYC) =>
***                                              CON_PATH(_237603.kind_sum_INT)) == 
***       +1   /TOTALNONRECUR\_238008
***       +1         (_238009 : CON_PATH(_237603.kind_TYC))
***       +1         : CON_PATH(_237603.kind_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.kind_TYC),CON_PATH(_237603.kind_sum_INT),_238009), 
**                                         Type_k > _238010 : 
***                                           CON_PATH(_237603.kind_TYC) == 
***       +1   ROLL(CON_PATH(_237603.kind_TYC),INJ(0, CON_PATH(_237603.kind_sum_INT))), 
**                                         Arrow_k > _238011 : 
***                                           ({CON_PATH(_237603.openness_TYC) *
***                                             CON_APP(_237729;
***                                                {CON_PATH(_237603.var_TYC) *
***                                                 CON_PATH(_237603.kind_TYC)}) *
***                                             CON_PATH(_237603.kind_TYC)} =>
***                                              CON_PATH(_237603.kind_TYC)) == 
***       +1   /TOTALNONRECUR\_238012
***       +1         (_238013 : {CON_PATH(_237603.openness_TYC) *
***       +1                     CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
***       +1                                       CON_PATH(_237603.kind_TYC)}) *
***       +1                     CON_PATH(_237603.kind_TYC)})
***       +1         : CON_PATH(_237603.kind_TYC) =
***       +1      ROLL(CON_PATH(_237603.kind_TYC),INJ(1, CON_PATH(_237603.kind_sum_INT),_238013)), 
**                                         Record_k > _238014 : 
***                                           (CON_APP(CON_PATH(_237603.sequence_TYC);
***                                               {CON_PATH(_237603.label_TYC) *
***                                                CON_PATH(_237603.var_TYC)},
***                                               CON_PATH(_237603.kind_TYC)) =>
***                                              CON_PATH(_237603.kind_TYC)) == /TOTALNONRECUR\_238015
***       +1            (_238016 : CON_APP(CON_PATH(_237603.sequence_TYC);
***       +1                          {CON_PATH(_237603.label_TYC) *
***       +1                           CON_PATH(_237603.var_TYC)},
***       +1                          CON_PATH(_237603.kind_TYC)))
***       +1            : CON_PATH(_237603.kind_TYC) =
***       +1         ROLL(CON_PATH(_237603.kind_TYC),INJ(2, CON_PATH(
***       +1   _237603.kind_sum_INT)
***       +1   ,_238016)), 
**                                         SingleType_k > _238017 : 
***                                           (CON_PATH(_237603.con_TYC) =>
***                                              CON_PATH(_237603.kind_TYC)) == 
***       +1   /TOTALNONRECUR\_238018
***       +1         (_238019 : CON_PATH(_237603.con_TYC))
***       +1         : CON_PATH(_237603.kind_TYC) =
***       +1      ROLL(CON_PATH(_237603.kind_TYC),INJ(3, CON_PATH(_237603.kind_sum_INT),_238019)), 
**                                         Single_k > _238020 : 
***                                           (CON_PATH(_237603.con_TYC) =>
***                                              CON_PATH(_237603.kind_TYC)) == 
***       +1   /TOTALNONRECUR\_238021
***       +1         (_238022 : CON_PATH(_237603.con_TYC))
***       +1         : CON_PATH(_237603.kind_TYC) =
***       +1      ROLL(CON_PATH(_237603.kind_TYC),INJ(4, CON_PATH(_237603.kind_sum_INT),_238022))]
**                             ), 
*                        +O+Dswitch_INT > _238023 : 
**                          SIGS_SELF(_237603.+O+Dswitch_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [switch_INT > _238024 : 
***                                           TYPE == CON_PATH(_237603.switch_TYC), 
**                                         expose_INT > _238025 : 
***                                           (CON_PATH(_237603.switch_TYC) =>
***                                              CON_PATH(_237603.switch_sum_INT)) == 
***       +1   /TOTALNONRECUR\_238026
***       +1         (_238027 : CON_PATH(_237603.switch_TYC))
***       +1         : CON_PATH(_237603.switch_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.switch_TYC),CON_PATH(_237603.switch_sum_INT),_238027), 
**                                         Exncase_e > _238028 : 
***                                           ({arg_LAB = CON_PATH(_237603.exp_TYC),
***                                             result_type_LAB = 
***       +1   CON_PATH(_237603.con_TYC),
***                                             bound_LAB = CON_PATH(_237603.var_TYC),
***                                             arms_LAB = CON_APP(_237729;
***                                                           
***       +1   {CON_PATH(_237603.exp_TYC) *
***       +1    CON_PATH(_237603.niltrace_TYC) *
***       +1    CON_PATH(_237603.exp_TYC)}),
***                                             default_LAB = 
***       +1   CON_APP(_237730;
***       +1      CON_PATH(_237603.exp_TYC))} =>
***                                              CON_PATH(_237603.switch_TYC)) == /TOTALNONRECUR\_238029
***       +1                       (_238030 : {arg_LAB = CON_PATH(
***       +1   _237603.exp_TYC),
***       +1                                   result_type_LAB = 
***       +1   CON_PATH(_237603.con_TYC),
***       +1                                   bound_LAB = CON_PATH(
***       +1   _237603.var_TYC),
***       +1                                   arms_LAB = CON_APP(_237729;
***       +1                                                 {CON_PATH(
***       +1   _237603.exp_TYC) *
***       +1                                                  CON_PATH(
***       +1   _237603.niltrace_TYC) *
***       +1                                                  CON_PATH(
***       +1   _237603.exp_TYC)}),
***       +1                                   default_LAB = CON_APP(_237730;
***       +1                                                    CON_PATH(
***       +1   _237603.exp_TYC))})
***       +1                       : CON_PATH(_237603.switch_TYC) =
***       +1                    ROLL(CON_PATH(_237603.switch_TYC),
***       +1   INJ(0, CON_PATH(_237603.switch_sum_INT),_238030)), 
**                                         Ifthenelse_e > _238031 : 
***                                           ({arg_LAB = CON_PATH(
***       +1   _237603.conditionCode_TYC),
***                                             elseArm_LAB = CON_PATH(_237603.exp_TYC),
***                                             result_type_LAB = 
***       +1   CON_PATH(_237603.con_TYC),
***                                             thenArm_LAB = CON_PATH(_237603.exp_TYC)} =>
***                                              CON_PATH(_237603.switch_TYC)) == /TOTALNONRECUR\_238032
***       +1                    (_238033 : {arg_LAB = CON_PATH(_237603.
***       +1   conditionCode_TYC),
***       +1                                elseArm_LAB = CON_PATH(
***       +1   _237603.exp_TYC),
***       +1                                result_type_LAB = CON_PATH(
***       +1   _237603.con_TYC),
***       +1                                thenArm_LAB = CON_PATH(
***       +1   _237603.exp_TYC)})
***       +1                    : CON_PATH(_237603.switch_TYC) =
***       +1                 ROLL(CON_PATH(_237603.switch_TYC),INJ(1, 
***       +1   CON_PATH(_237603.switch_sum_INT),_238033)), 
**                                         Intsw_e > _238034 : 
***                                           ({arg_LAB = CON_PATH(_237603.exp_TYC),
***                                             size_LAB = CON_PATH(_237611.intsize_TYC),
***                                             result_type_LAB = 
***       +1   CON_PATH(_237603.con_TYC),
***                                             arms_LAB = CON_APP(_237729;
***                                                           
***       +1   {CON_PATH(_237603.w32_TYC) *
***       +1    CON_PATH(_237603.exp_TYC)}),
***                                             default_LAB = 
***       +1   CON_APP(_237730;
***       +1      CON_PATH(_237603.exp_TYC))} =>
***                                              CON_PATH(_237603.switch_TYC)) == /TOTALNONRECUR\_238035
***       +1                  (_238036 : {arg_LAB = CON_PATH(_237603.
***       +1   exp_TYC),
***       +1                              size_LAB = CON_PATH(_237611.
***       +1   intsize_TYC),
***       +1                              result_type_LAB = CON_PATH(
***       +1   _237603.con_TYC),
***       +1                              arms_LAB = CON_APP(_237729;
***       +1                                            {CON_PATH(
***       +1   _237603.w32_TYC) *
***       +1                                             CON_PATH(
***       +1   _237603.exp_TYC)}),
***       +1                              default_LAB = CON_APP(_237730;
***       +1                                               CON_PATH(
***       +1   _237603.exp_TYC))})
***       +1                  : CON_PATH(_237603.switch_TYC) =
***       +1               ROLL(CON_PATH(_237603.switch_TYC),INJ(2, 
***       +1   CON_PATH(_237603.switch_sum_INT),_238036)), 
**                                         Sumsw_e > _238037 : 
***                                           ({arg_LAB = CON_PATH(_237603.exp_TYC),
***                                             result_type_LAB = 
***       +1   CON_PATH(_237603.con_TYC),
***                                             sumtype_LAB = CON_PATH(_237603.con_TYC),
***                                             bound_LAB = CON_PATH(_237603.var_TYC),
***                                             arms_LAB = CON_APP(_237729;
***                                                           
***       +1   {CON_PATH(_237603.w32_TYC) *
***       +1    CON_PATH(_237603.niltrace_TYC) *
***       +1    CON_PATH(_237603.exp_TYC)}),
***                                             default_LAB = 
***       +1   CON_APP(_237730;
***       +1      CON_PATH(_237603.exp_TYC))} =>
***                                              CON_PATH(_237603.switch_TYC)) == /TOTALNONRECUR\_238038
***       +1                       (_238039 : {arg_LAB = CON_PATH(
***       +1   _237603.exp_TYC),
***       +1                                   result_type_LAB = 
***       +1   CON_PATH(_237603.con_TYC),
***       +1                                   sumtype_LAB = CON_PATH(
***       +1   _237603.con_TYC),
***       +1                                   bound_LAB = CON_PATH(
***       +1   _237603.var_TYC),
***       +1                                   arms_LAB = CON_APP(_237729;
***       +1                                                 {CON_PATH(
***       +1   _237603.w32_TYC) *
***       +1                                                  CON_PATH(
***       +1   _237603.niltrace_TYC) *
***       +1                                                  CON_PATH(
***       +1   _237603.exp_TYC)}),
***       +1                                   default_LAB = CON_APP(_237730;
***       +1                                                    CON_PATH(
***       +1   _237603.exp_TYC))})
***       +1                       : CON_PATH(_237603.switch_TYC) =
***       +1                    ROLL(CON_PATH(_237603.switch_TYC),
***       +1   INJ(3, CON_PATH(_237603.switch_sum_INT),_238039)), 
**                                         Typecase_e > _238040 : 
***                                           ({arg_LAB = CON_PATH(_237603.con_TYC),
***                                             result_type_LAB = 
***       +1   CON_PATH(_237603.con_TYC),
***                                             arms_LAB = CON_APP(_237729;
***                                                           
***       +1   {CON_PATH(_237603.primcon_TYC) *
***       +1    CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
***       +1                      CON_PATH(_237603.kind_TYC)}) *
***       +1    CON_PATH(_237603.exp_TYC)}),
***                                             default_LAB = CON_PATH(_237603.exp_TYC)} =>
***                                              CON_PATH(_237603.switch_TYC)) == /TOTALNONRECUR\_238041
***       +1                                       (_238042 : {arg_LAB = 
***       +1   CON_PATH(_237603.con_TYC),
***       +1                                                   result_type_LAB = 
***       +1   CON_PATH(_237603.con_TYC),
***       +1                                                   arms_LAB = 
***       +1   CON_APP(_237729;
***       +1      {CON_PATH(_237603.primcon_TYC) *
***       +1       CON_APP(_237729; {CON_PATH(_237603.var_TYC) *
***       +1                         CON_PATH(_237603.kind_TYC)}) *
***       +1       CON_PATH(_237603.exp_TYC)}),
***       +1                                                   default_LAB = 
***       +1   CON_PATH(_237603.exp_TYC)})
***       +1                                       : CON_PATH(_237603.
***       +1   switch_TYC) =
***       +1                                    ROLL(CON_PATH(_237603.
***       +1   switch_TYC),
***       +1   INJ(4, CON_PATH(_237603.switch_sum_INT),_238042))]
**                             ), 
*                        import_entry_TYC > _238043 : 
**                          TYPE = CON_MU(/-\(_238044)(SUM[
**                                                        (ImportType, ImportValue);
**                                                        0;
**                                                        ({CON_PATH(_237603.label_TYC) *
**                                                          CON_PATH(_237603.var_TYC) *
**                                                          CON_PATH(_237603.kind_TYC)},
**                                                         {CON_PATH(_237603.label_TYC) *
**                                                          CON_PATH(_237603.var_TYC) *
**                                                          CON_PATH(_237603.niltrace_TYC) *
**                                                          CON_PATH(_237603.con_TYC)})]))#0, 
*                        import_entry_sumarg_INT > _238045 : 
**                          KIND(2) = ({CON_PATH(_237603.label_TYC) *
**                                      CON_PATH(_237603.var_TYC) *
**                                      CON_PATH(_237603.kind_TYC)},
**                                     {CON_PATH(_237603.label_TYC) *
**                                      CON_PATH(_237603.var_TYC) *
**                                      CON_PATH(_237603.niltrace_TYC) *
**                                      CON_PATH(_237603.con_TYC)}), 
*                        import_entry_sum_INT > _238046 : 
**                          TYPE = SUM[
**                                    (ImportType, ImportValue);
**                                    0;
**                                    CON_PATH(_237603.import_entry_sumarg_INT)], 
*                        +O+Dimport_entry_INT > _238047 : 
**                          SIGS_SELF(_237603.+O+Dimport_entry_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [import_entry_INT > _238048 : 
***                                           TYPE == CON_PATH(_237603.import_entry_TYC), 
**                                         expose_INT > _238049 : 
***                                           (CON_PATH(_237603.import_entry_TYC) =>
***                                              CON_PATH(_237603.import_entry_sum_INT)) == /TOTALNONRECUR\_238050
***       +1           (_238051 : CON_PATH(_237603.import_entry_TYC))
***       +1           : CON_PATH(_237603.import_entry_sum_INT) =
***       +1        UNROLL(CON_PATH(_237603.import_entry_TYC),CON_PATH(
***       +1   _237603.import_entry_sum_INT),_238051), 
**                                         ImportType > _238052 : 
***                                           ({CON_PATH(_237603.label_TYC) *
***                                             CON_PATH(_237603.var_TYC) *
***                                             CON_PATH(_237603.kind_TYC)} =>
***                                              CON_PATH(_237603.import_entry_TYC)) == 
***       +1   /TOTALNONRECUR\_238053
***       +1         (_238054 : {CON_PATH(_237603.label_TYC) *
***       +1                     CON_PATH(_237603.var_TYC) *
***       +1                     CON_PATH(_237603.kind_TYC)})
***       +1         : CON_PATH(_237603.import_entry_TYC) =
***       +1      ROLL(CON_PATH(_237603.import_entry_TYC),INJ(0, 
***       +2   CON_PATH(_237603.import_entry_sum_INT),_238054)), 
**                                         ImportValue > _238055 : 
***                                           ({CON_PATH(_237603.label_TYC) *
***                                             CON_PATH(_237603.var_TYC) *
***                                             CON_PATH(_237603.niltrace_TYC) *
***                                             CON_PATH(_237603.con_TYC)} =>
***                                              CON_PATH(_237603.import_entry_TYC)) == 
***       +1   /TOTALNONRECUR\_238056
***       +1         (_238057 : {CON_PATH(_237603.label_TYC) *
***       +1                     CON_PATH(_237603.var_TYC) *
***       +1                     CON_PATH(_237603.niltrace_TYC) *
***       +1                     CON_PATH(_237603.con_TYC)})
***       +1         : CON_PATH(_237603.import_entry_TYC) =
***       +1      ROLL(CON_PATH(_237603.import_entry_TYC),INJ(1, 
***       +2   CON_PATH(_237603.import_entry_sum_INT),_238057))]
**                             ), 
*                        export_entry_TYC > _238058 : 
**                          TYPE = CON_MU(/-\(_238059)(SUM[
**                                                        (ExportType, ExportValue);
**                                                        0;
**                                                        ({CON_PATH(_237603.label_TYC) *
**                                                          CON_PATH(_237603.var_TYC)},
**                                                         {CON_PATH(_237603.label_TYC) *
**                                                          CON_PATH(_237603.var_TYC)})]))#0, 
*                        export_entry_sumarg_INT > _238060 : 
**                          KIND(2) = ({CON_PATH(_237603.label_TYC) *
**                                      CON_PATH(_237603.var_TYC)},
**                                     {CON_PATH(_237603.label_TYC) *
**                                      CON_PATH(_237603.var_TYC)}), 
*                        export_entry_sum_INT > _238061 : 
**                          TYPE = SUM[
**                                    (ExportType, ExportValue);
**                                    0;
**                                    CON_PATH(_237603.export_entry_sumarg_INT)], 
*                        +Eexport_entry_INT > _238062 : 
**                          ({CON_PATH(_237603.export_entry_TYC) *
**                            CON_PATH(_237603.export_entry_TYC)} ->
**                             CON_MU(/-\(_237651)(SUM[ (false, true); 2; ()]))#0), 
*                        +O+Dexport_entry_INT > _238063 : 
**                          SIGS_SELF(_237603.+O+Dexport_entry_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [export_entry_INT > _238064 : 
***                                           TYPE == CON_PATH(_237603.export_entry_TYC), 
**                                         expose_INT > _238065 : 
***                                           (CON_PATH(_237603.export_entry_TYC) =>
***                                              CON_PATH(_237603.export_entry_sum_INT)) == /TOTALNONRECUR\_238066
***       +1           (_238067 : CON_PATH(_237603.export_entry_TYC))
***       +1           : CON_PATH(_237603.export_entry_sum_INT) =
***       +1        UNROLL(CON_PATH(_237603.export_entry_TYC),CON_PATH(
***       +1   _237603.export_entry_sum_INT),_238067), 
**                                         ExportType > _238068 : 
***                                           ({CON_PATH(_237603.label_TYC) *
***                                             CON_PATH(_237603.var_TYC)} =>
***                                              CON_PATH(_237603.export_entry_TYC)) == 
***       +1   /TOTALNONRECUR\_238069
***       +1         (_238070 : {CON_PATH(_237603.label_TYC) *
***       +1                     CON_PATH(_237603.var_TYC)})
***       +1         : CON_PATH(_237603.export_entry_TYC) =
***       +1      ROLL(CON_PATH(_237603.export_entry_TYC),INJ(0, 
***       +2   CON_PATH(_237603.export_entry_sum_INT),_238070)), 
**                                         ExportValue > _238071 : 
***                                           ({CON_PATH(_237603.label_TYC) *
***                                             CON_PATH(_237603.var_TYC)} =>
***                                              CON_PATH(_237603.export_entry_TYC)) == 
***       +1   /TOTALNONRECUR\_238072
***       +1         (_238073 : {CON_PATH(_237603.label_TYC) *
***       +1                     CON_PATH(_237603.var_TYC)})
***       +1         : CON_PATH(_237603.export_entry_TYC) =
***       +1      ROLL(CON_PATH(_237603.export_entry_TYC),INJ(1, 
***       +2   CON_PATH(_237603.export_entry_sum_INT),_238073))]
**                             ), 
*                        module_TYC > _238074 : 
**                          TYPE = CON_MU(/-\(_238075)(SUM[
**                                                        (MODULE);
**                                                        0;
**                                                        {imports_LAB = 
**        +1   CON_APP(_237729;
**        +1      CON_PATH(_237603.import_entry_TYC)),
**                                                         exports_LAB = 
**        +1   CON_APP(_237729;
**        +1      CON_PATH(_237603.export_entry_TYC)),
**                                                         bnds_LAB = 
**        +1   CON_APP(_237729;
**        +1      CON_PATH(_237603.bnd_TYC))}]))#0, 
*                        module_sumarg_INT > _238076 : 
**                          TYPE = {imports_LAB = CON_APP(_237729;
**                                                   CON_PATH(_237603.import_entry_TYC)),
**                                  exports_LAB = CON_APP(_237729;
**                                                   CON_PATH(_237603.export_entry_TYC)),
**                                  bnds_LAB = CON_APP(_237729; CON_PATH(_237603.bnd_TYC))}, 
*                        module_sum_INT > _238077 : 
**                          TYPE = SUM[ (MODULE); 0; CON_PATH(_237603.module_sumarg_INT)], 
*                        +O+Dmodule_INT > _238078 : 
**                          SIGS_SELF(_237603.+O+Dmodule_INT, 
**                             UNSELF_SIG = NONE
**                             SELF_SIG = [module_INT > _238079 : 
***                                           TYPE == CON_PATH(_237603.module_TYC), 
**                                         expose_INT > _238080 : 
***                                           (CON_PATH(_237603.module_TYC) =>
***                                              CON_PATH(_237603.module_sum_INT)) == 
***       +1   /TOTALNONRECUR\_238081
***       +1         (_238082 : CON_PATH(_237603.module_TYC))
***       +1         : CON_PATH(_237603.module_sum_INT) =
***       +1      UNROLL(CON_PATH(_237603.module_TYC),CON_PATH(_237603.module_sum_INT),_238082), 
**                                         MODULE > _238083 : 
***                                           ({imports_LAB = 
***       +1   CON_APP(_237729;
***       +1      CON_PATH(_237603.import_entry_TYC)),
***                                             exports_LAB = 
***       +1   CON_APP(_237729;
***       +1      CON_PATH(_237603.export_entry_TYC)),
***                                             bnds_LAB = CON_APP(_237729;
***                                                           CON_PATH(_237603.bnd_TYC))} =>
***                                              CON_PATH(_237603.module_TYC)) == /TOTALNONRECUR\_238084
***       +1                           (_238085 : {imports_LAB = 
***       +1   CON_APP(_237729;
***       +1      CON_PATH(_237603.import_entry_TYC)),
***       +1                                       exports_LAB = 
***       +1   CON_APP(_237729;
***       +1      CON_PATH(_237603.export_entry_TYC)),
***       +1                                       bnds_LAB = CON_APP(_237729;
***       +1                                                     
***       +1   CON_PATH(_237603.bnd_TYC))})
***       +1                           : CON_PATH(_237603.module_TYC) =
***       +1                        ROLL(CON_PATH(_237603.module_TYC),
***       +1   INJ(0, CON_PATH(_237603.module_sum_INT),_238085))]
**                             )]
*            )
]
gc_context: 556 items in original context.  40 items in reduced context.
===== Starting Phasesplit: Nil                           =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: Nil                               =====
===== Starting Optimize1: Nil                            =====
===== Starting Vararg: Nil                               =====
===== Starting Inline1: Nil                              =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: Nil                               =====
===== Starting Specialize: Nil                           =====
  0 optimizable candidates.
  0 impure.
  13 escaping.
  0 used polymorphically.
===== Starting Hoist: Nil                                =====
Imports Processed
===== Starting Optimize2: Nil                            =====
===== Starting Inline2: Nil                              =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: Nil                            =====
===== Starting Inline3: Nil                              =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: Nil                               =====
===== Starting ClosureConv: Nil                          =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  15 procedures.  15 recursive components.   Largest component has size 1.
  [Assembling Nil to object file.]
  [Compressing Nil/TM/sparc/nil.sml.s]
Slave compiled Nil
Slave waiting for master to send work.
Flushing MACHINE.
Flushing NIL.
Flushing LINKIL.
Flushing IfGraph.
  [165 imports of total size 804881 were cached.
   2 imports of total size 75061 were uncached and took 0.36 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Rtl/tortl.sig.sml]
  [Elaborating Rtl/tortl.sig.sml non-constrained]
  [writing Rtl/TM/any/tortl.sig.sml.il - unnecessary]
gc_context: 561 items in original context.  34 items in reduced context.
Sending ACK_INTERFACE: interface took 0.865 seconds 
  [Compiling TORTL to assembly]
===== Starting Phasesplit: TORTL                         =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: TORTL                             =====
===== Starting Optimize1: TORTL                          =====
===== Starting Vararg: TORTL                             =====
===== Starting Inline1: TORTL                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: TORTL                             =====
===== Starting Specialize: TORTL                         =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: TORTL                              =====
Imports Processed
===== Starting Optimize2: TORTL                          =====
===== Starting Inline2: TORTL                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: TORTL                          =====
===== Starting Inline3: TORTL                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: TORTL                             =====
===== Starting ClosureConv: TORTL                        =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling TORTL to object file.]
  [Compressing Rtl/TM/sparc/tortl.sig.sml.s]
Slave compiled TORTL
Flushing PPRTL.
Flushing Rtltags.
  [Compiling Core to assembly]
  [156 imports of total size 737197 were cached.
   3 imports of total size 32552 were uncached and took 0.16 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Backend/core.sml]
  [Elaborating Backend/core.sml non-constrained]
  [writing Backend/TM/any/core.sml.il - unnecessary]
gc_context: 553 items in original context.  47 items in reduced context.
===== Starting Phasesplit: Core                          =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: Core                              =====
===== Starting Optimize1: Core                           =====
===== Starting Vararg: Core                              =====
===== Starting Inline1: Core                             =====
  4 functions inlined once.
  13 copies of 6 other functions inlined.
===== Starting Reify1: Core                              =====
===== Starting Specialize: Core                          =====
  6 optimizable candidates.
  1 impure.
  31 escaping.
  0 used polymorphically.
===== Starting Hoist: Core                               =====
Imports Processed
===== Starting Optimize2: Core                           =====
===== Starting Inline2: Core                             =====
  2 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: Core                           =====
===== Starting Inline3: Core                             =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: Core                              =====
===== Starting ClosureConv: Core                         =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  31 procedures.  31 recursive components.   Largest component has size 1.
  [Assembling Core to object file.]
  [Compressing Backend/TM/sparc/core.sml.s]
Slave compiled Core
Slave waiting for master to send work.
Flushing Pprtl.
Flushing Il.
Flushing TORTLBASE.
Flushing NILCONTEXT.
Flushing LINKRTL.
Flushing Alpha.
Flushing NilRewrite.
Flushing TONIL.
  [Compiling TrackStorage to assembly]
  [160 imports of total size 809644 were cached.
   8 imports of total size 70215 were uncached and took 0.76 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Alpha/trackstorage.sml]
  [Elaborating Alpha/trackstorage.sml non-constrained]
where_type concrete case
  [writing Alpha/TM/any/trackstorage.sml.il - unnecessary]
gc_context: 562 items in original context.  51 items in reduced context.
===== Starting Phasesplit: TrackStorage                  =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: TrackStorage                      =====
===== Starting Optimize1: TrackStorage                   =====
===== Starting Vararg: TrackStorage                      =====
===== Starting Inline1: TrackStorage                     =====
  6 functions inlined once.
  5 copies of 2 other functions inlined.
===== Starting Reify1: TrackStorage                      =====
===== Starting Specialize: TrackStorage                  =====
  2 optimizable candidates.
  2 impure.
  17 escaping.
  0 used polymorphically.
===== Starting Hoist: TrackStorage                       =====
Imports Processed
===== Starting Optimize2: TrackStorage                   =====
===== Starting Inline2: TrackStorage                     =====
  3 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: TrackStorage                   =====
===== Starting Inline3: TrackStorage                     =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: TrackStorage                      =====
===== Starting ClosureConv: TrackStorage                 =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  16 procedures.  16 recursive components.   Largest component has size 1.
  [Assembling TrackStorage to object file.]
  [Compressing Alpha/TM/sparc/trackstorage.sml.s]
Slave compiled TrackStorage
Slave waiting for master to send work.
Flushing Measure.
Flushing NILRENAME.
Flushing Ppprim.
Flushing SparcUtils.
Flushing Sparc.
  [Compiling SPARC to assembly]
  [161 imports of total size 813960 were cached.
   0 imports of total size 0 were uncached and took 0.0 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Sparc/sparc.sig.sml]
  [Elaborating Sparc/sparc.sig.sml non-constrained]
  [writing Sparc/TM/any/sparc.sig.sml.il - unnecessary]
gc_context: 555 items in original context.  25 items in reduced context.
===== Starting Phasesplit: SPARC                         =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: SPARC                             =====
===== Starting Optimize1: SPARC                          =====
===== Starting Vararg: SPARC                             =====
===== Starting Inline1: SPARC                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: SPARC                             =====
===== Starting Specialize: SPARC                         =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: SPARC                              =====
Imports Processed
===== Starting Optimize2: SPARC                          =====
===== Starting Inline2: SPARC                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: SPARC                          =====
===== Starting Inline3: SPARC                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: SPARC                             =====
===== Starting ClosureConv: SPARC                        =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling SPARC to object file.]
  [Compressing Sparc/TM/sparc/sparc.sig.sml.s]
Slave compiled SPARC
  [Compiling TOASM to assembly]
  [161 imports of total size 813960 were cached.
   3 imports of total size 10284 were uncached and took 0.06 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Backend/toasm.sig.sml]
  [Elaborating Backend/toasm.sig.sml non-constrained]
  [writing Backend/TM/any/toasm.sig.sml.il - unnecessary]
gc_context: 558 items in original context.  28 items in reduced context.
===== Starting Phasesplit: TOASM                         =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: TOASM                             =====
===== Starting Optimize1: TOASM                          =====
===== Starting Vararg: TOASM                             =====
===== Starting Inline1: TOASM                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: TOASM                             =====
===== Starting Specialize: TOASM                         =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: TOASM                              =====
Imports Processed
===== Starting Optimize2: TOASM                          =====
===== Starting Inline2: TOASM                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: TOASM                          =====
===== Starting Inline3: TOASM                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: TOASM                             =====
===== Starting ClosureConv: TOASM                        =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling TOASM to object file.]
  [Compressing Backend/TM/sparc/toasm.sig.sml.s]
Slave compiled TOASM
  [Compiling PRINTUTILS to assembly]
  [164 imports of total size 824244 were cached.
   0 imports of total size 0 were uncached and took 0.0 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Backend/printutils.sig.sml]
  [Elaborating Backend/printutils.sig.sml non-constrained]
  [writing Backend/TM/any/printutils.sig.sml.il - unnecessary]
gc_context: 558 items in original context.  29 items in reduced context.
===== Starting Phasesplit: PRINTUTILS                    =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: PRINTUTILS                        =====
===== Starting Optimize1: PRINTUTILS                     =====
===== Starting Vararg: PRINTUTILS                        =====
===== Starting Inline1: PRINTUTILS                       =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: PRINTUTILS                        =====
===== Starting Specialize: PRINTUTILS                    =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: PRINTUTILS                         =====
Imports Processed
===== Starting Optimize2: PRINTUTILS                     =====
===== Starting Inline2: PRINTUTILS                       =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: PRINTUTILS                     =====
===== Starting Inline3: PRINTUTILS                       =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: PRINTUTILS                        =====
===== Starting ClosureConv: PRINTUTILS                   =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling PRINTUTILS to object file.]
  [Compressing Backend/TM/sparc/printutils.sig.sml.s]
Slave compiled PRINTUTILS
  [Compiling INTRAPROC to assembly]
  [164 imports of total size 824244 were cached.
   0 imports of total size 0 were uncached and took 0.0 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Backend/intraproc.sig.sml]
  [Elaborating Backend/intraproc.sig.sml non-constrained]
  [writing Backend/TM/any/intraproc.sig.sml.il - unnecessary]
gc_context: 558 items in original context.  28 items in reduced context.
===== Starting Phasesplit: INTRAPROC                     =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: INTRAPROC                         =====
===== Starting Optimize1: INTRAPROC                      =====
===== Starting Vararg: INTRAPROC                         =====
===== Starting Inline1: INTRAPROC                        =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: INTRAPROC                         =====
===== Starting Specialize: INTRAPROC                     =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: INTRAPROC                          =====
Imports Processed
===== Starting Optimize2: INTRAPROC                      =====
===== Starting Inline2: INTRAPROC                        =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: INTRAPROC                      =====
===== Starting Inline3: INTRAPROC                        =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: INTRAPROC                         =====
===== Starting ClosureConv: INTRAPROC                    =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling INTRAPROC to object file.]
  [Compressing Backend/TM/sparc/intraproc.sig.sml.s]
Slave compiled INTRAPROC
Flushing Recursion.
  [Compiling RtlToAsm to assembly]
  [165 imports of total size 825362 were cached.
   5 imports of total size 5870 were uncached and took 0.07 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Backend/rtltoasm.sml]
  [Elaborating Backend/rtltoasm.sml non-constrained]
xsig_sharing_structure_fast calling slow version
xsig_sharing_structure_fast calling slow version
xsig_sharing_structure_fast calling slow version
xsig_sharing_structure_fast calling slow version
xsig_sharing_structure_fast succeeded
xsig_sharing_structure_fast calling slow version
xsig_sharing_structure_fast succeeded
xsig_sharing_structure_fast succeeded
  [writing Backend/TM/any/rtltoasm.sml.il - unnecessary]
gc_context: 564 items in original context.  54 items in reduced context.
===== Starting Phasesplit: RtlToAsm                      =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: RtlToAsm                          =====
===== Starting Optimize1: RtlToAsm                       =====
===== Starting Vararg: RtlToAsm                          =====
===== Starting Inline1: RtlToAsm                         =====
  3 functions inlined once.
  8 copies of 2 other functions inlined.
===== Starting Reify1: RtlToAsm                          =====
===== Starting Specialize: RtlToAsm                      =====
  1 optimizable candidates.
  3 impure.
  17 escaping.
  1 used polymorphically.
===== Starting Hoist: RtlToAsm                           =====
Imports Processed
===== Starting Optimize2: RtlToAsm                       =====
===== Starting Inline2: RtlToAsm                         =====
  3 functions inlined once.
  5 copies of 2 other functions inlined.
===== Starting Optimize3: RtlToAsm                       =====
===== Starting Inline3: RtlToAsm                         =====
  4 functions inlined once.
  2 copies of 1 other functions inlined.
===== Starting Reify2: RtlToAsm                          =====
===== Starting ClosureConv: RtlToAsm                     =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  15 procedures.  15 recursive components.   Largest component has size 1.
  [Assembling RtlToAsm to object file.]
  [Compressing Backend/TM/sparc/rtltoasm.sml.s]
Slave compiled RtlToAsm
Slave waiting for master to send work.
Flushing Bblock.
Flushing Error.
Flushing NilPrimUtilParam.
Flushing Tracetable.
Flushing BBLOCK.
  [Compiling COLOR to assembly]
  [161 imports of total size 811385 were cached.
   2 imports of total size 3445 were uncached and took 0.06 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Backend/color.sig.sml]
  [Elaborating Backend/color.sig.sml non-constrained]
  [writing Backend/TM/any/color.sig.sml.il - unnecessary]
gc_context: 557 items in original context.  27 items in reduced context.
===== Starting Phasesplit: COLOR                         =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: COLOR                             =====
===== Starting Optimize1: COLOR                          =====
===== Starting Vararg: COLOR                             =====
===== Starting Inline1: COLOR                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify1: COLOR                             =====
===== Starting Specialize: COLOR                         =====
  0 optimizable candidates.
  0 impure.
  0 escaping.
  0 used polymorphically.
===== Starting Hoist: COLOR                              =====
Imports Processed
===== Starting Optimize2: COLOR                          =====
===== Starting Inline2: COLOR                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Optimize3: COLOR                          =====
===== Starting Inline3: COLOR                            =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: COLOR                             =====
===== Starting ClosureConv: COLOR                        =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  1 procedures.  1 recursive components.   Largest component has size 1.
  [Assembling COLOR to object file.]
  [Compressing Backend/TM/sparc/color.sig.sml.s]
Slave compiled COLOR
Flushing PrintUtils.
  [Compiling Chaitin to assembly]
  [168 imports of total size 829610 were cached.
   2 imports of total size 3745 were uncached and took 0.02 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Backend/chaitin.sml]
  [Elaborating Backend/chaitin.sml non-constrained]
xsig_sharing_structure_fast calling slow version
xsig_sharing_structure_fast calling slow version
xsig_sharing_structure_fast succeeded
Warning: top-level unresolved tyvar -- setting to type unit
  [writing Backend/TM/any/chaitin.sml.il - unnecessary]
gc_context: 564 items in original context.  66 items in reduced context.
===== Starting Phasesplit: Chaitin                       =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: Chaitin                           =====
===== Starting Optimize1: Chaitin                        =====
===== Starting Vararg: Chaitin                           =====
===== Starting Inline1: Chaitin                          =====
  20 functions inlined once.
  31 copies of 11 other functions inlined.
===== Starting Reify1: Chaitin                           =====
===== Starting Specialize: Chaitin                       =====
  8 optimizable candidates.
  30 impure.
  74 escaping.
  2 used polymorphically.
===== Starting Hoist: Chaitin                            =====
Imports Processed
===== Starting Optimize2: Chaitin                        =====
===== Starting Inline2: Chaitin                          =====
  5 functions inlined once.
  18 copies of 7 other functions inlined.
===== Starting Optimize3: Chaitin                        =====
===== Starting Inline3: Chaitin                          =====
  0 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: Chaitin                           =====
===== Starting ClosureConv: Chaitin                      =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  91 procedures.  91 recursive components.   Largest component has size 1.
  [Assembling Chaitin to object file.]
  [Compressing Backend/TM/sparc/chaitin.sml.s]
Slave compiled Chaitin
Slave waiting for master to send work.
Flushing ToAlpha.
Flushing IlUtil.
Flushing SparcCallConv.
Flushing InfixParse.
Flushing PpnilHtml.
Flushing Ppil.
Flushing Ppnil.
Flushing ExpTable.
Flushing SparcTrackStorage.
Flushing NilError.
Flushing ToSparc.
Flushing Color.
Flushing NilRename.
  [154 imports of total size 662136 were cached.
   26 imports of total size 200086 were uncached and took 1.06 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Nil/subst.sml]
  [Elaborating Nil/subst.sml non-constrained]
  [writing Nil/TM/any/subst.sml.il - unnecessary]
gc_context: 573 items in original context.  72 items in reduced context.
Sending ACK_INTERFACE: interface took 3.979 seconds 
  [Compiling NilSubst to assembly]
===== Starting Phasesplit: NilSubst                      =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: NilSubst                          =====
===== Starting Optimize1: NilSubst                       =====
===== Starting Vararg: NilSubst                          =====
===== Starting Inline1: NilSubst                         =====
  14 functions inlined once.
  31 copies of 10 other functions inlined.
===== Starting Reify1: NilSubst                          =====
===== Starting Specialize: NilSubst                      =====
  6 optimizable candidates.
  10 impure.
  110 escaping.
  14 used polymorphically.
===== Starting Hoist: NilSubst                           =====
Imports Processed
===== Starting Optimize2: NilSubst                       =====
===== Starting Inline2: NilSubst                         =====
  11 functions inlined once.
  13 copies of 6 other functions inlined.
===== Starting Optimize3: NilSubst                       =====
===== Starting Inline3: NilSubst                         =====
  4 functions inlined once.
  10 copies of 5 other functions inlined.
===== Starting Reify2: NilSubst                          =====
===== Starting ClosureConv: NilSubst                     =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  118 procedures.  118 recursive components.   Largest component has size 1.
  [Assembling NilSubst to object file.]
  [Compressing Nil/TM/sparc/subst.sml.s]
Slave compiled NilSubst
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Flushing NILUTIL.
Flushing IlContextEq.
Flushing IlContext.
Flushing NilUtil.
Flushing NilContextPre.
Flushing Analyze.
  [181 imports of total size 868120 were cached.
   17 imports of total size 138746 were uncached and took 0.77 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Nil/hoist.sml]
  [Elaborating Nil/hoist.sml non-constrained]
  [writing Nil/TM/any/hoist.sml.il - unnecessary]
gc_context: 594 items in original context.  73 items in reduced context.
Sending ACK_INTERFACE: interface took 4.398 seconds 
  [Compiling Hoist to assembly]
===== Starting Phasesplit: Hoist                         =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: Hoist                             =====
===== Starting Optimize1: Hoist                          =====
===== Starting Vararg: Hoist                             =====
===== Starting Inline1: Hoist                            =====
  13 functions inlined once.
  21 copies of 7 other functions inlined.
===== Starting Reify1: Hoist                             =====
===== Starting Specialize: Hoist                         =====
  3 optimizable candidates.
  60 impure.
  21 escaping.
  3 used polymorphically.
===== Starting Hoist: Hoist                              =====
Imports Processed
===== Starting Optimize2: Hoist                          =====
===== Starting Inline2: Hoist                            =====
  1 functions inlined once.
  13 copies of 6 other functions inlined.
===== Starting Optimize3: Hoist                          =====
===== Starting Inline3: Hoist                            =====
  0 functions inlined once.
  4 copies of 2 other functions inlined.
===== Starting Reify2: Hoist                             =====
===== Starting ClosureConv: Hoist                        =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  73 procedures.  73 recursive components.   Largest component has size 1.
  [Assembling Hoist to object file.]
  [Compressing Nil/TM/sparc/hoist.sml.s]
Slave compiled Hoist
Slave waiting for master to send work.
Slave waiting for master to send work.
Flushing Trail.
Flushing LINKPARSE.
Flushing FrontEnd.
Flushing NORMALIZE.
Flushing Inline.
Flushing LinkParse.
Flushing Normalize.
Flushing LINKNIL.
Flushing NilContext.
Flushing Linearize.
Flushing TortlBase.
  [197 imports of total size 1006252 were cached.
   7 imports of total size 26754 were uncached and took 0.16 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Nil/toclosure.sml]
  [Elaborating Nil/toclosure.sml non-constrained]
Warning: top-level unresolved tyvar -- setting to type unit
Warning: top-level unresolved tyvar -- setting to type unit
  [writing Nil/TM/any/toclosure.sml.il - unnecessary]
gc_context: 600 items in original context.  75 items in reduced context.
Sending ACK_INTERFACE: interface took 5.873 seconds 
  [Compiling ToClosure to assembly]
===== Starting Phasesplit: ToClosure                     =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: ToClosure                         =====
===== Starting Optimize1: ToClosure                      =====
===== Starting Vararg: ToClosure                         =====
===== Starting Inline1: ToClosure                        =====
  41 functions inlined once.
  32 copies of 11 other functions inlined.
===== Starting Reify1: ToClosure                         =====
===== Starting Specialize: ToClosure                     =====
  5 optimizable candidates.
  59 impure.
  150 escaping.
  2 used polymorphically.
===== Starting Hoist: ToClosure                          =====
Imports Processed
===== Starting Optimize2: ToClosure                      =====
===== Starting Inline2: ToClosure                        =====
  10 functions inlined once.
  40 copies of 15 other functions inlined.
===== Starting Optimize3: ToClosure                      =====
===== Starting Inline3: ToClosure                        =====
  4 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: ToClosure                         =====
===== Starting ClosureConv: ToClosure                    =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  172 procedures.  172 recursive components.   Largest component has size 1.
  [Assembling ToClosure to object file.]
  [Compressing Nil/TM/sparc/toclosure.sml.s]
Slave compiled ToClosure
Slave waiting for master to send work.
Slave waiting for master to send work.
Flushing BOUNDCHECK.
Flushing TRACEOPS.
Flushing Specialize.
Flushing TraceOps.
Flushing BoundCheck.
Flushing TORTLSUM.
Flushing TORTLARRAY.
Flushing Reify.
Flushing TORTLRECORD.
Flushing NilStatic.
Flushing Vararg.
Flushing TortlRecord.
Flushing TortlArray.
Flushing TortlSum.
Flushing Optimize.
Flushing Tortl.
Flushing Equal.
Flushing Signature.
Flushing Datatype.
  [203 imports of total size 1032299 were cached.
   14 imports of total size 53199 were uncached and took 0.79 seconds.]
!!!Could not find _18409: probably bug with SplayMapFn.unionWithi
!!!Could not find _906: probably bug with SplayMapFn.unionWithi
  [Added contexts.]
  [Parsing Nil/tonil.sml]
  [Elaborating Nil/tonil.sml non-constrained]
Warning: top-level unresolved tyvar -- setting to type unit
Warning: top-level unresolved tyvar -- setting to type unit
Warning: top-level unresolved tyvar -- setting to type unit
Warning: top-level unresolved tyvar -- setting to type unit
Warning: top-level unresolved tyvar -- setting to type unit
  [writing Nil/TM/any/tonil.sml.il - unnecessary]
gc_context: 614 items in original context.  96 items in reduced context.
Sending ACK_INTERFACE: interface took 8.969 seconds 
  [Compiling ToNil to assembly]
===== Starting Phasesplit: ToNil                         =====
  Initial context is phase-split
  Bindings are phase-split
  Imports are computed
  Exports are phase-split
===== Starting Rename: ToNil                             =====
===== Starting Optimize1: ToNil                          =====
===== Starting Vararg: ToNil                             =====
===== Starting Inline1: ToNil                            =====
  28 functions inlined once.
  58 copies of 19 other functions inlined.
===== Starting Reify1: ToNil                             =====
===== Starting Specialize: ToNil                         =====
  13 optimizable candidates.
  71 impure.
  93 escaping.
  2 used polymorphically.
===== Starting Hoist: ToNil                              =====
Imports Processed
===== Starting Optimize2: ToNil                          =====
===== Starting Inline2: ToNil                            =====
  5 functions inlined once.
  31 copies of 12 other functions inlined.
===== Starting Optimize3: ToNil                          =====
===== Starting Inline3: ToNil                            =====
  4 functions inlined once.
  0 copies of 0 other functions inlined.
===== Starting Reify2: ToNil                             =====
===== Starting ClosureConv: ToNil                        =====
===== Translating to RTL             =====

===== Translating to TIL-Sparc assembly      =====
  140 procedures.  140 recursive components.   Largest component has size 1.
  [Assembling ToNil to object file.]
  [Compressing Nil/TM/sparc/tonil.sml.s]
Slave compiled ToNil
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Flushing IlStatic.
Slave waiting for master to send work.
Flushing Basis.
Flushing Toil.
Flushing Pat.
Flushing Linknil.
Flushing LinkIl.
Flushing Linkrtl.
Flushing Linkalpha.
Flushing Linksparc.
Flushing Target.
Flushing Paths.
Flushing Dirs.
Flushing FileCache.
Flushing Tools.
Flushing Compiler.
Flushing UpdateHelp.
Flushing Update.
Flushing COMMUNICATION.
Flushing Communication.
Flushing Slave.
Flushing Master.
Flushing Manager.
Flushing Main.
Flushing Top.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
Slave waiting for master to send work.
