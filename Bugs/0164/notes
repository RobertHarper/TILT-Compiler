Gdb: Scroll Edit 5,$d  status 

Files: |sort

.gdbinit
.gdbinit.old
/n/Local/NOTES.solaris
/n/t/gdb-5.3/gdb/doc/gdb.texinfo
stack-code__2205739
stack-segv

	win cuff/rc
	fn gdb {$home/bin/gdb $*}
	cd $h/t2
	gdb

.gdbinit stops the program before memory is corrupted...
/tmp/labels is used to record the tests we've done in the current function.

• At needgc__10463, we have

	global = 0xe460cc
	rec1 = [global] = 0xeebe0d64
	rec16 = [rec1] = 0xeebe0d20
	ref = [rec16] = 0xeebdc5ec

	allocptr = $g4 = 0xeebe0d08
	alloclimit = $g5 = 0xeebecccc

	allocptr < rec1, rec16 < alloclimit

The GC may have failed to follow the global root.
The GC may have incorrectly set allocptr and alloclimit.

• Memory is corrupted between needgc__10463 and code__10468
(allocating a closure) during the 80th tail call to funtop__2188798
during the first call to Linknil_DOTmakeEntry__code__17285921.

• If you stop VectorEq_DOTanonfun__code__10184 and set a breakpoint
at needgc__10463, then the calls to polyLen have completed and the
status is right.  If you stop and set a breakpoint at code__10475,
then that breakpoint does not fire and you stop at the next
invocation.  GDB 4.xx is buggy.

• The following note is incorrect.  Apparantly GDB 4.xx has trouble with
breakpoints.  I can single-step through the calls to polyLen with no
problem but if I try to set breakpoints at LINKUNIT_DOT__303 or at the
labels that follow the calls, things get confused.

[WRONG] The call to closure ml_polyLen__INT (code LINKUNIT_DOT__303) at

	/n/tilt/Basis/TM/mapfile/U/VectorEq/sparc/asm:285,289

is broken.  A breakpoint fires at the top of the caller
(VectorEq_DOTanonfun__code__10184) rather than after the call (code__10475).
When this breakpoint fires, memory is corrupt.

	/n/tilt/Rt/tortl.sml:/linkUnitbnds
	/n/tilt/Nil/optimize.sml:/generate

• Memory is corrupted between sumarm__2188827 and code__2205755 (closure
call to VectorEq_DOTanonfun__code__10184) during the 80th tail call to
funtop__2188798 during the first call to Linknil_DOTmakeEntry__code__17285921.
	/n/tilt/Basis/TM/mapfile/U/VectorEq/sparc/asm
	/n/tilt/Basis/vector_eq.sml

• Memory is corrupted during the 80th tail call to funtop__2188798 during
the first call to Linknil_DOTmakeEntry__code__17285921.
	/n/tilt/Util/TM/mapfile-util/U/Listops/sparc/asm
	/n/tilt/Util/listops.sml:/assoc_eq

• There was a problem with my debugging technique.  I was noticing
when the pointers leading up to the ref cell became invalid rather than when
they changed.  I redefined my "status" command and quickly checked my earlier work.
The problem is in assoc_eq.  The following two notes from yesterday are incorrect;
subsequent notes are correct.

[WRONG] Memory is corrupted between sumarm__2188827 and code__2205755 (closure
call to VectorEq_DOTanonfun__code__10184) during the 82nd tail call to
funtop__2188798 during the first call to Linknil_DOTmakeEntry__code__17285921.
	/n/tilt/Basis/TM/mapfile/U/VectorEq/sparc/asm
	/n/tilt/Basis/vector_eq.sml

[WRONG] Memory is corrupted during the 82nd tail call to funtop__2188798 during
the first call to Linknil_DOTmakeEntry__code__17285921.
	/n/tilt/Util/TM/mapfile-util/U/Listops/sparc/asm
	/n/tilt/Util/listops.sml:/assoc_eq

• Memory is corrupted between code__1938749 and code__1938751 (closure
call to Listops_DOTassoc__eq__inner__code__2164127) during the first call
to Linknil_DOTmakeEntry__code__17285921.
	/n/tilt/Util/TM/mapfile-util/U/Stats/sparc/asm:16473
	/n/tilt/Util/listops.sml

• Memory is corrupted between code__1938372 and code__1938388 (closure
call to Stats_DOTanonfun__code__1920480) during the first call to
Linknil_DOTmakeEntry__code__17285921.
	/n/tilt/Util/TM/mapfile-util/U/Stats/sparc/asm
	/n/tilt/Util/stats.sml

• Memory is corrupted between code__17306767 and code__17306784
(closure call to Stats_DOTanonfun__code__1920559)
during the first call to Linknil_DOTmakeEntry__code__17285921.
	/n/tilt/Nil/TM/mapfile-nil/U/Linknil/sparc/asm

• Memory is not corrupt when the first call to Linknil_DOTmakeEntry__code__17285921
begins but is corrupt when the second call begins.

• Memory is not corrupt when the Linknil initialization begins (link_Linknil_DOTcode).

• Memory is corrupt at GCFromML call from code__2205739 when NumGC == 12.
	/n/tilt/Util/TM/mapfile-util/U/Listops/sparc/asm:23835
this is before Run.run, when NumGC == 16.  This is the first use of that code so a
simple breakpoint works.

• LINKUNIT_DOT__307	poly update

• Trashed in manager when setting LinkIl.LinkIlDiag
LinkIlDiag__11764949

• code__2556597:	GOOD
code__2556636:	BAD

• We are trying to call the static closure at
	Basis/TM/mapfile/U/Prelude/sparc/asm:2790
but the code pointer there has been written with 0.

Symbols:

/n/tilt/Basis/TM/mapfile/U/Prelude/sparc/asm:2790:anonfun__11101:

Files:
	/n/tilt/Basis/TM/mapfile/U/Prelude/sparc/asm:2790
	/n/tilt/Basis/TM/mapfile/U/Prelude/sparc/asm:171
	/n/tilt/Top/TM/mapfile/U/Manager/sparc/asm:6082,6084
	/n/tilt/Top/TM/mapfile/U/Manager/sparc/asm:6426
	/n/tilt/Basis/TM/mapfile/U/List/sparc/asm:1028
	/n/tilt/Top/TM/mapfile/U/Manager/sparc/asm:9075
	/n/tilt/Elaborator/TM/mapfile-elaborate/U/LinkIl/sparc/asm
