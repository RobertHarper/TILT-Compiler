POSIX_IO_Str_writeVec_code_123246
asm/posix-io.sml.s:#28031,#33225
$ml96/Basis/Posix/posix-io.sml:#3124,#3644

Arguments:
	%r8 = 0x100
	%r9 = 0x100
	%r10 = 0xeeb90e34
	%r11 = POSIX_IO_Str_writeVec_code_123246

 ! arguments : [$123248,$8] [$123249,$9] [$121702,$10] [$121703,$11] 
 ...
POSIX_IO_Str_writeVec_code_123246:
	pds Return address is %r15 = $o7 = 0xd2f38.
	pds 0xd2f38 <code_163596+16>: call  %o4
	.proc   07
	mov	%sp, %fp
	sub	%sp, 128, %sp
	ld	[%r2+800], %r16
	cmp	%sp, %r16
	bg	code_126504
	mov	%sp, %fp		pds delay slot (this is another bug; fixed)
	... branch taken ...
code_126504:
	st	%r15, [%sp+92]
	st	%r10, [%sp+112]
code_126452:
funtop_125695:
				pds At this point, I suspect %r11 is bogus.
	ld	[%r11+8], %r16	pds %r11 = $o3 = 0xb4590 = &POSIX_IO_Str_writeVec_code_123246
				psd 0xb4590: 0xbc10000e 0x9c23a080 0xe000a320 0x80a38010
	st	%r16, [%sp+108]	pds %sp + 108 is trash
	ld	[%r11], %r16
	st	%r16, [%sp+104]	pds %sp + 104 is trash
	ld	[%r11+4], %r8	pds %r8 is trash
sumarm_125712:
	cmp	%r8, 0		pds %r8 = 0x9c23a080
	bne	sumarm_125713
	nop
	... branch taken ...
sumarm_125713:
	pds This is the SOME sz clause of writeVec.
	ld	[%sp+104], %r17	pds [%sp+104] = 0x91d02001 = -LARGE
	cmp	%r17, 0
	or	%r0, 1, %r16
	st	%r16, [%sp+96]
	bge	cmpsi_126473
	... not taken ...
	nop
code_126474:
	or	%r0, 0, %r16
	st	%r16, [%sp+96]
cmpsi_126473:
	ld	[%r8], %r16	pds %r8 = $o0 = 0x9c23a080 = -LARGE
				pds SEGV
