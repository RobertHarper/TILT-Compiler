This is TILT version 1.0.

Please send comments and bug reports to

	til-developers@cs.cmu.edu


INSTALLING TILT
---------------

This release is set up to compile TILT using SML/NJ 110.0.3 or 110.0.7
available from

	http://www.smlnj.org/

The architectures and operating systems supported by TILT are listed
in the manual page (Doc/tilt.txt).  Take a look at the comments and
commands in Makefile and Runtime/Makefile and then try

	make

to compile TILT.  Unsupported architectures can be used as compilation
slaves (for any architecture) but TILT can not generate binaries for
them; on such systems, the final message will be "tilt: unable to
link".

Once make has finished, the scripts Bin/tilt and Bin/tilt-nj will run
TILT out of the current directory; alternatively, you can use

	su
	make install

to copy binaries to the directory PREFIX set in Makefile.


PARALLEL MAKE
-------------

If your machine is fast and has plenty of memory, then you can speed
up the installation of TILT by running extra compilation slaves.

Use "make with-slaves" rather than "make".  If the script
./Bin/tilt-slave works on your platform, then when once make compiles
TILT under SML/NJ, you will see a new window running emacs with four
buffers named *tilt slave n*.  The slaves will contribute to the TILT
compilation jobs that make starts.

An alternative that does not rely on the script ./Bin/tilt-slave is to
compile TILT under SML/NJ and then run TILT slaves by hand:

1. Compile TILT with SML/NJ:

	make heap

2. Open a new window and run

	./Bin/tilt-nj -s

in the current directory.  You can do this a few times.

3.  If you are compiling on a network file system and have spare
machines you want to use as slaves, then repeat steps (1) and (2) on
those machines.

4. Run

	make

to compile TILT.  The slaves will contribute to the TILT compilation
jobs that make starts.


CVS ACCESS
----------

For faster access to bugs (and bug fixes), you can pull TILT from our
CVS server:

	cvs -d :pserver:guest_tilt@cvs.concert.cs.cmu.edu:/cvsroot login
	# Use an empty password

	cvs -d :pserver:guest_tilt@cvs.concert.cs.cmu.edu:/cvsroot checkout ml96

The CVS repository contains a few things that are not in the release:
an old MLRISC backend, some experimental code, regression tests,
benchmarks, a bugs database, and additional (but outdated)
documentation.
